// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesIDRouterRoutesReader is a Reader for the GetDevicesIDRouterRoutes structure.
type GetDevicesIDRouterRoutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesIDRouterRoutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesIDRouterRoutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesIDRouterRoutesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesIDRouterRoutesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesIDRouterRoutesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesIDRouterRoutesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesIDRouterRoutesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesIDRouterRoutesOK creates a GetDevicesIDRouterRoutesOK with default headers values
func NewGetDevicesIDRouterRoutesOK() *GetDevicesIDRouterRoutesOK {
	return &GetDevicesIDRouterRoutesOK{}
}

/* GetDevicesIDRouterRoutesOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesIDRouterRoutesOK struct {
	Payload models.ListOfRouterRoutes
}

func (o *GetDevicesIDRouterRoutesOK) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesOK  %+v", 200, o.Payload)
}
func (o *GetDevicesIDRouterRoutesOK) GetPayload() models.ListOfRouterRoutes {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterRoutesBadRequest creates a GetDevicesIDRouterRoutesBadRequest with default headers values
func NewGetDevicesIDRouterRoutesBadRequest() *GetDevicesIDRouterRoutesBadRequest {
	return &GetDevicesIDRouterRoutesBadRequest{}
}

/* GetDevicesIDRouterRoutesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesIDRouterRoutesBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterRoutesBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesIDRouterRoutesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterRoutesUnauthorized creates a GetDevicesIDRouterRoutesUnauthorized with default headers values
func NewGetDevicesIDRouterRoutesUnauthorized() *GetDevicesIDRouterRoutesUnauthorized {
	return &GetDevicesIDRouterRoutesUnauthorized{}
}

/* GetDevicesIDRouterRoutesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesIDRouterRoutesUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterRoutesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesIDRouterRoutesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterRoutesForbidden creates a GetDevicesIDRouterRoutesForbidden with default headers values
func NewGetDevicesIDRouterRoutesForbidden() *GetDevicesIDRouterRoutesForbidden {
	return &GetDevicesIDRouterRoutesForbidden{}
}

/* GetDevicesIDRouterRoutesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesIDRouterRoutesForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterRoutesForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesIDRouterRoutesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterRoutesNotFound creates a GetDevicesIDRouterRoutesNotFound with default headers values
func NewGetDevicesIDRouterRoutesNotFound() *GetDevicesIDRouterRoutesNotFound {
	return &GetDevicesIDRouterRoutesNotFound{}
}

/* GetDevicesIDRouterRoutesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesIDRouterRoutesNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterRoutesNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesIDRouterRoutesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterRoutesInternalServerError creates a GetDevicesIDRouterRoutesInternalServerError with default headers values
func NewGetDevicesIDRouterRoutesInternalServerError() *GetDevicesIDRouterRoutesInternalServerError {
	return &GetDevicesIDRouterRoutesInternalServerError{}
}

/* GetDevicesIDRouterRoutesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesIDRouterRoutesInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterRoutesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/routes][%d] getDevicesIdRouterRoutesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesIDRouterRoutesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterRoutesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
