// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesDeviceidBackupsReader is a Reader for the GetDevicesDeviceidBackups structure.
type GetDevicesDeviceidBackupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDeviceidBackupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesDeviceidBackupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesDeviceidBackupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesDeviceidBackupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesDeviceidBackupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesDeviceidBackupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesDeviceidBackupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesDeviceidBackupsOK creates a GetDevicesDeviceidBackupsOK with default headers values
func NewGetDevicesDeviceidBackupsOK() *GetDevicesDeviceidBackupsOK {
	return &GetDevicesDeviceidBackupsOK{}
}

/* GetDevicesDeviceidBackupsOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesDeviceidBackupsOK struct {
	Payload models.DeviceBackupList
}

func (o *GetDevicesDeviceidBackupsOK) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsOK  %+v", 200, o.Payload)
}
func (o *GetDevicesDeviceidBackupsOK) GetPayload() models.DeviceBackupList {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidBackupsBadRequest creates a GetDevicesDeviceidBackupsBadRequest with default headers values
func NewGetDevicesDeviceidBackupsBadRequest() *GetDevicesDeviceidBackupsBadRequest {
	return &GetDevicesDeviceidBackupsBadRequest{}
}

/* GetDevicesDeviceidBackupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesDeviceidBackupsBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidBackupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesDeviceidBackupsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidBackupsUnauthorized creates a GetDevicesDeviceidBackupsUnauthorized with default headers values
func NewGetDevicesDeviceidBackupsUnauthorized() *GetDevicesDeviceidBackupsUnauthorized {
	return &GetDevicesDeviceidBackupsUnauthorized{}
}

/* GetDevicesDeviceidBackupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesDeviceidBackupsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidBackupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesDeviceidBackupsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidBackupsForbidden creates a GetDevicesDeviceidBackupsForbidden with default headers values
func NewGetDevicesDeviceidBackupsForbidden() *GetDevicesDeviceidBackupsForbidden {
	return &GetDevicesDeviceidBackupsForbidden{}
}

/* GetDevicesDeviceidBackupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesDeviceidBackupsForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidBackupsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesDeviceidBackupsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidBackupsNotFound creates a GetDevicesDeviceidBackupsNotFound with default headers values
func NewGetDevicesDeviceidBackupsNotFound() *GetDevicesDeviceidBackupsNotFound {
	return &GetDevicesDeviceidBackupsNotFound{}
}

/* GetDevicesDeviceidBackupsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesDeviceidBackupsNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidBackupsNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesDeviceidBackupsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidBackupsInternalServerError creates a GetDevicesDeviceidBackupsInternalServerError with default headers values
func NewGetDevicesDeviceidBackupsInternalServerError() *GetDevicesDeviceidBackupsInternalServerError {
	return &GetDevicesDeviceidBackupsInternalServerError{}
}

/* GetDevicesDeviceidBackupsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesDeviceidBackupsInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidBackupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/backups][%d] getDevicesDeviceidBackupsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesDeviceidBackupsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidBackupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
