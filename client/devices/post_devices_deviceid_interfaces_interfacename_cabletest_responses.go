// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PostDevicesDeviceidInterfacesInterfacenameCabletestReader is a Reader for the PostDevicesDeviceidInterfacesInterfacenameCabletest structure.
type PostDevicesDeviceidInterfacesInterfacenameCabletestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestOK creates a PostDevicesDeviceidInterfacesInterfacenameCabletestOK with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestOK() *PostDevicesDeviceidInterfacesInterfacenameCabletestOK {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestOK{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestOK struct {
	Payload *models.DataComingFromCableTestOnESDevices
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestOK  %+v", 200, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestOK) GetPayload() *models.DataComingFromCableTestOnESDevices {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataComingFromCableTestOnESDevices)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest creates a PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest() *PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized creates a PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized() *PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestForbidden creates a PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestForbidden() *PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestForbidden  %+v", 403, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestNotFound creates a PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestNotFound() *PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError creates a PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError with default headers values
func NewPostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError() *PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError {
	return &PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError{}
}

/* PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/{interfaceName}/cable-test][%d] postDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesInterfacenameCabletestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
