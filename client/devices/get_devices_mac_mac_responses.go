// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesMacMacReader is a Reader for the GetDevicesMacMac structure.
type GetDevicesMacMacReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesMacMacReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesMacMacOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesMacMacBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesMacMacUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesMacMacForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesMacMacNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesMacMacInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesMacMacOK creates a GetDevicesMacMacOK with default headers values
func NewGetDevicesMacMacOK() *GetDevicesMacMacOK {
	return &GetDevicesMacMacOK{}
}

/* GetDevicesMacMacOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesMacMacOK struct {
	Payload *models.Model25
}

func (o *GetDevicesMacMacOK) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacOK  %+v", 200, o.Payload)
}
func (o *GetDevicesMacMacOK) GetPayload() *models.Model25 {
	return o.Payload
}

func (o *GetDevicesMacMacOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Model25)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesMacMacBadRequest creates a GetDevicesMacMacBadRequest with default headers values
func NewGetDevicesMacMacBadRequest() *GetDevicesMacMacBadRequest {
	return &GetDevicesMacMacBadRequest{}
}

/* GetDevicesMacMacBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesMacMacBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesMacMacBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesMacMacBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesMacMacBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesMacMacUnauthorized creates a GetDevicesMacMacUnauthorized with default headers values
func NewGetDevicesMacMacUnauthorized() *GetDevicesMacMacUnauthorized {
	return &GetDevicesMacMacUnauthorized{}
}

/* GetDevicesMacMacUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesMacMacUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesMacMacUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesMacMacUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesMacMacUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesMacMacForbidden creates a GetDevicesMacMacForbidden with default headers values
func NewGetDevicesMacMacForbidden() *GetDevicesMacMacForbidden {
	return &GetDevicesMacMacForbidden{}
}

/* GetDevicesMacMacForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesMacMacForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesMacMacForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesMacMacForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesMacMacForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesMacMacNotFound creates a GetDevicesMacMacNotFound with default headers values
func NewGetDevicesMacMacNotFound() *GetDevicesMacMacNotFound {
	return &GetDevicesMacMacNotFound{}
}

/* GetDevicesMacMacNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesMacMacNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesMacMacNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesMacMacNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesMacMacNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesMacMacInternalServerError creates a GetDevicesMacMacInternalServerError with default headers values
func NewGetDevicesMacMacInternalServerError() *GetDevicesMacMacInternalServerError {
	return &GetDevicesMacMacInternalServerError{}
}

/* GetDevicesMacMacInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesMacMacInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesMacMacInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/mac/{mac}][%d] getDevicesMacMacInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesMacMacInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesMacMacInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
