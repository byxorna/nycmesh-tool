// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesUisprsIDDhcpServersServernameReader is a Reader for the GetDevicesUisprsIDDhcpServersServername structure.
type GetDevicesUisprsIDDhcpServersServernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesUisprsIDDhcpServersServernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesUisprsIDDhcpServersServernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesUisprsIDDhcpServersServernameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesUisprsIDDhcpServersServernameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesUisprsIDDhcpServersServernameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesUisprsIDDhcpServersServernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesUisprsIDDhcpServersServernameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesUisprsIDDhcpServersServernameOK creates a GetDevicesUisprsIDDhcpServersServernameOK with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameOK() *GetDevicesUisprsIDDhcpServersServernameOK {
	return &GetDevicesUisprsIDDhcpServersServernameOK{}
}

/* GetDevicesUisprsIDDhcpServersServernameOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesUisprsIDDhcpServersServernameOK struct {
	Payload models.DHCPServerList2
}

func (o *GetDevicesUisprsIDDhcpServersServernameOK) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameOK  %+v", 200, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameOK) GetPayload() models.DHCPServerList2 {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersServernameBadRequest creates a GetDevicesUisprsIDDhcpServersServernameBadRequest with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameBadRequest() *GetDevicesUisprsIDDhcpServersServernameBadRequest {
	return &GetDevicesUisprsIDDhcpServersServernameBadRequest{}
}

/* GetDevicesUisprsIDDhcpServersServernameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesUisprsIDDhcpServersServernameBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersServernameBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersServernameUnauthorized creates a GetDevicesUisprsIDDhcpServersServernameUnauthorized with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameUnauthorized() *GetDevicesUisprsIDDhcpServersServernameUnauthorized {
	return &GetDevicesUisprsIDDhcpServersServernameUnauthorized{}
}

/* GetDevicesUisprsIDDhcpServersServernameUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesUisprsIDDhcpServersServernameUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersServernameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersServernameForbidden creates a GetDevicesUisprsIDDhcpServersServernameForbidden with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameForbidden() *GetDevicesUisprsIDDhcpServersServernameForbidden {
	return &GetDevicesUisprsIDDhcpServersServernameForbidden{}
}

/* GetDevicesUisprsIDDhcpServersServernameForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesUisprsIDDhcpServersServernameForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersServernameForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersServernameNotFound creates a GetDevicesUisprsIDDhcpServersServernameNotFound with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameNotFound() *GetDevicesUisprsIDDhcpServersServernameNotFound {
	return &GetDevicesUisprsIDDhcpServersServernameNotFound{}
}

/* GetDevicesUisprsIDDhcpServersServernameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesUisprsIDDhcpServersServernameNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersServernameNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersServernameInternalServerError creates a GetDevicesUisprsIDDhcpServersServernameInternalServerError with default headers values
func NewGetDevicesUisprsIDDhcpServersServernameInternalServerError() *GetDevicesUisprsIDDhcpServersServernameInternalServerError {
	return &GetDevicesUisprsIDDhcpServersServernameInternalServerError{}
}

/* GetDevicesUisprsIDDhcpServersServernameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesUisprsIDDhcpServersServernameInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersServernameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] getDevicesUisprsIdDhcpServersServernameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersServernameInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersServernameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
