// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PostDevicesDeviceidInterfacesVlanReader is a Reader for the PostDevicesDeviceidInterfacesVlan structure.
type PostDevicesDeviceidInterfacesVlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidInterfacesVlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidInterfacesVlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidInterfacesVlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidInterfacesVlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidInterfacesVlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidInterfacesVlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidInterfacesVlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesDeviceidInterfacesVlanOK creates a PostDevicesDeviceidInterfacesVlanOK with default headers values
func NewPostDevicesDeviceidInterfacesVlanOK() *PostDevicesDeviceidInterfacesVlanOK {
	return &PostDevicesDeviceidInterfacesVlanOK{}
}

/* PostDevicesDeviceidInterfacesVlanOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesDeviceidInterfacesVlanOK struct {
	Payload *models.DeviceInterfaceSchema
}

func (o *PostDevicesDeviceidInterfacesVlanOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanOK  %+v", 200, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanOK) GetPayload() *models.DeviceInterfaceSchema {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceInterfaceSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesVlanBadRequest creates a PostDevicesDeviceidInterfacesVlanBadRequest with default headers values
func NewPostDevicesDeviceidInterfacesVlanBadRequest() *PostDevicesDeviceidInterfacesVlanBadRequest {
	return &PostDevicesDeviceidInterfacesVlanBadRequest{}
}

/* PostDevicesDeviceidInterfacesVlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesDeviceidInterfacesVlanBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesVlanBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesVlanUnauthorized creates a PostDevicesDeviceidInterfacesVlanUnauthorized with default headers values
func NewPostDevicesDeviceidInterfacesVlanUnauthorized() *PostDevicesDeviceidInterfacesVlanUnauthorized {
	return &PostDevicesDeviceidInterfacesVlanUnauthorized{}
}

/* PostDevicesDeviceidInterfacesVlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesDeviceidInterfacesVlanUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesVlanUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesVlanForbidden creates a PostDevicesDeviceidInterfacesVlanForbidden with default headers values
func NewPostDevicesDeviceidInterfacesVlanForbidden() *PostDevicesDeviceidInterfacesVlanForbidden {
	return &PostDevicesDeviceidInterfacesVlanForbidden{}
}

/* PostDevicesDeviceidInterfacesVlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDevicesDeviceidInterfacesVlanForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesVlanForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanForbidden  %+v", 403, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesVlanNotFound creates a PostDevicesDeviceidInterfacesVlanNotFound with default headers values
func NewPostDevicesDeviceidInterfacesVlanNotFound() *PostDevicesDeviceidInterfacesVlanNotFound {
	return &PostDevicesDeviceidInterfacesVlanNotFound{}
}

/* PostDevicesDeviceidInterfacesVlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesDeviceidInterfacesVlanNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesVlanNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesVlanInternalServerError creates a PostDevicesDeviceidInterfacesVlanInternalServerError with default headers values
func NewPostDevicesDeviceidInterfacesVlanInternalServerError() *PostDevicesDeviceidInterfacesVlanInternalServerError {
	return &PostDevicesDeviceidInterfacesVlanInternalServerError{}
}

/* PostDevicesDeviceidInterfacesVlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesDeviceidInterfacesVlanInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesVlanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/vlan][%d] postDevicesDeviceidInterfacesVlanInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesVlanInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesVlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
