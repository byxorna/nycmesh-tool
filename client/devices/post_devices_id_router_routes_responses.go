// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PostDevicesIDRouterRoutesReader is a Reader for the PostDevicesIDRouterRoutes structure.
type PostDevicesIDRouterRoutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesIDRouterRoutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesIDRouterRoutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesIDRouterRoutesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesIDRouterRoutesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesIDRouterRoutesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesIDRouterRoutesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesIDRouterRoutesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesIDRouterRoutesOK creates a PostDevicesIDRouterRoutesOK with default headers values
func NewPostDevicesIDRouterRoutesOK() *PostDevicesIDRouterRoutesOK {
	return &PostDevicesIDRouterRoutesOK{}
}

/* PostDevicesIDRouterRoutesOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesIDRouterRoutesOK struct {
	Payload *models.RouterRoute
}

func (o *PostDevicesIDRouterRoutesOK) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesOK  %+v", 200, o.Payload)
}
func (o *PostDevicesIDRouterRoutesOK) GetPayload() *models.RouterRoute {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouterRoute)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRouterRoutesBadRequest creates a PostDevicesIDRouterRoutesBadRequest with default headers values
func NewPostDevicesIDRouterRoutesBadRequest() *PostDevicesIDRouterRoutesBadRequest {
	return &PostDevicesIDRouterRoutesBadRequest{}
}

/* PostDevicesIDRouterRoutesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesIDRouterRoutesBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesIDRouterRoutesBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesIDRouterRoutesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRouterRoutesUnauthorized creates a PostDevicesIDRouterRoutesUnauthorized with default headers values
func NewPostDevicesIDRouterRoutesUnauthorized() *PostDevicesIDRouterRoutesUnauthorized {
	return &PostDevicesIDRouterRoutesUnauthorized{}
}

/* PostDevicesIDRouterRoutesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesIDRouterRoutesUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesIDRouterRoutesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesIDRouterRoutesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRouterRoutesForbidden creates a PostDevicesIDRouterRoutesForbidden with default headers values
func NewPostDevicesIDRouterRoutesForbidden() *PostDevicesIDRouterRoutesForbidden {
	return &PostDevicesIDRouterRoutesForbidden{}
}

/* PostDevicesIDRouterRoutesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDevicesIDRouterRoutesForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesIDRouterRoutesForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesForbidden  %+v", 403, o.Payload)
}
func (o *PostDevicesIDRouterRoutesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRouterRoutesNotFound creates a PostDevicesIDRouterRoutesNotFound with default headers values
func NewPostDevicesIDRouterRoutesNotFound() *PostDevicesIDRouterRoutesNotFound {
	return &PostDevicesIDRouterRoutesNotFound{}
}

/* PostDevicesIDRouterRoutesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesIDRouterRoutesNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesIDRouterRoutesNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesIDRouterRoutesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesIDRouterRoutesInternalServerError creates a PostDevicesIDRouterRoutesInternalServerError with default headers values
func NewPostDevicesIDRouterRoutesInternalServerError() *PostDevicesIDRouterRoutesInternalServerError {
	return &PostDevicesIDRouterRoutesInternalServerError{}
}

/* PostDevicesIDRouterRoutesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesIDRouterRoutesInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesIDRouterRoutesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/router/routes][%d] postDevicesIdRouterRoutesInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesIDRouterRoutesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesIDRouterRoutesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
