// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesDeviceidInterfacesInterfacenameReader is a Reader for the GetDevicesDeviceidInterfacesInterfacename structure.
type GetDevicesDeviceidInterfacesInterfacenameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesDeviceidInterfacesInterfacenameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesDeviceidInterfacesInterfacenameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesDeviceidInterfacesInterfacenameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesDeviceidInterfacesInterfacenameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesDeviceidInterfacesInterfacenameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesDeviceidInterfacesInterfacenameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesDeviceidInterfacesInterfacenameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesDeviceidInterfacesInterfacenameOK creates a GetDevicesDeviceidInterfacesInterfacenameOK with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameOK() *GetDevicesDeviceidInterfacesInterfacenameOK {
	return &GetDevicesDeviceidInterfacesInterfacenameOK{}
}

/* GetDevicesDeviceidInterfacesInterfacenameOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesDeviceidInterfacesInterfacenameOK struct {
	Payload *models.DeviceInterfaceSchema
}

func (o *GetDevicesDeviceidInterfacesInterfacenameOK) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameOK  %+v", 200, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameOK) GetPayload() *models.DeviceInterfaceSchema {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceInterfaceSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInterfacenameBadRequest creates a GetDevicesDeviceidInterfacesInterfacenameBadRequest with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameBadRequest() *GetDevicesDeviceidInterfacesInterfacenameBadRequest {
	return &GetDevicesDeviceidInterfacesInterfacenameBadRequest{}
}

/* GetDevicesDeviceidInterfacesInterfacenameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesDeviceidInterfacesInterfacenameBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInterfacenameBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInterfacenameUnauthorized creates a GetDevicesDeviceidInterfacesInterfacenameUnauthorized with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameUnauthorized() *GetDevicesDeviceidInterfacesInterfacenameUnauthorized {
	return &GetDevicesDeviceidInterfacesInterfacenameUnauthorized{}
}

/* GetDevicesDeviceidInterfacesInterfacenameUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesDeviceidInterfacesInterfacenameUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInterfacenameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInterfacenameForbidden creates a GetDevicesDeviceidInterfacesInterfacenameForbidden with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameForbidden() *GetDevicesDeviceidInterfacesInterfacenameForbidden {
	return &GetDevicesDeviceidInterfacesInterfacenameForbidden{}
}

/* GetDevicesDeviceidInterfacesInterfacenameForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesDeviceidInterfacesInterfacenameForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInterfacenameForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInterfacenameNotFound creates a GetDevicesDeviceidInterfacesInterfacenameNotFound with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameNotFound() *GetDevicesDeviceidInterfacesInterfacenameNotFound {
	return &GetDevicesDeviceidInterfacesInterfacenameNotFound{}
}

/* GetDevicesDeviceidInterfacesInterfacenameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesDeviceidInterfacesInterfacenameNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInterfacenameNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesDeviceidInterfacesInterfacenameInternalServerError creates a GetDevicesDeviceidInterfacesInterfacenameInternalServerError with default headers values
func NewGetDevicesDeviceidInterfacesInterfacenameInternalServerError() *GetDevicesDeviceidInterfacesInterfacenameInternalServerError {
	return &GetDevicesDeviceidInterfacesInterfacenameInternalServerError{}
}

/* GetDevicesDeviceidInterfacesInterfacenameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesDeviceidInterfacesInterfacenameInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesDeviceidInterfacesInterfacenameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{deviceId}/interfaces/{interfaceName}][%d] getDevicesDeviceidInterfacesInterfacenameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesDeviceidInterfacesInterfacenameInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesDeviceidInterfacesInterfacenameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
