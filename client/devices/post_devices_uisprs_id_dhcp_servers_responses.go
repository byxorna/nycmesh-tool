// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PostDevicesUisprsIDDhcpServersReader is a Reader for the PostDevicesUisprsIDDhcpServers structure.
type PostDevicesUisprsIDDhcpServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesUisprsIDDhcpServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesUisprsIDDhcpServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesUisprsIDDhcpServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesUisprsIDDhcpServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesUisprsIDDhcpServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesUisprsIDDhcpServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesUisprsIDDhcpServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesUisprsIDDhcpServersOK creates a PostDevicesUisprsIDDhcpServersOK with default headers values
func NewPostDevicesUisprsIDDhcpServersOK() *PostDevicesUisprsIDDhcpServersOK {
	return &PostDevicesUisprsIDDhcpServersOK{}
}

/* PostDevicesUisprsIDDhcpServersOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesUisprsIDDhcpServersOK struct {
	Payload models.DHCPServerList3
}

func (o *PostDevicesUisprsIDDhcpServersOK) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersOK  %+v", 200, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersOK) GetPayload() models.DHCPServerList3 {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDDhcpServersBadRequest creates a PostDevicesUisprsIDDhcpServersBadRequest with default headers values
func NewPostDevicesUisprsIDDhcpServersBadRequest() *PostDevicesUisprsIDDhcpServersBadRequest {
	return &PostDevicesUisprsIDDhcpServersBadRequest{}
}

/* PostDevicesUisprsIDDhcpServersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesUisprsIDDhcpServersBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDDhcpServersBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDDhcpServersUnauthorized creates a PostDevicesUisprsIDDhcpServersUnauthorized with default headers values
func NewPostDevicesUisprsIDDhcpServersUnauthorized() *PostDevicesUisprsIDDhcpServersUnauthorized {
	return &PostDevicesUisprsIDDhcpServersUnauthorized{}
}

/* PostDevicesUisprsIDDhcpServersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesUisprsIDDhcpServersUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDDhcpServersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDDhcpServersForbidden creates a PostDevicesUisprsIDDhcpServersForbidden with default headers values
func NewPostDevicesUisprsIDDhcpServersForbidden() *PostDevicesUisprsIDDhcpServersForbidden {
	return &PostDevicesUisprsIDDhcpServersForbidden{}
}

/* PostDevicesUisprsIDDhcpServersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDevicesUisprsIDDhcpServersForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDDhcpServersForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersForbidden  %+v", 403, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDDhcpServersNotFound creates a PostDevicesUisprsIDDhcpServersNotFound with default headers values
func NewPostDevicesUisprsIDDhcpServersNotFound() *PostDevicesUisprsIDDhcpServersNotFound {
	return &PostDevicesUisprsIDDhcpServersNotFound{}
}

/* PostDevicesUisprsIDDhcpServersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesUisprsIDDhcpServersNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDDhcpServersNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDDhcpServersInternalServerError creates a PostDevicesUisprsIDDhcpServersInternalServerError with default headers values
func NewPostDevicesUisprsIDDhcpServersInternalServerError() *PostDevicesUisprsIDDhcpServersInternalServerError {
	return &PostDevicesUisprsIDDhcpServersInternalServerError{}
}

/* PostDevicesUisprsIDDhcpServersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesUisprsIDDhcpServersInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDDhcpServersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/dhcp/servers][%d] postDevicesUisprsIdDhcpServersInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesUisprsIDDhcpServersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDDhcpServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
