// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PutDevicesUisprsIDDhcpServersServernameReader is a Reader for the PutDevicesUisprsIDDhcpServersServername structure.
type PutDevicesUisprsIDDhcpServersServernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesUisprsIDDhcpServersServernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesUisprsIDDhcpServersServernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesUisprsIDDhcpServersServernameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesUisprsIDDhcpServersServernameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesUisprsIDDhcpServersServernameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesUisprsIDDhcpServersServernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesUisprsIDDhcpServersServernameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDevicesUisprsIDDhcpServersServernameOK creates a PutDevicesUisprsIDDhcpServersServernameOK with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameOK() *PutDevicesUisprsIDDhcpServersServernameOK {
	return &PutDevicesUisprsIDDhcpServersServernameOK{}
}

/* PutDevicesUisprsIDDhcpServersServernameOK describes a response with status code 200, with default header values.

Successful
*/
type PutDevicesUisprsIDDhcpServersServernameOK struct {
	Payload models.DHCPServerList4
}

func (o *PutDevicesUisprsIDDhcpServersServernameOK) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameOK  %+v", 200, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameOK) GetPayload() models.DHCPServerList4 {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDDhcpServersServernameBadRequest creates a PutDevicesUisprsIDDhcpServersServernameBadRequest with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameBadRequest() *PutDevicesUisprsIDDhcpServersServernameBadRequest {
	return &PutDevicesUisprsIDDhcpServersServernameBadRequest{}
}

/* PutDevicesUisprsIDDhcpServersServernameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDevicesUisprsIDDhcpServersServernameBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDDhcpServersServernameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameBadRequest  %+v", 400, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDDhcpServersServernameUnauthorized creates a PutDevicesUisprsIDDhcpServersServernameUnauthorized with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameUnauthorized() *PutDevicesUisprsIDDhcpServersServernameUnauthorized {
	return &PutDevicesUisprsIDDhcpServersServernameUnauthorized{}
}

/* PutDevicesUisprsIDDhcpServersServernameUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDevicesUisprsIDDhcpServersServernameUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDDhcpServersServernameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameUnauthorized  %+v", 401, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDDhcpServersServernameForbidden creates a PutDevicesUisprsIDDhcpServersServernameForbidden with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameForbidden() *PutDevicesUisprsIDDhcpServersServernameForbidden {
	return &PutDevicesUisprsIDDhcpServersServernameForbidden{}
}

/* PutDevicesUisprsIDDhcpServersServernameForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutDevicesUisprsIDDhcpServersServernameForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDDhcpServersServernameForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameForbidden  %+v", 403, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDDhcpServersServernameNotFound creates a PutDevicesUisprsIDDhcpServersServernameNotFound with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameNotFound() *PutDevicesUisprsIDDhcpServersServernameNotFound {
	return &PutDevicesUisprsIDDhcpServersServernameNotFound{}
}

/* PutDevicesUisprsIDDhcpServersServernameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDevicesUisprsIDDhcpServersServernameNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDDhcpServersServernameNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameNotFound  %+v", 404, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDDhcpServersServernameInternalServerError creates a PutDevicesUisprsIDDhcpServersServernameInternalServerError with default headers values
func NewPutDevicesUisprsIDDhcpServersServernameInternalServerError() *PutDevicesUisprsIDDhcpServersServernameInternalServerError {
	return &PutDevicesUisprsIDDhcpServersServernameInternalServerError{}
}

/* PutDevicesUisprsIDDhcpServersServernameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDevicesUisprsIDDhcpServersServernameInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDDhcpServersServernameInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/dhcp/servers/{serverName}][%d] putDevicesUisprsIdDhcpServersServernameInternalServerError  %+v", 500, o.Payload)
}
func (o *PutDevicesUisprsIDDhcpServersServernameInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDDhcpServersServernameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
