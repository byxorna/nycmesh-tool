// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAirlinkProxyRainfallr001mapParams creates a new GetAirlinkProxyRainfallr001mapParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAirlinkProxyRainfallr001mapParams() *GetAirlinkProxyRainfallr001mapParams {
	return &GetAirlinkProxyRainfallr001mapParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAirlinkProxyRainfallr001mapParamsWithTimeout creates a new GetAirlinkProxyRainfallr001mapParams object
// with the ability to set a timeout on a request.
func NewGetAirlinkProxyRainfallr001mapParamsWithTimeout(timeout time.Duration) *GetAirlinkProxyRainfallr001mapParams {
	return &GetAirlinkProxyRainfallr001mapParams{
		timeout: timeout,
	}
}

// NewGetAirlinkProxyRainfallr001mapParamsWithContext creates a new GetAirlinkProxyRainfallr001mapParams object
// with the ability to set a context for a request.
func NewGetAirlinkProxyRainfallr001mapParamsWithContext(ctx context.Context) *GetAirlinkProxyRainfallr001mapParams {
	return &GetAirlinkProxyRainfallr001mapParams{
		Context: ctx,
	}
}

// NewGetAirlinkProxyRainfallr001mapParamsWithHTTPClient creates a new GetAirlinkProxyRainfallr001mapParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAirlinkProxyRainfallr001mapParamsWithHTTPClient(client *http.Client) *GetAirlinkProxyRainfallr001mapParams {
	return &GetAirlinkProxyRainfallr001mapParams{
		HTTPClient: client,
	}
}

/* GetAirlinkProxyRainfallr001mapParams contains all the parameters to send to the API endpoint
   for the get airlink proxy rainfallr001map operation.

   Typically these are written to a http.Request.
*/
type GetAirlinkProxyRainfallr001mapParams struct {

	/* Version.

	   Rainfall map file version.

	   Default: 1
	*/
	Version *float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get airlink proxy rainfallr001map params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAirlinkProxyRainfallr001mapParams) WithDefaults() *GetAirlinkProxyRainfallr001mapParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get airlink proxy rainfallr001map params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAirlinkProxyRainfallr001mapParams) SetDefaults() {
	var (
		versionDefault = float64(1)
	)

	val := GetAirlinkProxyRainfallr001mapParams{
		Version: &versionDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) WithTimeout(timeout time.Duration) *GetAirlinkProxyRainfallr001mapParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) WithContext(ctx context.Context) *GetAirlinkProxyRainfallr001mapParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) WithHTTPClient(client *http.Client) *GetAirlinkProxyRainfallr001mapParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVersion adds the version to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) WithVersion(version *float64) *GetAirlinkProxyRainfallr001mapParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get airlink proxy rainfallr001map params
func (o *GetAirlinkProxyRainfallr001mapParams) SetVersion(version *float64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetAirlinkProxyRainfallr001mapParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Version != nil {

		// query param version
		var qrVersion float64

		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := swag.FormatFloat64(qrVersion)
		if qVersion != "" {

			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
