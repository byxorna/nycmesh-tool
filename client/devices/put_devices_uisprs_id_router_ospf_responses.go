// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PutDevicesUisprsIDRouterOspfReader is a Reader for the PutDevicesUisprsIDRouterOspf structure.
type PutDevicesUisprsIDRouterOspfReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesUisprsIDRouterOspfReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesUisprsIDRouterOspfOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesUisprsIDRouterOspfBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesUisprsIDRouterOspfUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesUisprsIDRouterOspfForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesUisprsIDRouterOspfNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesUisprsIDRouterOspfInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDevicesUisprsIDRouterOspfOK creates a PutDevicesUisprsIDRouterOspfOK with default headers values
func NewPutDevicesUisprsIDRouterOspfOK() *PutDevicesUisprsIDRouterOspfOK {
	return &PutDevicesUisprsIDRouterOspfOK{}
}

/* PutDevicesUisprsIDRouterOspfOK describes a response with status code 200, with default header values.

Successful
*/
type PutDevicesUisprsIDRouterOspfOK struct {
	Payload *models.UispROspf
}

func (o *PutDevicesUisprsIDRouterOspfOK) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfOK  %+v", 200, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfOK) GetPayload() *models.UispROspf {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UispROspf)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDRouterOspfBadRequest creates a PutDevicesUisprsIDRouterOspfBadRequest with default headers values
func NewPutDevicesUisprsIDRouterOspfBadRequest() *PutDevicesUisprsIDRouterOspfBadRequest {
	return &PutDevicesUisprsIDRouterOspfBadRequest{}
}

/* PutDevicesUisprsIDRouterOspfBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDevicesUisprsIDRouterOspfBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDRouterOspfBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfBadRequest  %+v", 400, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDRouterOspfUnauthorized creates a PutDevicesUisprsIDRouterOspfUnauthorized with default headers values
func NewPutDevicesUisprsIDRouterOspfUnauthorized() *PutDevicesUisprsIDRouterOspfUnauthorized {
	return &PutDevicesUisprsIDRouterOspfUnauthorized{}
}

/* PutDevicesUisprsIDRouterOspfUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDevicesUisprsIDRouterOspfUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDRouterOspfUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfUnauthorized  %+v", 401, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDRouterOspfForbidden creates a PutDevicesUisprsIDRouterOspfForbidden with default headers values
func NewPutDevicesUisprsIDRouterOspfForbidden() *PutDevicesUisprsIDRouterOspfForbidden {
	return &PutDevicesUisprsIDRouterOspfForbidden{}
}

/* PutDevicesUisprsIDRouterOspfForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutDevicesUisprsIDRouterOspfForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDRouterOspfForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfForbidden  %+v", 403, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDRouterOspfNotFound creates a PutDevicesUisprsIDRouterOspfNotFound with default headers values
func NewPutDevicesUisprsIDRouterOspfNotFound() *PutDevicesUisprsIDRouterOspfNotFound {
	return &PutDevicesUisprsIDRouterOspfNotFound{}
}

/* PutDevicesUisprsIDRouterOspfNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDevicesUisprsIDRouterOspfNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDRouterOspfNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfNotFound  %+v", 404, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDRouterOspfInternalServerError creates a PutDevicesUisprsIDRouterOspfInternalServerError with default headers values
func NewPutDevicesUisprsIDRouterOspfInternalServerError() *PutDevicesUisprsIDRouterOspfInternalServerError {
	return &PutDevicesUisprsIDRouterOspfInternalServerError{}
}

/* PutDevicesUisprsIDRouterOspfInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDevicesUisprsIDRouterOspfInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDRouterOspfInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/router/ospf][%d] putDevicesUisprsIdRouterOspfInternalServerError  %+v", 500, o.Payload)
}
func (o *PutDevicesUisprsIDRouterOspfInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDRouterOspfInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
