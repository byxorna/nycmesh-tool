// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PostDevicesDeviceidInterfacesLagReader is a Reader for the PostDevicesDeviceidInterfacesLag structure.
type PostDevicesDeviceidInterfacesLagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesDeviceidInterfacesLagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesDeviceidInterfacesLagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesDeviceidInterfacesLagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesDeviceidInterfacesLagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDevicesDeviceidInterfacesLagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesDeviceidInterfacesLagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesDeviceidInterfacesLagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesDeviceidInterfacesLagOK creates a PostDevicesDeviceidInterfacesLagOK with default headers values
func NewPostDevicesDeviceidInterfacesLagOK() *PostDevicesDeviceidInterfacesLagOK {
	return &PostDevicesDeviceidInterfacesLagOK{}
}

/* PostDevicesDeviceidInterfacesLagOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesDeviceidInterfacesLagOK struct {
	Payload *models.DeviceInterfaceSchema
}

func (o *PostDevicesDeviceidInterfacesLagOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagOK  %+v", 200, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagOK) GetPayload() *models.DeviceInterfaceSchema {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceInterfaceSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesLagBadRequest creates a PostDevicesDeviceidInterfacesLagBadRequest with default headers values
func NewPostDevicesDeviceidInterfacesLagBadRequest() *PostDevicesDeviceidInterfacesLagBadRequest {
	return &PostDevicesDeviceidInterfacesLagBadRequest{}
}

/* PostDevicesDeviceidInterfacesLagBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesDeviceidInterfacesLagBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesLagBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesLagUnauthorized creates a PostDevicesDeviceidInterfacesLagUnauthorized with default headers values
func NewPostDevicesDeviceidInterfacesLagUnauthorized() *PostDevicesDeviceidInterfacesLagUnauthorized {
	return &PostDevicesDeviceidInterfacesLagUnauthorized{}
}

/* PostDevicesDeviceidInterfacesLagUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesDeviceidInterfacesLagUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesLagUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesLagForbidden creates a PostDevicesDeviceidInterfacesLagForbidden with default headers values
func NewPostDevicesDeviceidInterfacesLagForbidden() *PostDevicesDeviceidInterfacesLagForbidden {
	return &PostDevicesDeviceidInterfacesLagForbidden{}
}

/* PostDevicesDeviceidInterfacesLagForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostDevicesDeviceidInterfacesLagForbidden struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesLagForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagForbidden  %+v", 403, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesLagNotFound creates a PostDevicesDeviceidInterfacesLagNotFound with default headers values
func NewPostDevicesDeviceidInterfacesLagNotFound() *PostDevicesDeviceidInterfacesLagNotFound {
	return &PostDevicesDeviceidInterfacesLagNotFound{}
}

/* PostDevicesDeviceidInterfacesLagNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesDeviceidInterfacesLagNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesLagNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesDeviceidInterfacesLagInternalServerError creates a PostDevicesDeviceidInterfacesLagInternalServerError with default headers values
func NewPostDevicesDeviceidInterfacesLagInternalServerError() *PostDevicesDeviceidInterfacesLagInternalServerError {
	return &PostDevicesDeviceidInterfacesLagInternalServerError{}
}

/* PostDevicesDeviceidInterfacesLagInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesDeviceidInterfacesLagInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesDeviceidInterfacesLagInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/interfaces/lag][%d] postDevicesDeviceidInterfacesLagInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesDeviceidInterfacesLagInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesDeviceidInterfacesLagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
