// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetDevicesIDRouterOspfAreasReader is a Reader for the GetDevicesIDRouterOspfAreas structure.
type GetDevicesIDRouterOspfAreasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesIDRouterOspfAreasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesIDRouterOspfAreasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesIDRouterOspfAreasBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesIDRouterOspfAreasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesIDRouterOspfAreasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesIDRouterOspfAreasNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesIDRouterOspfAreasInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesIDRouterOspfAreasOK creates a GetDevicesIDRouterOspfAreasOK with default headers values
func NewGetDevicesIDRouterOspfAreasOK() *GetDevicesIDRouterOspfAreasOK {
	return &GetDevicesIDRouterOspfAreasOK{}
}

/* GetDevicesIDRouterOspfAreasOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesIDRouterOspfAreasOK struct {
	Payload string
}

func (o *GetDevicesIDRouterOspfAreasOK) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasOK  %+v", 200, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasOK) GetPayload() string {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterOspfAreasBadRequest creates a GetDevicesIDRouterOspfAreasBadRequest with default headers values
func NewGetDevicesIDRouterOspfAreasBadRequest() *GetDevicesIDRouterOspfAreasBadRequest {
	return &GetDevicesIDRouterOspfAreasBadRequest{}
}

/* GetDevicesIDRouterOspfAreasBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesIDRouterOspfAreasBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterOspfAreasBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterOspfAreasUnauthorized creates a GetDevicesIDRouterOspfAreasUnauthorized with default headers values
func NewGetDevicesIDRouterOspfAreasUnauthorized() *GetDevicesIDRouterOspfAreasUnauthorized {
	return &GetDevicesIDRouterOspfAreasUnauthorized{}
}

/* GetDevicesIDRouterOspfAreasUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesIDRouterOspfAreasUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterOspfAreasUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterOspfAreasForbidden creates a GetDevicesIDRouterOspfAreasForbidden with default headers values
func NewGetDevicesIDRouterOspfAreasForbidden() *GetDevicesIDRouterOspfAreasForbidden {
	return &GetDevicesIDRouterOspfAreasForbidden{}
}

/* GetDevicesIDRouterOspfAreasForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesIDRouterOspfAreasForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterOspfAreasForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterOspfAreasNotFound creates a GetDevicesIDRouterOspfAreasNotFound with default headers values
func NewGetDevicesIDRouterOspfAreasNotFound() *GetDevicesIDRouterOspfAreasNotFound {
	return &GetDevicesIDRouterOspfAreasNotFound{}
}

/* GetDevicesIDRouterOspfAreasNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesIDRouterOspfAreasNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterOspfAreasNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesIDRouterOspfAreasInternalServerError creates a GetDevicesIDRouterOspfAreasInternalServerError with default headers values
func NewGetDevicesIDRouterOspfAreasInternalServerError() *GetDevicesIDRouterOspfAreasInternalServerError {
	return &GetDevicesIDRouterOspfAreasInternalServerError{}
}

/* GetDevicesIDRouterOspfAreasInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesIDRouterOspfAreasInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesIDRouterOspfAreasInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/router/ospf/areas][%d] getDevicesIdRouterOspfAreasInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesIDRouterOspfAreasInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesIDRouterOspfAreasInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
