// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// GetAirlinkProxyRainfallr001mapReader is a Reader for the GetAirlinkProxyRainfallr001map structure.
type GetAirlinkProxyRainfallr001mapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAirlinkProxyRainfallr001mapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewGetAirlinkProxyRainfallr001mapBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAirlinkProxyRainfallr001mapUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAirlinkProxyRainfallr001mapForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAirlinkProxyRainfallr001mapInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetAirlinkProxyRainfallr001mapBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAirlinkProxyRainfallr001mapBadRequest creates a GetAirlinkProxyRainfallr001mapBadRequest with default headers values
func NewGetAirlinkProxyRainfallr001mapBadRequest() *GetAirlinkProxyRainfallr001mapBadRequest {
	return &GetAirlinkProxyRainfallr001mapBadRequest{}
}

/* GetAirlinkProxyRainfallr001mapBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAirlinkProxyRainfallr001mapBadRequest struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyRainfallr001mapBadRequest) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/rainfall-r001.map][%d] getAirlinkProxyRainfallr001mapBadRequest  %+v", 400, o.Payload)
}
func (o *GetAirlinkProxyRainfallr001mapBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyRainfallr001mapBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyRainfallr001mapUnauthorized creates a GetAirlinkProxyRainfallr001mapUnauthorized with default headers values
func NewGetAirlinkProxyRainfallr001mapUnauthorized() *GetAirlinkProxyRainfallr001mapUnauthorized {
	return &GetAirlinkProxyRainfallr001mapUnauthorized{}
}

/* GetAirlinkProxyRainfallr001mapUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAirlinkProxyRainfallr001mapUnauthorized struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyRainfallr001mapUnauthorized) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/rainfall-r001.map][%d] getAirlinkProxyRainfallr001mapUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAirlinkProxyRainfallr001mapUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyRainfallr001mapUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyRainfallr001mapForbidden creates a GetAirlinkProxyRainfallr001mapForbidden with default headers values
func NewGetAirlinkProxyRainfallr001mapForbidden() *GetAirlinkProxyRainfallr001mapForbidden {
	return &GetAirlinkProxyRainfallr001mapForbidden{}
}

/* GetAirlinkProxyRainfallr001mapForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAirlinkProxyRainfallr001mapForbidden struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyRainfallr001mapForbidden) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/rainfall-r001.map][%d] getAirlinkProxyRainfallr001mapForbidden  %+v", 403, o.Payload)
}
func (o *GetAirlinkProxyRainfallr001mapForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyRainfallr001mapForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyRainfallr001mapInternalServerError creates a GetAirlinkProxyRainfallr001mapInternalServerError with default headers values
func NewGetAirlinkProxyRainfallr001mapInternalServerError() *GetAirlinkProxyRainfallr001mapInternalServerError {
	return &GetAirlinkProxyRainfallr001mapInternalServerError{}
}

/* GetAirlinkProxyRainfallr001mapInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAirlinkProxyRainfallr001mapInternalServerError struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyRainfallr001mapInternalServerError) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/rainfall-r001.map][%d] getAirlinkProxyRainfallr001mapInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAirlinkProxyRainfallr001mapInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyRainfallr001mapInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinkProxyRainfallr001mapBadGateway creates a GetAirlinkProxyRainfallr001mapBadGateway with default headers values
func NewGetAirlinkProxyRainfallr001mapBadGateway() *GetAirlinkProxyRainfallr001mapBadGateway {
	return &GetAirlinkProxyRainfallr001mapBadGateway{}
}

/* GetAirlinkProxyRainfallr001mapBadGateway describes a response with status code 502, with default header values.

Bad Gateway
*/
type GetAirlinkProxyRainfallr001mapBadGateway struct {
	Payload *models.Error
}

func (o *GetAirlinkProxyRainfallr001mapBadGateway) Error() string {
	return fmt.Sprintf("[GET /airlink/proxy/rainfall-r001.map][%d] getAirlinkProxyRainfallr001mapBadGateway  %+v", 502, o.Payload)
}
func (o *GetAirlinkProxyRainfallr001mapBadGateway) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAirlinkProxyRainfallr001mapBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
