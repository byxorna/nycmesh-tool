// Code generated by go-swagger; DO NOT EDIT.

package installations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/models"
)

// PutInstallationsIDMacReader is a Reader for the PutInstallationsIDMac structure.
type PutInstallationsIDMacReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutInstallationsIDMacReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutInstallationsIDMacOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutInstallationsIDMacUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutInstallationsIDMacForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutInstallationsIDMacInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPutInstallationsIDMacServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutInstallationsIDMacOK creates a PutInstallationsIDMacOK with default headers values
func NewPutInstallationsIDMacOK() *PutInstallationsIDMacOK {
	return &PutInstallationsIDMacOK{}
}

/* PutInstallationsIDMacOK describes a response with status code 200, with default header values.

Successful
*/
type PutInstallationsIDMacOK struct {
	Payload *models.Status
}

func (o *PutInstallationsIDMacOK) Error() string {
	return fmt.Sprintf("[PUT /installations/{id}/{mac}][%d] putInstallationsIdMacOK  %+v", 200, o.Payload)
}
func (o *PutInstallationsIDMacOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutInstallationsIDMacOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInstallationsIDMacUnauthorized creates a PutInstallationsIDMacUnauthorized with default headers values
func NewPutInstallationsIDMacUnauthorized() *PutInstallationsIDMacUnauthorized {
	return &PutInstallationsIDMacUnauthorized{}
}

/* PutInstallationsIDMacUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutInstallationsIDMacUnauthorized struct {
	Payload *models.Error
}

func (o *PutInstallationsIDMacUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /installations/{id}/{mac}][%d] putInstallationsIdMacUnauthorized  %+v", 401, o.Payload)
}
func (o *PutInstallationsIDMacUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutInstallationsIDMacUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInstallationsIDMacForbidden creates a PutInstallationsIDMacForbidden with default headers values
func NewPutInstallationsIDMacForbidden() *PutInstallationsIDMacForbidden {
	return &PutInstallationsIDMacForbidden{}
}

/* PutInstallationsIDMacForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutInstallationsIDMacForbidden struct {
	Payload *models.Error
}

func (o *PutInstallationsIDMacForbidden) Error() string {
	return fmt.Sprintf("[PUT /installations/{id}/{mac}][%d] putInstallationsIdMacForbidden  %+v", 403, o.Payload)
}
func (o *PutInstallationsIDMacForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutInstallationsIDMacForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInstallationsIDMacInternalServerError creates a PutInstallationsIDMacInternalServerError with default headers values
func NewPutInstallationsIDMacInternalServerError() *PutInstallationsIDMacInternalServerError {
	return &PutInstallationsIDMacInternalServerError{}
}

/* PutInstallationsIDMacInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutInstallationsIDMacInternalServerError struct {
	Payload *models.Error
}

func (o *PutInstallationsIDMacInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /installations/{id}/{mac}][%d] putInstallationsIdMacInternalServerError  %+v", 500, o.Payload)
}
func (o *PutInstallationsIDMacInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutInstallationsIDMacInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutInstallationsIDMacServiceUnavailable creates a PutInstallationsIDMacServiceUnavailable with default headers values
func NewPutInstallationsIDMacServiceUnavailable() *PutInstallationsIDMacServiceUnavailable {
	return &PutInstallationsIDMacServiceUnavailable{}
}

/* PutInstallationsIDMacServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable
*/
type PutInstallationsIDMacServiceUnavailable struct {
	Payload *models.Error
}

func (o *PutInstallationsIDMacServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /installations/{id}/{mac}][%d] putInstallationsIdMacServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PutInstallationsIDMacServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutInstallationsIDMacServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
