// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeviceIdentification1 Read-only identification attributes.
//
// swagger:model DeviceIdentification 1
type DeviceIdentification1 struct {

	// Device is added to UISP.
	Authorized bool `json:"authorized,omitempty"`

	// category
	// Enum: [optical wired wireless accessories]
	Category string `json:"category,omitempty"`

	// UISP device alias or real name.
	DisplayName string `json:"displayName,omitempty"`

	// In SemVer format.
	FirmwareVersion string `json:"firmwareVersion,omitempty"`

	// hostname
	Hostname string `json:"hostname,omitempty"`

	// Device ID.
	// Example: f7ac9cad-ea28-4390-93c8-7add010e8ee3
	// Required: true
	ID *string `json:"id"`

	// Custom IP address in IPv4 or IPv6 format.
	// Example: 192.168.1.22
	IP string `json:"ip,omitempty"`

	// mac
	// Pattern: ^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$
	Mac string `json:"mac,omitempty"`

	// Short names, for example UF-OLT.
	// Enum: [UF-Nano UF-Loco UF-Wifi UF-Instant UF-OLT UF-OLT4 UISP-R-Pro UISP-R-Lite UNMS-S-Lite UISP-S-Lite UISP-S-Pro UISP-P-Lite UISP-LTE ER-X ER-X-SFP ERLite-3 ERPoe-5 ERPro-8 ER-8 ER-8-XG ER-4 ER-6P ER-12 ER-12P ER-10X EP-R8 EP-R6 EP-S16 ES-12F ES-16-150W ES-24-250W ES-24-500W ES-24-Lite ES-48-500W ES-48-750W ES-48-Lite ES-8-150W ES-16-XG ES-10XP ES-10X ES-18X ES-26X EP-54V-150W EP-24V-72W EP-54V-72W TSW-PoE TSW-PoE PRO ACB-AC ACB-ISP ACB-LOCO AF11FX AF24 AF24HD AF2X AF3X AF4X AF5 AF5U AF5X AF-5XHD AF-LTU LTU-LITE AF-LTU5 LTU-Rocket AFLTULR AF60 AF60-LR WaveAP WaveCPE GBE-LR GBE GBE-Plus GBE-AP R2N R2T R5N R6N R36-GPS RM3-GPS R2N-GPS R5N-GPS R9N-GPS R5T-GPS RM3 R36 R9N N2N N5N N6N NS3 N36 N9N N9S LM2 LM5 B2N B2T B5N B5T BAC AG2 AG2-HP AG5 AG5-HP p2N p5N M25 P2B-400 P5B-300 P5B-300-ISO P5B-400 P5B-400-ISO P5B-620 LB5-120 LB5 N5B N5B-16 N5B-19 N5B-300 N5B-400 N5B-Client N2B N2B-13 N2B-400 PAP LAP-HP LAP AGW AGW-LR AGW-Pro AGW-Installer PB5 PB3 P36 PBM10 NB5 NB2 NB3 B36 NB9 SM5 WM5 IS-M5 Loco5AC NS-5AC R5AC-PTMP R5AC-PTP R5AC-Lite R5AC-PRISM R2AC-Prism R2AC-Gen2 RP-5AC-Gen2 NBE-2AC-13 NBE-5AC-16 NBE-5AC-19 NBE-5AC-Gen2 PBE-5AC-300 PBE-5AC-300-ISO PBE-5AC-400 PBE-5AC-400-ISO PBE-5AC-500 PBE-5AC-500-ISO PBE-5AC-620 PBE-5AC-620-ISO PBE-2AC-400 PBE-2AC-400-ISO PBE-5AC-X-Gen2 PBE-5AC-Gen2 PBE-5AC-ISO-Gen2 PBE-5AC-400-ISO-Gen2 LBE-5AC-16-120 LAP-120 LBE-5AC-23 LBE-5AC-Gen2 LBE-5AC-LR LAP-GPS IS-5AC PS-5AC SolarSwitch SolarPoint BulletAC-IP67 B-DB-AC UNKNOWN]
	Model string `json:"model,omitempty"`

	// Full names, for example UFiber OLT.
	ModelName string `json:"modelName,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Short name, for example e600.
	PlatformID string `json:"platformId,omitempty"`

	// platform name
	// Enum: [UFiber NanoG UFiber Loco UFiber Wifi UFiber Instant UISPRPro UISPRLite UISPS UISPSPro UNMSS UISPLTE UISPPLite e50 e100 e200 e300 e600 e1000 u50 u100 u200 u300 u1000 ESWH ESGH ES ESX EP EPX SW ACB WA 2WA XC 2XC XW XM TI GBE AirGW AirGWP AF AF02 AF06 AF07 AF08 AF09 af5xhd afltu lturocket GP ltu60 SunMax UNKNOWN]
	PlatformName string `json:"platformName,omitempty"`

	// role
	// Enum: [router switch gpon ap station other ups server wireless convertor gateway]
	Role string `json:"role,omitempty"`

	// serial number
	SerialNumber string `json:"serialNumber,omitempty"`

	// site
	Site *Site `json:"site,omitempty"`

	// started
	// Format: date-time
	Started strfmt.DateTime `json:"started,omitempty"`

	// Status of the station.
	// Example: active
	// Enum: [active connecting discovered inactive disabled disconnected unauthorized proposed unknown unplaced custom]
	Status string `json:"status,omitempty"`

	// type
	// Enum: [onu olt uispp uispr uisps uispLte erouter eswitch epower airCube airMax airFiber toughSwitch solarBeam wave blackBox]
	Type string `json:"type,omitempty"`

	// updated
	// Format: date-time
	Updated strfmt.DateTime `json:"updated,omitempty"`

	// wan interface Id
	WanInterfaceID string `json:"wanInterfaceId,omitempty"`
}

// Validate validates this device identification 1
func (m *DeviceIdentification1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMac(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatformName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSite(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStarted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var deviceIdentification1TypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["optical","wired","wireless","accessories"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypeCategoryPropEnum = append(deviceIdentification1TypeCategoryPropEnum, v)
	}
}

const (

	// DeviceIdentification1CategoryOptical captures enum value "optical"
	DeviceIdentification1CategoryOptical string = "optical"

	// DeviceIdentification1CategoryWired captures enum value "wired"
	DeviceIdentification1CategoryWired string = "wired"

	// DeviceIdentification1CategoryWireless captures enum value "wireless"
	DeviceIdentification1CategoryWireless string = "wireless"

	// DeviceIdentification1CategoryAccessories captures enum value "accessories"
	DeviceIdentification1CategoryAccessories string = "accessories"
)

// prop value enum
func (m *DeviceIdentification1) validateCategoryEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypeCategoryPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validateCategory(formats strfmt.Registry) error {
	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification1) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification1) validateMac(formats strfmt.Registry) error {
	if swag.IsZero(m.Mac) { // not required
		return nil
	}

	if err := validate.Pattern("mac", "body", m.Mac, `^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$`); err != nil {
		return err
	}

	return nil
}

var deviceIdentification1TypeModelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UF-Nano","UF-Loco","UF-Wifi","UF-Instant","UF-OLT","UF-OLT4","UISP-R-Pro","UISP-R-Lite","UNMS-S-Lite","UISP-S-Lite","UISP-S-Pro","UISP-P-Lite","UISP-LTE","ER-X","ER-X-SFP","ERLite-3","ERPoe-5","ERPro-8","ER-8","ER-8-XG","ER-4","ER-6P","ER-12","ER-12P","ER-10X","EP-R8","EP-R6","EP-S16","ES-12F","ES-16-150W","ES-24-250W","ES-24-500W","ES-24-Lite","ES-48-500W","ES-48-750W","ES-48-Lite","ES-8-150W","ES-16-XG","ES-10XP","ES-10X","ES-18X","ES-26X","EP-54V-150W","EP-24V-72W","EP-54V-72W","TSW-PoE","TSW-PoE PRO","ACB-AC","ACB-ISP","ACB-LOCO","AF11FX","AF24","AF24HD","AF2X","AF3X","AF4X","AF5","AF5U","AF5X","AF-5XHD","AF-LTU","LTU-LITE","AF-LTU5","LTU-Rocket","AFLTULR","AF60","AF60-LR","WaveAP","WaveCPE","GBE-LR","GBE","GBE-Plus","GBE-AP","R2N","R2T","R5N","R6N","R36-GPS","RM3-GPS","R2N-GPS","R5N-GPS","R9N-GPS","R5T-GPS","RM3","R36","R9N","N2N","N5N","N6N","NS3","N36","N9N","N9S","LM2","LM5","B2N","B2T","B5N","B5T","BAC","AG2","AG2-HP","AG5","AG5-HP","p2N","p5N","M25","P2B-400","P5B-300","P5B-300-ISO","P5B-400","P5B-400-ISO","P5B-620","LB5-120","LB5","N5B","N5B-16","N5B-19","N5B-300","N5B-400","N5B-Client","N2B","N2B-13","N2B-400","PAP","LAP-HP","LAP","AGW","AGW-LR","AGW-Pro","AGW-Installer","PB5","PB3","P36","PBM10","NB5","NB2","NB3","B36","NB9","SM5","WM5","IS-M5","Loco5AC","NS-5AC","R5AC-PTMP","R5AC-PTP","R5AC-Lite","R5AC-PRISM","R2AC-Prism","R2AC-Gen2","RP-5AC-Gen2","NBE-2AC-13","NBE-5AC-16","NBE-5AC-19","NBE-5AC-Gen2","PBE-5AC-300","PBE-5AC-300-ISO","PBE-5AC-400","PBE-5AC-400-ISO","PBE-5AC-500","PBE-5AC-500-ISO","PBE-5AC-620","PBE-5AC-620-ISO","PBE-2AC-400","PBE-2AC-400-ISO","PBE-5AC-X-Gen2","PBE-5AC-Gen2","PBE-5AC-ISO-Gen2","PBE-5AC-400-ISO-Gen2","LBE-5AC-16-120","LAP-120","LBE-5AC-23","LBE-5AC-Gen2","LBE-5AC-LR","LAP-GPS","IS-5AC","PS-5AC","SolarSwitch","SolarPoint","BulletAC-IP67","B-DB-AC","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypeModelPropEnum = append(deviceIdentification1TypeModelPropEnum, v)
	}
}

const (

	// DeviceIdentification1ModelUFDashNano captures enum value "UF-Nano"
	DeviceIdentification1ModelUFDashNano string = "UF-Nano"

	// DeviceIdentification1ModelUFDashLoco captures enum value "UF-Loco"
	DeviceIdentification1ModelUFDashLoco string = "UF-Loco"

	// DeviceIdentification1ModelUFDashWifi captures enum value "UF-Wifi"
	DeviceIdentification1ModelUFDashWifi string = "UF-Wifi"

	// DeviceIdentification1ModelUFDashInstant captures enum value "UF-Instant"
	DeviceIdentification1ModelUFDashInstant string = "UF-Instant"

	// DeviceIdentification1ModelUFDashOLT captures enum value "UF-OLT"
	DeviceIdentification1ModelUFDashOLT string = "UF-OLT"

	// DeviceIdentification1ModelUFDashOLT4 captures enum value "UF-OLT4"
	DeviceIdentification1ModelUFDashOLT4 string = "UF-OLT4"

	// DeviceIdentification1ModelUISPDashRDashPro captures enum value "UISP-R-Pro"
	DeviceIdentification1ModelUISPDashRDashPro string = "UISP-R-Pro"

	// DeviceIdentification1ModelUISPDashRDashLite captures enum value "UISP-R-Lite"
	DeviceIdentification1ModelUISPDashRDashLite string = "UISP-R-Lite"

	// DeviceIdentification1ModelUNMSDashSDashLite captures enum value "UNMS-S-Lite"
	DeviceIdentification1ModelUNMSDashSDashLite string = "UNMS-S-Lite"

	// DeviceIdentification1ModelUISPDashSDashLite captures enum value "UISP-S-Lite"
	DeviceIdentification1ModelUISPDashSDashLite string = "UISP-S-Lite"

	// DeviceIdentification1ModelUISPDashSDashPro captures enum value "UISP-S-Pro"
	DeviceIdentification1ModelUISPDashSDashPro string = "UISP-S-Pro"

	// DeviceIdentification1ModelUISPDashPDashLite captures enum value "UISP-P-Lite"
	DeviceIdentification1ModelUISPDashPDashLite string = "UISP-P-Lite"

	// DeviceIdentification1ModelUISPDashLTE captures enum value "UISP-LTE"
	DeviceIdentification1ModelUISPDashLTE string = "UISP-LTE"

	// DeviceIdentification1ModelERDashX captures enum value "ER-X"
	DeviceIdentification1ModelERDashX string = "ER-X"

	// DeviceIdentification1ModelERDashXDashSFP captures enum value "ER-X-SFP"
	DeviceIdentification1ModelERDashXDashSFP string = "ER-X-SFP"

	// DeviceIdentification1ModelERLiteDash3 captures enum value "ERLite-3"
	DeviceIdentification1ModelERLiteDash3 string = "ERLite-3"

	// DeviceIdentification1ModelERPoeDash5 captures enum value "ERPoe-5"
	DeviceIdentification1ModelERPoeDash5 string = "ERPoe-5"

	// DeviceIdentification1ModelERProDash8 captures enum value "ERPro-8"
	DeviceIdentification1ModelERProDash8 string = "ERPro-8"

	// DeviceIdentification1ModelERDash8 captures enum value "ER-8"
	DeviceIdentification1ModelERDash8 string = "ER-8"

	// DeviceIdentification1ModelERDash8DashXG captures enum value "ER-8-XG"
	DeviceIdentification1ModelERDash8DashXG string = "ER-8-XG"

	// DeviceIdentification1ModelERDash4 captures enum value "ER-4"
	DeviceIdentification1ModelERDash4 string = "ER-4"

	// DeviceIdentification1ModelERDash6P captures enum value "ER-6P"
	DeviceIdentification1ModelERDash6P string = "ER-6P"

	// DeviceIdentification1ModelERDash12 captures enum value "ER-12"
	DeviceIdentification1ModelERDash12 string = "ER-12"

	// DeviceIdentification1ModelERDash12P captures enum value "ER-12P"
	DeviceIdentification1ModelERDash12P string = "ER-12P"

	// DeviceIdentification1ModelERDash10X captures enum value "ER-10X"
	DeviceIdentification1ModelERDash10X string = "ER-10X"

	// DeviceIdentification1ModelEPDashR8 captures enum value "EP-R8"
	DeviceIdentification1ModelEPDashR8 string = "EP-R8"

	// DeviceIdentification1ModelEPDashR6 captures enum value "EP-R6"
	DeviceIdentification1ModelEPDashR6 string = "EP-R6"

	// DeviceIdentification1ModelEPDashS16 captures enum value "EP-S16"
	DeviceIdentification1ModelEPDashS16 string = "EP-S16"

	// DeviceIdentification1ModelESDash12F captures enum value "ES-12F"
	DeviceIdentification1ModelESDash12F string = "ES-12F"

	// DeviceIdentification1ModelESDash16Dash150W captures enum value "ES-16-150W"
	DeviceIdentification1ModelESDash16Dash150W string = "ES-16-150W"

	// DeviceIdentification1ModelESDash24Dash250W captures enum value "ES-24-250W"
	DeviceIdentification1ModelESDash24Dash250W string = "ES-24-250W"

	// DeviceIdentification1ModelESDash24Dash500W captures enum value "ES-24-500W"
	DeviceIdentification1ModelESDash24Dash500W string = "ES-24-500W"

	// DeviceIdentification1ModelESDash24DashLite captures enum value "ES-24-Lite"
	DeviceIdentification1ModelESDash24DashLite string = "ES-24-Lite"

	// DeviceIdentification1ModelESDash48Dash500W captures enum value "ES-48-500W"
	DeviceIdentification1ModelESDash48Dash500W string = "ES-48-500W"

	// DeviceIdentification1ModelESDash48Dash750W captures enum value "ES-48-750W"
	DeviceIdentification1ModelESDash48Dash750W string = "ES-48-750W"

	// DeviceIdentification1ModelESDash48DashLite captures enum value "ES-48-Lite"
	DeviceIdentification1ModelESDash48DashLite string = "ES-48-Lite"

	// DeviceIdentification1ModelESDash8Dash150W captures enum value "ES-8-150W"
	DeviceIdentification1ModelESDash8Dash150W string = "ES-8-150W"

	// DeviceIdentification1ModelESDash16DashXG captures enum value "ES-16-XG"
	DeviceIdentification1ModelESDash16DashXG string = "ES-16-XG"

	// DeviceIdentification1ModelESDash10XP captures enum value "ES-10XP"
	DeviceIdentification1ModelESDash10XP string = "ES-10XP"

	// DeviceIdentification1ModelESDash10X captures enum value "ES-10X"
	DeviceIdentification1ModelESDash10X string = "ES-10X"

	// DeviceIdentification1ModelESDash18X captures enum value "ES-18X"
	DeviceIdentification1ModelESDash18X string = "ES-18X"

	// DeviceIdentification1ModelESDash26X captures enum value "ES-26X"
	DeviceIdentification1ModelESDash26X string = "ES-26X"

	// DeviceIdentification1ModelEPDash54VDash150W captures enum value "EP-54V-150W"
	DeviceIdentification1ModelEPDash54VDash150W string = "EP-54V-150W"

	// DeviceIdentification1ModelEPDash24VDash72W captures enum value "EP-24V-72W"
	DeviceIdentification1ModelEPDash24VDash72W string = "EP-24V-72W"

	// DeviceIdentification1ModelEPDash54VDash72W captures enum value "EP-54V-72W"
	DeviceIdentification1ModelEPDash54VDash72W string = "EP-54V-72W"

	// DeviceIdentification1ModelTSWDashPoE captures enum value "TSW-PoE"
	DeviceIdentification1ModelTSWDashPoE string = "TSW-PoE"

	// DeviceIdentification1ModelTSWDashPoEPRO captures enum value "TSW-PoE PRO"
	DeviceIdentification1ModelTSWDashPoEPRO string = "TSW-PoE PRO"

	// DeviceIdentification1ModelACBDashAC captures enum value "ACB-AC"
	DeviceIdentification1ModelACBDashAC string = "ACB-AC"

	// DeviceIdentification1ModelACBDashISP captures enum value "ACB-ISP"
	DeviceIdentification1ModelACBDashISP string = "ACB-ISP"

	// DeviceIdentification1ModelACBDashLOCO captures enum value "ACB-LOCO"
	DeviceIdentification1ModelACBDashLOCO string = "ACB-LOCO"

	// DeviceIdentification1ModelAF11FX captures enum value "AF11FX"
	DeviceIdentification1ModelAF11FX string = "AF11FX"

	// DeviceIdentification1ModelAF24 captures enum value "AF24"
	DeviceIdentification1ModelAF24 string = "AF24"

	// DeviceIdentification1ModelAF24HD captures enum value "AF24HD"
	DeviceIdentification1ModelAF24HD string = "AF24HD"

	// DeviceIdentification1ModelAF2X captures enum value "AF2X"
	DeviceIdentification1ModelAF2X string = "AF2X"

	// DeviceIdentification1ModelAF3X captures enum value "AF3X"
	DeviceIdentification1ModelAF3X string = "AF3X"

	// DeviceIdentification1ModelAF4X captures enum value "AF4X"
	DeviceIdentification1ModelAF4X string = "AF4X"

	// DeviceIdentification1ModelAF5 captures enum value "AF5"
	DeviceIdentification1ModelAF5 string = "AF5"

	// DeviceIdentification1ModelAF5U captures enum value "AF5U"
	DeviceIdentification1ModelAF5U string = "AF5U"

	// DeviceIdentification1ModelAF5X captures enum value "AF5X"
	DeviceIdentification1ModelAF5X string = "AF5X"

	// DeviceIdentification1ModelAFDash5XHD captures enum value "AF-5XHD"
	DeviceIdentification1ModelAFDash5XHD string = "AF-5XHD"

	// DeviceIdentification1ModelAFDashLTU captures enum value "AF-LTU"
	DeviceIdentification1ModelAFDashLTU string = "AF-LTU"

	// DeviceIdentification1ModelLTUDashLITE captures enum value "LTU-LITE"
	DeviceIdentification1ModelLTUDashLITE string = "LTU-LITE"

	// DeviceIdentification1ModelAFDashLTU5 captures enum value "AF-LTU5"
	DeviceIdentification1ModelAFDashLTU5 string = "AF-LTU5"

	// DeviceIdentification1ModelLTUDashRocket captures enum value "LTU-Rocket"
	DeviceIdentification1ModelLTUDashRocket string = "LTU-Rocket"

	// DeviceIdentification1ModelAFLTULR captures enum value "AFLTULR"
	DeviceIdentification1ModelAFLTULR string = "AFLTULR"

	// DeviceIdentification1ModelAF60 captures enum value "AF60"
	DeviceIdentification1ModelAF60 string = "AF60"

	// DeviceIdentification1ModelAF60DashLR captures enum value "AF60-LR"
	DeviceIdentification1ModelAF60DashLR string = "AF60-LR"

	// DeviceIdentification1ModelWaveAP captures enum value "WaveAP"
	DeviceIdentification1ModelWaveAP string = "WaveAP"

	// DeviceIdentification1ModelWaveCPE captures enum value "WaveCPE"
	DeviceIdentification1ModelWaveCPE string = "WaveCPE"

	// DeviceIdentification1ModelGBEDashLR captures enum value "GBE-LR"
	DeviceIdentification1ModelGBEDashLR string = "GBE-LR"

	// DeviceIdentification1ModelGBE captures enum value "GBE"
	DeviceIdentification1ModelGBE string = "GBE"

	// DeviceIdentification1ModelGBEDashPlus captures enum value "GBE-Plus"
	DeviceIdentification1ModelGBEDashPlus string = "GBE-Plus"

	// DeviceIdentification1ModelGBEDashAP captures enum value "GBE-AP"
	DeviceIdentification1ModelGBEDashAP string = "GBE-AP"

	// DeviceIdentification1ModelR2N captures enum value "R2N"
	DeviceIdentification1ModelR2N string = "R2N"

	// DeviceIdentification1ModelR2T captures enum value "R2T"
	DeviceIdentification1ModelR2T string = "R2T"

	// DeviceIdentification1ModelR5N captures enum value "R5N"
	DeviceIdentification1ModelR5N string = "R5N"

	// DeviceIdentification1ModelR6N captures enum value "R6N"
	DeviceIdentification1ModelR6N string = "R6N"

	// DeviceIdentification1ModelR36DashGPS captures enum value "R36-GPS"
	DeviceIdentification1ModelR36DashGPS string = "R36-GPS"

	// DeviceIdentification1ModelRM3DashGPS captures enum value "RM3-GPS"
	DeviceIdentification1ModelRM3DashGPS string = "RM3-GPS"

	// DeviceIdentification1ModelR2NDashGPS captures enum value "R2N-GPS"
	DeviceIdentification1ModelR2NDashGPS string = "R2N-GPS"

	// DeviceIdentification1ModelR5NDashGPS captures enum value "R5N-GPS"
	DeviceIdentification1ModelR5NDashGPS string = "R5N-GPS"

	// DeviceIdentification1ModelR9NDashGPS captures enum value "R9N-GPS"
	DeviceIdentification1ModelR9NDashGPS string = "R9N-GPS"

	// DeviceIdentification1ModelR5TDashGPS captures enum value "R5T-GPS"
	DeviceIdentification1ModelR5TDashGPS string = "R5T-GPS"

	// DeviceIdentification1ModelRM3 captures enum value "RM3"
	DeviceIdentification1ModelRM3 string = "RM3"

	// DeviceIdentification1ModelR36 captures enum value "R36"
	DeviceIdentification1ModelR36 string = "R36"

	// DeviceIdentification1ModelR9N captures enum value "R9N"
	DeviceIdentification1ModelR9N string = "R9N"

	// DeviceIdentification1ModelN2N captures enum value "N2N"
	DeviceIdentification1ModelN2N string = "N2N"

	// DeviceIdentification1ModelN5N captures enum value "N5N"
	DeviceIdentification1ModelN5N string = "N5N"

	// DeviceIdentification1ModelN6N captures enum value "N6N"
	DeviceIdentification1ModelN6N string = "N6N"

	// DeviceIdentification1ModelNS3 captures enum value "NS3"
	DeviceIdentification1ModelNS3 string = "NS3"

	// DeviceIdentification1ModelN36 captures enum value "N36"
	DeviceIdentification1ModelN36 string = "N36"

	// DeviceIdentification1ModelN9N captures enum value "N9N"
	DeviceIdentification1ModelN9N string = "N9N"

	// DeviceIdentification1ModelN9S captures enum value "N9S"
	DeviceIdentification1ModelN9S string = "N9S"

	// DeviceIdentification1ModelLM2 captures enum value "LM2"
	DeviceIdentification1ModelLM2 string = "LM2"

	// DeviceIdentification1ModelLM5 captures enum value "LM5"
	DeviceIdentification1ModelLM5 string = "LM5"

	// DeviceIdentification1ModelB2N captures enum value "B2N"
	DeviceIdentification1ModelB2N string = "B2N"

	// DeviceIdentification1ModelB2T captures enum value "B2T"
	DeviceIdentification1ModelB2T string = "B2T"

	// DeviceIdentification1ModelB5N captures enum value "B5N"
	DeviceIdentification1ModelB5N string = "B5N"

	// DeviceIdentification1ModelB5T captures enum value "B5T"
	DeviceIdentification1ModelB5T string = "B5T"

	// DeviceIdentification1ModelBAC captures enum value "BAC"
	DeviceIdentification1ModelBAC string = "BAC"

	// DeviceIdentification1ModelAG2 captures enum value "AG2"
	DeviceIdentification1ModelAG2 string = "AG2"

	// DeviceIdentification1ModelAG2DashHP captures enum value "AG2-HP"
	DeviceIdentification1ModelAG2DashHP string = "AG2-HP"

	// DeviceIdentification1ModelAG5 captures enum value "AG5"
	DeviceIdentification1ModelAG5 string = "AG5"

	// DeviceIdentification1ModelAG5DashHP captures enum value "AG5-HP"
	DeviceIdentification1ModelAG5DashHP string = "AG5-HP"

	// DeviceIdentification1ModelP2N captures enum value "p2N"
	DeviceIdentification1ModelP2N string = "p2N"

	// DeviceIdentification1ModelP5N captures enum value "p5N"
	DeviceIdentification1ModelP5N string = "p5N"

	// DeviceIdentification1ModelM25 captures enum value "M25"
	DeviceIdentification1ModelM25 string = "M25"

	// DeviceIdentification1ModelP2BDash400 captures enum value "P2B-400"
	DeviceIdentification1ModelP2BDash400 string = "P2B-400"

	// DeviceIdentification1ModelP5BDash300 captures enum value "P5B-300"
	DeviceIdentification1ModelP5BDash300 string = "P5B-300"

	// DeviceIdentification1ModelP5BDash300DashISO captures enum value "P5B-300-ISO"
	DeviceIdentification1ModelP5BDash300DashISO string = "P5B-300-ISO"

	// DeviceIdentification1ModelP5BDash400 captures enum value "P5B-400"
	DeviceIdentification1ModelP5BDash400 string = "P5B-400"

	// DeviceIdentification1ModelP5BDash400DashISO captures enum value "P5B-400-ISO"
	DeviceIdentification1ModelP5BDash400DashISO string = "P5B-400-ISO"

	// DeviceIdentification1ModelP5BDash620 captures enum value "P5B-620"
	DeviceIdentification1ModelP5BDash620 string = "P5B-620"

	// DeviceIdentification1ModelLB5Dash120 captures enum value "LB5-120"
	DeviceIdentification1ModelLB5Dash120 string = "LB5-120"

	// DeviceIdentification1ModelLB5 captures enum value "LB5"
	DeviceIdentification1ModelLB5 string = "LB5"

	// DeviceIdentification1ModelN5B captures enum value "N5B"
	DeviceIdentification1ModelN5B string = "N5B"

	// DeviceIdentification1ModelN5BDash16 captures enum value "N5B-16"
	DeviceIdentification1ModelN5BDash16 string = "N5B-16"

	// DeviceIdentification1ModelN5BDash19 captures enum value "N5B-19"
	DeviceIdentification1ModelN5BDash19 string = "N5B-19"

	// DeviceIdentification1ModelN5BDash300 captures enum value "N5B-300"
	DeviceIdentification1ModelN5BDash300 string = "N5B-300"

	// DeviceIdentification1ModelN5BDash400 captures enum value "N5B-400"
	DeviceIdentification1ModelN5BDash400 string = "N5B-400"

	// DeviceIdentification1ModelN5BDashClient captures enum value "N5B-Client"
	DeviceIdentification1ModelN5BDashClient string = "N5B-Client"

	// DeviceIdentification1ModelN2B captures enum value "N2B"
	DeviceIdentification1ModelN2B string = "N2B"

	// DeviceIdentification1ModelN2BDash13 captures enum value "N2B-13"
	DeviceIdentification1ModelN2BDash13 string = "N2B-13"

	// DeviceIdentification1ModelN2BDash400 captures enum value "N2B-400"
	DeviceIdentification1ModelN2BDash400 string = "N2B-400"

	// DeviceIdentification1ModelPAP captures enum value "PAP"
	DeviceIdentification1ModelPAP string = "PAP"

	// DeviceIdentification1ModelLAPDashHP captures enum value "LAP-HP"
	DeviceIdentification1ModelLAPDashHP string = "LAP-HP"

	// DeviceIdentification1ModelLAP captures enum value "LAP"
	DeviceIdentification1ModelLAP string = "LAP"

	// DeviceIdentification1ModelAGW captures enum value "AGW"
	DeviceIdentification1ModelAGW string = "AGW"

	// DeviceIdentification1ModelAGWDashLR captures enum value "AGW-LR"
	DeviceIdentification1ModelAGWDashLR string = "AGW-LR"

	// DeviceIdentification1ModelAGWDashPro captures enum value "AGW-Pro"
	DeviceIdentification1ModelAGWDashPro string = "AGW-Pro"

	// DeviceIdentification1ModelAGWDashInstaller captures enum value "AGW-Installer"
	DeviceIdentification1ModelAGWDashInstaller string = "AGW-Installer"

	// DeviceIdentification1ModelPB5 captures enum value "PB5"
	DeviceIdentification1ModelPB5 string = "PB5"

	// DeviceIdentification1ModelPB3 captures enum value "PB3"
	DeviceIdentification1ModelPB3 string = "PB3"

	// DeviceIdentification1ModelP36 captures enum value "P36"
	DeviceIdentification1ModelP36 string = "P36"

	// DeviceIdentification1ModelPBM10 captures enum value "PBM10"
	DeviceIdentification1ModelPBM10 string = "PBM10"

	// DeviceIdentification1ModelNB5 captures enum value "NB5"
	DeviceIdentification1ModelNB5 string = "NB5"

	// DeviceIdentification1ModelNB2 captures enum value "NB2"
	DeviceIdentification1ModelNB2 string = "NB2"

	// DeviceIdentification1ModelNB3 captures enum value "NB3"
	DeviceIdentification1ModelNB3 string = "NB3"

	// DeviceIdentification1ModelB36 captures enum value "B36"
	DeviceIdentification1ModelB36 string = "B36"

	// DeviceIdentification1ModelNB9 captures enum value "NB9"
	DeviceIdentification1ModelNB9 string = "NB9"

	// DeviceIdentification1ModelSM5 captures enum value "SM5"
	DeviceIdentification1ModelSM5 string = "SM5"

	// DeviceIdentification1ModelWM5 captures enum value "WM5"
	DeviceIdentification1ModelWM5 string = "WM5"

	// DeviceIdentification1ModelISDashM5 captures enum value "IS-M5"
	DeviceIdentification1ModelISDashM5 string = "IS-M5"

	// DeviceIdentification1ModelLoco5AC captures enum value "Loco5AC"
	DeviceIdentification1ModelLoco5AC string = "Loco5AC"

	// DeviceIdentification1ModelNSDash5AC captures enum value "NS-5AC"
	DeviceIdentification1ModelNSDash5AC string = "NS-5AC"

	// DeviceIdentification1ModelR5ACDashPTMP captures enum value "R5AC-PTMP"
	DeviceIdentification1ModelR5ACDashPTMP string = "R5AC-PTMP"

	// DeviceIdentification1ModelR5ACDashPTP captures enum value "R5AC-PTP"
	DeviceIdentification1ModelR5ACDashPTP string = "R5AC-PTP"

	// DeviceIdentification1ModelR5ACDashLite captures enum value "R5AC-Lite"
	DeviceIdentification1ModelR5ACDashLite string = "R5AC-Lite"

	// DeviceIdentification1ModelR5ACDashPRISM captures enum value "R5AC-PRISM"
	DeviceIdentification1ModelR5ACDashPRISM string = "R5AC-PRISM"

	// DeviceIdentification1ModelR2ACDashPrism captures enum value "R2AC-Prism"
	DeviceIdentification1ModelR2ACDashPrism string = "R2AC-Prism"

	// DeviceIdentification1ModelR2ACDashGen2 captures enum value "R2AC-Gen2"
	DeviceIdentification1ModelR2ACDashGen2 string = "R2AC-Gen2"

	// DeviceIdentification1ModelRPDash5ACDashGen2 captures enum value "RP-5AC-Gen2"
	DeviceIdentification1ModelRPDash5ACDashGen2 string = "RP-5AC-Gen2"

	// DeviceIdentification1ModelNBEDash2ACDash13 captures enum value "NBE-2AC-13"
	DeviceIdentification1ModelNBEDash2ACDash13 string = "NBE-2AC-13"

	// DeviceIdentification1ModelNBEDash5ACDash16 captures enum value "NBE-5AC-16"
	DeviceIdentification1ModelNBEDash5ACDash16 string = "NBE-5AC-16"

	// DeviceIdentification1ModelNBEDash5ACDash19 captures enum value "NBE-5AC-19"
	DeviceIdentification1ModelNBEDash5ACDash19 string = "NBE-5AC-19"

	// DeviceIdentification1ModelNBEDash5ACDashGen2 captures enum value "NBE-5AC-Gen2"
	DeviceIdentification1ModelNBEDash5ACDashGen2 string = "NBE-5AC-Gen2"

	// DeviceIdentification1ModelPBEDash5ACDash300 captures enum value "PBE-5AC-300"
	DeviceIdentification1ModelPBEDash5ACDash300 string = "PBE-5AC-300"

	// DeviceIdentification1ModelPBEDash5ACDash300DashISO captures enum value "PBE-5AC-300-ISO"
	DeviceIdentification1ModelPBEDash5ACDash300DashISO string = "PBE-5AC-300-ISO"

	// DeviceIdentification1ModelPBEDash5ACDash400 captures enum value "PBE-5AC-400"
	DeviceIdentification1ModelPBEDash5ACDash400 string = "PBE-5AC-400"

	// DeviceIdentification1ModelPBEDash5ACDash400DashISO captures enum value "PBE-5AC-400-ISO"
	DeviceIdentification1ModelPBEDash5ACDash400DashISO string = "PBE-5AC-400-ISO"

	// DeviceIdentification1ModelPBEDash5ACDash500 captures enum value "PBE-5AC-500"
	DeviceIdentification1ModelPBEDash5ACDash500 string = "PBE-5AC-500"

	// DeviceIdentification1ModelPBEDash5ACDash500DashISO captures enum value "PBE-5AC-500-ISO"
	DeviceIdentification1ModelPBEDash5ACDash500DashISO string = "PBE-5AC-500-ISO"

	// DeviceIdentification1ModelPBEDash5ACDash620 captures enum value "PBE-5AC-620"
	DeviceIdentification1ModelPBEDash5ACDash620 string = "PBE-5AC-620"

	// DeviceIdentification1ModelPBEDash5ACDash620DashISO captures enum value "PBE-5AC-620-ISO"
	DeviceIdentification1ModelPBEDash5ACDash620DashISO string = "PBE-5AC-620-ISO"

	// DeviceIdentification1ModelPBEDash2ACDash400 captures enum value "PBE-2AC-400"
	DeviceIdentification1ModelPBEDash2ACDash400 string = "PBE-2AC-400"

	// DeviceIdentification1ModelPBEDash2ACDash400DashISO captures enum value "PBE-2AC-400-ISO"
	DeviceIdentification1ModelPBEDash2ACDash400DashISO string = "PBE-2AC-400-ISO"

	// DeviceIdentification1ModelPBEDash5ACDashXDashGen2 captures enum value "PBE-5AC-X-Gen2"
	DeviceIdentification1ModelPBEDash5ACDashXDashGen2 string = "PBE-5AC-X-Gen2"

	// DeviceIdentification1ModelPBEDash5ACDashGen2 captures enum value "PBE-5AC-Gen2"
	DeviceIdentification1ModelPBEDash5ACDashGen2 string = "PBE-5AC-Gen2"

	// DeviceIdentification1ModelPBEDash5ACDashISODashGen2 captures enum value "PBE-5AC-ISO-Gen2"
	DeviceIdentification1ModelPBEDash5ACDashISODashGen2 string = "PBE-5AC-ISO-Gen2"

	// DeviceIdentification1ModelPBEDash5ACDash400DashISODashGen2 captures enum value "PBE-5AC-400-ISO-Gen2"
	DeviceIdentification1ModelPBEDash5ACDash400DashISODashGen2 string = "PBE-5AC-400-ISO-Gen2"

	// DeviceIdentification1ModelLBEDash5ACDash16Dash120 captures enum value "LBE-5AC-16-120"
	DeviceIdentification1ModelLBEDash5ACDash16Dash120 string = "LBE-5AC-16-120"

	// DeviceIdentification1ModelLAPDash120 captures enum value "LAP-120"
	DeviceIdentification1ModelLAPDash120 string = "LAP-120"

	// DeviceIdentification1ModelLBEDash5ACDash23 captures enum value "LBE-5AC-23"
	DeviceIdentification1ModelLBEDash5ACDash23 string = "LBE-5AC-23"

	// DeviceIdentification1ModelLBEDash5ACDashGen2 captures enum value "LBE-5AC-Gen2"
	DeviceIdentification1ModelLBEDash5ACDashGen2 string = "LBE-5AC-Gen2"

	// DeviceIdentification1ModelLBEDash5ACDashLR captures enum value "LBE-5AC-LR"
	DeviceIdentification1ModelLBEDash5ACDashLR string = "LBE-5AC-LR"

	// DeviceIdentification1ModelLAPDashGPS captures enum value "LAP-GPS"
	DeviceIdentification1ModelLAPDashGPS string = "LAP-GPS"

	// DeviceIdentification1ModelISDash5AC captures enum value "IS-5AC"
	DeviceIdentification1ModelISDash5AC string = "IS-5AC"

	// DeviceIdentification1ModelPSDash5AC captures enum value "PS-5AC"
	DeviceIdentification1ModelPSDash5AC string = "PS-5AC"

	// DeviceIdentification1ModelSolarSwitch captures enum value "SolarSwitch"
	DeviceIdentification1ModelSolarSwitch string = "SolarSwitch"

	// DeviceIdentification1ModelSolarPoint captures enum value "SolarPoint"
	DeviceIdentification1ModelSolarPoint string = "SolarPoint"

	// DeviceIdentification1ModelBulletACDashIP67 captures enum value "BulletAC-IP67"
	DeviceIdentification1ModelBulletACDashIP67 string = "BulletAC-IP67"

	// DeviceIdentification1ModelBDashDBDashAC captures enum value "B-DB-AC"
	DeviceIdentification1ModelBDashDBDashAC string = "B-DB-AC"

	// DeviceIdentification1ModelUNKNOWN captures enum value "UNKNOWN"
	DeviceIdentification1ModelUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *DeviceIdentification1) validateModelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypeModelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validateModel(formats strfmt.Registry) error {
	if swag.IsZero(m.Model) { // not required
		return nil
	}

	// value enum
	if err := m.validateModelEnum("model", "body", m.Model); err != nil {
		return err
	}

	return nil
}

var deviceIdentification1TypePlatformNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UFiber NanoG","UFiber Loco","UFiber Wifi","UFiber Instant","UISPRPro","UISPRLite","UISPS","UISPSPro","UNMSS","UISPLTE","UISPPLite","e50","e100","e200","e300","e600","e1000","u50","u100","u200","u300","u1000","ESWH","ESGH","ES","ESX","EP","EPX","SW","ACB","WA","2WA","XC","2XC","XW","XM","TI","GBE","AirGW","AirGWP","AF","AF02","AF06","AF07","AF08","AF09","af5xhd","afltu","lturocket","GP","ltu60","SunMax","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypePlatformNamePropEnum = append(deviceIdentification1TypePlatformNamePropEnum, v)
	}
}

const (

	// DeviceIdentification1PlatformNameUFiberNanoG captures enum value "UFiber NanoG"
	DeviceIdentification1PlatformNameUFiberNanoG string = "UFiber NanoG"

	// DeviceIdentification1PlatformNameUFiberLoco captures enum value "UFiber Loco"
	DeviceIdentification1PlatformNameUFiberLoco string = "UFiber Loco"

	// DeviceIdentification1PlatformNameUFiberWifi captures enum value "UFiber Wifi"
	DeviceIdentification1PlatformNameUFiberWifi string = "UFiber Wifi"

	// DeviceIdentification1PlatformNameUFiberInstant captures enum value "UFiber Instant"
	DeviceIdentification1PlatformNameUFiberInstant string = "UFiber Instant"

	// DeviceIdentification1PlatformNameUISPRPro captures enum value "UISPRPro"
	DeviceIdentification1PlatformNameUISPRPro string = "UISPRPro"

	// DeviceIdentification1PlatformNameUISPRLite captures enum value "UISPRLite"
	DeviceIdentification1PlatformNameUISPRLite string = "UISPRLite"

	// DeviceIdentification1PlatformNameUISPS captures enum value "UISPS"
	DeviceIdentification1PlatformNameUISPS string = "UISPS"

	// DeviceIdentification1PlatformNameUISPSPro captures enum value "UISPSPro"
	DeviceIdentification1PlatformNameUISPSPro string = "UISPSPro"

	// DeviceIdentification1PlatformNameUNMSS captures enum value "UNMSS"
	DeviceIdentification1PlatformNameUNMSS string = "UNMSS"

	// DeviceIdentification1PlatformNameUISPLTE captures enum value "UISPLTE"
	DeviceIdentification1PlatformNameUISPLTE string = "UISPLTE"

	// DeviceIdentification1PlatformNameUISPPLite captures enum value "UISPPLite"
	DeviceIdentification1PlatformNameUISPPLite string = "UISPPLite"

	// DeviceIdentification1PlatformNameE50 captures enum value "e50"
	DeviceIdentification1PlatformNameE50 string = "e50"

	// DeviceIdentification1PlatformNameE100 captures enum value "e100"
	DeviceIdentification1PlatformNameE100 string = "e100"

	// DeviceIdentification1PlatformNameE200 captures enum value "e200"
	DeviceIdentification1PlatformNameE200 string = "e200"

	// DeviceIdentification1PlatformNameE300 captures enum value "e300"
	DeviceIdentification1PlatformNameE300 string = "e300"

	// DeviceIdentification1PlatformNameE600 captures enum value "e600"
	DeviceIdentification1PlatformNameE600 string = "e600"

	// DeviceIdentification1PlatformNameE1000 captures enum value "e1000"
	DeviceIdentification1PlatformNameE1000 string = "e1000"

	// DeviceIdentification1PlatformNameU50 captures enum value "u50"
	DeviceIdentification1PlatformNameU50 string = "u50"

	// DeviceIdentification1PlatformNameU100 captures enum value "u100"
	DeviceIdentification1PlatformNameU100 string = "u100"

	// DeviceIdentification1PlatformNameU200 captures enum value "u200"
	DeviceIdentification1PlatformNameU200 string = "u200"

	// DeviceIdentification1PlatformNameU300 captures enum value "u300"
	DeviceIdentification1PlatformNameU300 string = "u300"

	// DeviceIdentification1PlatformNameU1000 captures enum value "u1000"
	DeviceIdentification1PlatformNameU1000 string = "u1000"

	// DeviceIdentification1PlatformNameESWH captures enum value "ESWH"
	DeviceIdentification1PlatformNameESWH string = "ESWH"

	// DeviceIdentification1PlatformNameESGH captures enum value "ESGH"
	DeviceIdentification1PlatformNameESGH string = "ESGH"

	// DeviceIdentification1PlatformNameES captures enum value "ES"
	DeviceIdentification1PlatformNameES string = "ES"

	// DeviceIdentification1PlatformNameESX captures enum value "ESX"
	DeviceIdentification1PlatformNameESX string = "ESX"

	// DeviceIdentification1PlatformNameEP captures enum value "EP"
	DeviceIdentification1PlatformNameEP string = "EP"

	// DeviceIdentification1PlatformNameEPX captures enum value "EPX"
	DeviceIdentification1PlatformNameEPX string = "EPX"

	// DeviceIdentification1PlatformNameSW captures enum value "SW"
	DeviceIdentification1PlatformNameSW string = "SW"

	// DeviceIdentification1PlatformNameACB captures enum value "ACB"
	DeviceIdentification1PlatformNameACB string = "ACB"

	// DeviceIdentification1PlatformNameWA captures enum value "WA"
	DeviceIdentification1PlatformNameWA string = "WA"

	// DeviceIdentification1PlatformNameNr2WA captures enum value "2WA"
	DeviceIdentification1PlatformNameNr2WA string = "2WA"

	// DeviceIdentification1PlatformNameXC captures enum value "XC"
	DeviceIdentification1PlatformNameXC string = "XC"

	// DeviceIdentification1PlatformNameNr2XC captures enum value "2XC"
	DeviceIdentification1PlatformNameNr2XC string = "2XC"

	// DeviceIdentification1PlatformNameXW captures enum value "XW"
	DeviceIdentification1PlatformNameXW string = "XW"

	// DeviceIdentification1PlatformNameXM captures enum value "XM"
	DeviceIdentification1PlatformNameXM string = "XM"

	// DeviceIdentification1PlatformNameTI captures enum value "TI"
	DeviceIdentification1PlatformNameTI string = "TI"

	// DeviceIdentification1PlatformNameGBE captures enum value "GBE"
	DeviceIdentification1PlatformNameGBE string = "GBE"

	// DeviceIdentification1PlatformNameAirGW captures enum value "AirGW"
	DeviceIdentification1PlatformNameAirGW string = "AirGW"

	// DeviceIdentification1PlatformNameAirGWP captures enum value "AirGWP"
	DeviceIdentification1PlatformNameAirGWP string = "AirGWP"

	// DeviceIdentification1PlatformNameAF captures enum value "AF"
	DeviceIdentification1PlatformNameAF string = "AF"

	// DeviceIdentification1PlatformNameAF02 captures enum value "AF02"
	DeviceIdentification1PlatformNameAF02 string = "AF02"

	// DeviceIdentification1PlatformNameAF06 captures enum value "AF06"
	DeviceIdentification1PlatformNameAF06 string = "AF06"

	// DeviceIdentification1PlatformNameAF07 captures enum value "AF07"
	DeviceIdentification1PlatformNameAF07 string = "AF07"

	// DeviceIdentification1PlatformNameAF08 captures enum value "AF08"
	DeviceIdentification1PlatformNameAF08 string = "AF08"

	// DeviceIdentification1PlatformNameAF09 captures enum value "AF09"
	DeviceIdentification1PlatformNameAF09 string = "AF09"

	// DeviceIdentification1PlatformNameAf5xhd captures enum value "af5xhd"
	DeviceIdentification1PlatformNameAf5xhd string = "af5xhd"

	// DeviceIdentification1PlatformNameAfltu captures enum value "afltu"
	DeviceIdentification1PlatformNameAfltu string = "afltu"

	// DeviceIdentification1PlatformNameLturocket captures enum value "lturocket"
	DeviceIdentification1PlatformNameLturocket string = "lturocket"

	// DeviceIdentification1PlatformNameGP captures enum value "GP"
	DeviceIdentification1PlatformNameGP string = "GP"

	// DeviceIdentification1PlatformNameLtu60 captures enum value "ltu60"
	DeviceIdentification1PlatformNameLtu60 string = "ltu60"

	// DeviceIdentification1PlatformNameSunMax captures enum value "SunMax"
	DeviceIdentification1PlatformNameSunMax string = "SunMax"

	// DeviceIdentification1PlatformNameUNKNOWN captures enum value "UNKNOWN"
	DeviceIdentification1PlatformNameUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *DeviceIdentification1) validatePlatformNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypePlatformNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validatePlatformName(formats strfmt.Registry) error {
	if swag.IsZero(m.PlatformName) { // not required
		return nil
	}

	// value enum
	if err := m.validatePlatformNameEnum("platformName", "body", m.PlatformName); err != nil {
		return err
	}

	return nil
}

var deviceIdentification1TypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["router","switch","gpon","ap","station","other","ups","server","wireless","convertor","gateway"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypeRolePropEnum = append(deviceIdentification1TypeRolePropEnum, v)
	}
}

const (

	// DeviceIdentification1RoleRouter captures enum value "router"
	DeviceIdentification1RoleRouter string = "router"

	// DeviceIdentification1RoleSwitch captures enum value "switch"
	DeviceIdentification1RoleSwitch string = "switch"

	// DeviceIdentification1RoleGpon captures enum value "gpon"
	DeviceIdentification1RoleGpon string = "gpon"

	// DeviceIdentification1RoleAp captures enum value "ap"
	DeviceIdentification1RoleAp string = "ap"

	// DeviceIdentification1RoleStation captures enum value "station"
	DeviceIdentification1RoleStation string = "station"

	// DeviceIdentification1RoleOther captures enum value "other"
	DeviceIdentification1RoleOther string = "other"

	// DeviceIdentification1RoleUps captures enum value "ups"
	DeviceIdentification1RoleUps string = "ups"

	// DeviceIdentification1RoleServer captures enum value "server"
	DeviceIdentification1RoleServer string = "server"

	// DeviceIdentification1RoleWireless captures enum value "wireless"
	DeviceIdentification1RoleWireless string = "wireless"

	// DeviceIdentification1RoleConvertor captures enum value "convertor"
	DeviceIdentification1RoleConvertor string = "convertor"

	// DeviceIdentification1RoleGateway captures enum value "gateway"
	DeviceIdentification1RoleGateway string = "gateway"
)

// prop value enum
func (m *DeviceIdentification1) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", m.Role); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification1) validateSite(formats strfmt.Registry) error {
	if swag.IsZero(m.Site) { // not required
		return nil
	}

	if m.Site != nil {
		if err := m.Site.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

func (m *DeviceIdentification1) validateStarted(formats strfmt.Registry) error {
	if swag.IsZero(m.Started) { // not required
		return nil
	}

	if err := validate.FormatOf("started", "body", "date-time", m.Started.String(), formats); err != nil {
		return err
	}

	return nil
}

var deviceIdentification1TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","connecting","discovered","inactive","disabled","disconnected","unauthorized","proposed","unknown","unplaced","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypeStatusPropEnum = append(deviceIdentification1TypeStatusPropEnum, v)
	}
}

const (

	// DeviceIdentification1StatusActive captures enum value "active"
	DeviceIdentification1StatusActive string = "active"

	// DeviceIdentification1StatusConnecting captures enum value "connecting"
	DeviceIdentification1StatusConnecting string = "connecting"

	// DeviceIdentification1StatusDiscovered captures enum value "discovered"
	DeviceIdentification1StatusDiscovered string = "discovered"

	// DeviceIdentification1StatusInactive captures enum value "inactive"
	DeviceIdentification1StatusInactive string = "inactive"

	// DeviceIdentification1StatusDisabled captures enum value "disabled"
	DeviceIdentification1StatusDisabled string = "disabled"

	// DeviceIdentification1StatusDisconnected captures enum value "disconnected"
	DeviceIdentification1StatusDisconnected string = "disconnected"

	// DeviceIdentification1StatusUnauthorized captures enum value "unauthorized"
	DeviceIdentification1StatusUnauthorized string = "unauthorized"

	// DeviceIdentification1StatusProposed captures enum value "proposed"
	DeviceIdentification1StatusProposed string = "proposed"

	// DeviceIdentification1StatusUnknown captures enum value "unknown"
	DeviceIdentification1StatusUnknown string = "unknown"

	// DeviceIdentification1StatusUnplaced captures enum value "unplaced"
	DeviceIdentification1StatusUnplaced string = "unplaced"

	// DeviceIdentification1StatusCustom captures enum value "custom"
	DeviceIdentification1StatusCustom string = "custom"
)

// prop value enum
func (m *DeviceIdentification1) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var deviceIdentification1TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["onu","olt","uispp","uispr","uisps","uispLte","erouter","eswitch","epower","airCube","airMax","airFiber","toughSwitch","solarBeam","wave","blackBox"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification1TypeTypePropEnum = append(deviceIdentification1TypeTypePropEnum, v)
	}
}

const (

	// DeviceIdentification1TypeOnu captures enum value "onu"
	DeviceIdentification1TypeOnu string = "onu"

	// DeviceIdentification1TypeOlt captures enum value "olt"
	DeviceIdentification1TypeOlt string = "olt"

	// DeviceIdentification1TypeUispp captures enum value "uispp"
	DeviceIdentification1TypeUispp string = "uispp"

	// DeviceIdentification1TypeUispr captures enum value "uispr"
	DeviceIdentification1TypeUispr string = "uispr"

	// DeviceIdentification1TypeUisps captures enum value "uisps"
	DeviceIdentification1TypeUisps string = "uisps"

	// DeviceIdentification1TypeUispLte captures enum value "uispLte"
	DeviceIdentification1TypeUispLte string = "uispLte"

	// DeviceIdentification1TypeErouter captures enum value "erouter"
	DeviceIdentification1TypeErouter string = "erouter"

	// DeviceIdentification1TypeEswitch captures enum value "eswitch"
	DeviceIdentification1TypeEswitch string = "eswitch"

	// DeviceIdentification1TypeEpower captures enum value "epower"
	DeviceIdentification1TypeEpower string = "epower"

	// DeviceIdentification1TypeAirCube captures enum value "airCube"
	DeviceIdentification1TypeAirCube string = "airCube"

	// DeviceIdentification1TypeAirMax captures enum value "airMax"
	DeviceIdentification1TypeAirMax string = "airMax"

	// DeviceIdentification1TypeAirFiber captures enum value "airFiber"
	DeviceIdentification1TypeAirFiber string = "airFiber"

	// DeviceIdentification1TypeToughSwitch captures enum value "toughSwitch"
	DeviceIdentification1TypeToughSwitch string = "toughSwitch"

	// DeviceIdentification1TypeSolarBeam captures enum value "solarBeam"
	DeviceIdentification1TypeSolarBeam string = "solarBeam"

	// DeviceIdentification1TypeWave captures enum value "wave"
	DeviceIdentification1TypeWave string = "wave"

	// DeviceIdentification1TypeBlackBox captures enum value "blackBox"
	DeviceIdentification1TypeBlackBox string = "blackBox"
)

// prop value enum
func (m *DeviceIdentification1) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification1TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification1) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification1) validateUpdated(formats strfmt.Registry) error {
	if swag.IsZero(m.Updated) { // not required
		return nil
	}

	if err := validate.FormatOf("updated", "body", "date-time", m.Updated.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this device identification 1 based on the context it is used
func (m *DeviceIdentification1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSite(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeviceIdentification1) contextValidateSite(ctx context.Context, formats strfmt.Registry) error {

	if m.Site != nil {
		if err := m.Site.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeviceIdentification1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceIdentification1) UnmarshalBinary(b []byte) error {
	var res DeviceIdentification1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
