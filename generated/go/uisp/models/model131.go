// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model131 model 131
//
// swagger:model Model 131
type Model131 struct {

	// enabled
	// Required: true
	Enabled *bool `json:"enabled"`

	// name
	// Required: true
	// Max Length: 80
	// Min Length: 2
	Name *string `json:"name"`

	// port forwards
	PortForwards PortForwards1 `json:"portForwards,omitempty"`

	// pppoe password
	// Max Length: 80
	// Min Length: 4
	PppoePassword string `json:"pppoePassword,omitempty"`

	// pppoe user
	// Max Length: 80
	// Min Length: 2
	PppoeUser string `json:"pppoeUser,omitempty"`

	// profile
	// Required: true
	// Min Length: 1
	Profile *string `json:"profile"`

	// wan address
	// Required: true
	WanAddress *string `json:"wanAddress"`
}

// Validate validates this model 131
func (m *Model131) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePortForwards(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePppoePassword(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePppoeUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWanAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model131) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *Model131) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", *m.Name, 2); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", *m.Name, 80); err != nil {
		return err
	}

	return nil
}

func (m *Model131) validatePortForwards(formats strfmt.Registry) error {
	if swag.IsZero(m.PortForwards) { // not required
		return nil
	}

	if err := m.PortForwards.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("portForwards")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("portForwards")
		}
		return err
	}

	return nil
}

func (m *Model131) validatePppoePassword(formats strfmt.Registry) error {
	if swag.IsZero(m.PppoePassword) { // not required
		return nil
	}

	if err := validate.MinLength("pppoePassword", "body", m.PppoePassword, 4); err != nil {
		return err
	}

	if err := validate.MaxLength("pppoePassword", "body", m.PppoePassword, 80); err != nil {
		return err
	}

	return nil
}

func (m *Model131) validatePppoeUser(formats strfmt.Registry) error {
	if swag.IsZero(m.PppoeUser) { // not required
		return nil
	}

	if err := validate.MinLength("pppoeUser", "body", m.PppoeUser, 2); err != nil {
		return err
	}

	if err := validate.MaxLength("pppoeUser", "body", m.PppoeUser, 80); err != nil {
		return err
	}

	return nil
}

func (m *Model131) validateProfile(formats strfmt.Registry) error {

	if err := validate.Required("profile", "body", m.Profile); err != nil {
		return err
	}

	if err := validate.MinLength("profile", "body", *m.Profile, 1); err != nil {
		return err
	}

	return nil
}

func (m *Model131) validateWanAddress(formats strfmt.Registry) error {

	if err := validate.Required("wanAddress", "body", m.WanAddress); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this model 131 based on the context it is used
func (m *Model131) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidatePortForwards(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model131) contextValidatePortForwards(ctx context.Context, formats strfmt.Registry) error {

	if err := m.PortForwards.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("portForwards")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("portForwards")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Model131) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model131) UnmarshalBinary(b []byte) error {
	var res Model131
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
