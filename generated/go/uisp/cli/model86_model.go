// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/models"
	"github.com/spf13/cobra"
)

// Schema cli for Model86

// register flags to command
func registerModelModel86Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerModel86StartedAt(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerModel86StartedAt(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	startedAtDescription := `Timestamp in milliseconds when the setup was initiated.`

	var startedAtFlagName string
	if cmdPrefix == "" {
		startedAtFlagName = "startedAt"
	} else {
		startedAtFlagName = fmt.Sprintf("%v.startedAt", cmdPrefix)
	}

	var startedAtFlagDefault int64

	_ = cmd.PersistentFlags().Int64(startedAtFlagName, startedAtFlagDefault, startedAtDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelModel86Flags(depth int, m *models.Model86, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, startedAtAdded := retrieveModel86StartedAtFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || startedAtAdded

	return nil, retAdded
}

func retrieveModel86StartedAtFlags(depth int, m *models.Model86, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	startedAtFlagName := fmt.Sprintf("%v.startedAt", cmdPrefix)
	if cmd.Flags().Changed(startedAtFlagName) {

		var startedAtFlagName string
		if cmdPrefix == "" {
			startedAtFlagName = "startedAt"
		} else {
			startedAtFlagName = fmt.Sprintf("%v.startedAt", cmdPrefix)
		}

		startedAtFlagValue, err := cmd.Flags().GetInt64(startedAtFlagName)
		if err != nil {
			return err, false
		}
		m.StartedAt = &startedAtFlagValue

		retAdded = true
	}

	return nil, retAdded
}
