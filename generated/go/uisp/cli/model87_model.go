// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
	"github.com/spf13/cobra"
)

// Schema cli for Model87

// register flags to command
func registerModelModel87Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerModel87Note(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerModel87Stars(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerModel87Note(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	noteDescription := ``

	var noteFlagName string
	if cmdPrefix == "" {
		noteFlagName = "note"
	} else {
		noteFlagName = fmt.Sprintf("%v.note", cmdPrefix)
	}

	var noteFlagDefault string

	_ = cmd.PersistentFlags().String(noteFlagName, noteFlagDefault, noteDescription)

	return nil
}

func registerModel87Stars(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	starsDescription := `Required. `

	var starsFlagName string
	if cmdPrefix == "" {
		starsFlagName = "stars"
	} else {
		starsFlagName = fmt.Sprintf("%v.stars", cmdPrefix)
	}

	var starsFlagDefault float64

	_ = cmd.PersistentFlags().Float64(starsFlagName, starsFlagDefault, starsDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelModel87Flags(depth int, m *models.Model87, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, noteAdded := retrieveModel87NoteFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || noteAdded

	err, starsAdded := retrieveModel87StarsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || starsAdded

	return nil, retAdded
}

func retrieveModel87NoteFlags(depth int, m *models.Model87, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	noteFlagName := fmt.Sprintf("%v.note", cmdPrefix)
	if cmd.Flags().Changed(noteFlagName) {

		var noteFlagName string
		if cmdPrefix == "" {
			noteFlagName = "note"
		} else {
			noteFlagName = fmt.Sprintf("%v.note", cmdPrefix)
		}

		noteFlagValue, err := cmd.Flags().GetString(noteFlagName)
		if err != nil {
			return err, false
		}
		m.Note = noteFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveModel87StarsFlags(depth int, m *models.Model87, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	starsFlagName := fmt.Sprintf("%v.stars", cmdPrefix)
	if cmd.Flags().Changed(starsFlagName) {

		var starsFlagName string
		if cmdPrefix == "" {
			starsFlagName = "stars"
		} else {
			starsFlagName = fmt.Sprintf("%v.stars", cmdPrefix)
		}

		starsFlagValue, err := cmd.Flags().GetFloat64(starsFlagName)
		if err != nil {
			return err, false
		}
		m.Stars = &starsFlagValue

		retAdded = true
	}

	return nil, retAdded
}
