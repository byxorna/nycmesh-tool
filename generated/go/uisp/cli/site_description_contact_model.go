// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
	"github.com/spf13/cobra"
)

// Schema cli for SiteDescriptionContact

// register flags to command
func registerModelSiteDescriptionContactFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerSiteDescriptionContactEmail(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSiteDescriptionContactName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSiteDescriptionContactPhone(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerSiteDescriptionContactEmail(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	emailDescription := `Email of the contact person.`

	var emailFlagName string
	if cmdPrefix == "" {
		emailFlagName = "email"
	} else {
		emailFlagName = fmt.Sprintf("%v.email", cmdPrefix)
	}

	var emailFlagDefault string

	_ = cmd.PersistentFlags().String(emailFlagName, emailFlagDefault, emailDescription)

	return nil
}

func registerSiteDescriptionContactName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	nameDescription := `Name of the contact person.`

	var nameFlagName string
	if cmdPrefix == "" {
		nameFlagName = "name"
	} else {
		nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var nameFlagDefault string

	_ = cmd.PersistentFlags().String(nameFlagName, nameFlagDefault, nameDescription)

	return nil
}

func registerSiteDescriptionContactPhone(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	phoneDescription := `Phone number of the contact person.`

	var phoneFlagName string
	if cmdPrefix == "" {
		phoneFlagName = "phone"
	} else {
		phoneFlagName = fmt.Sprintf("%v.phone", cmdPrefix)
	}

	var phoneFlagDefault string

	_ = cmd.PersistentFlags().String(phoneFlagName, phoneFlagDefault, phoneDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelSiteDescriptionContactFlags(depth int, m *models.SiteDescriptionContact, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, emailAdded := retrieveSiteDescriptionContactEmailFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || emailAdded

	err, nameAdded := retrieveSiteDescriptionContactNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || nameAdded

	err, phoneAdded := retrieveSiteDescriptionContactPhoneFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || phoneAdded

	return nil, retAdded
}

func retrieveSiteDescriptionContactEmailFlags(depth int, m *models.SiteDescriptionContact, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	emailFlagName := fmt.Sprintf("%v.email", cmdPrefix)
	if cmd.Flags().Changed(emailFlagName) {

		var emailFlagName string
		if cmdPrefix == "" {
			emailFlagName = "email"
		} else {
			emailFlagName = fmt.Sprintf("%v.email", cmdPrefix)
		}

		emailFlagValue, err := cmd.Flags().GetString(emailFlagName)
		if err != nil {
			return err, false
		}
		m.Email = emailFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSiteDescriptionContactNameFlags(depth int, m *models.SiteDescriptionContact, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	nameFlagName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(nameFlagName) {

		var nameFlagName string
		if cmdPrefix == "" {
			nameFlagName = "name"
		} else {
			nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		nameFlagValue, err := cmd.Flags().GetString(nameFlagName)
		if err != nil {
			return err, false
		}
		m.Name = nameFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSiteDescriptionContactPhoneFlags(depth int, m *models.SiteDescriptionContact, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	phoneFlagName := fmt.Sprintf("%v.phone", cmdPrefix)
	if cmd.Flags().Changed(phoneFlagName) {

		var phoneFlagName string
		if cmdPrefix == "" {
			phoneFlagName = "phone"
		} else {
			phoneFlagName = fmt.Sprintf("%v.phone", cmdPrefix)
		}

		phoneFlagValue, err := cmd.Flags().GetString(phoneFlagName)
		if err != nil {
			return err, false
		}
		m.Phone = phoneFlagValue

		retAdded = true
	}

	return nil, retAdded
}
