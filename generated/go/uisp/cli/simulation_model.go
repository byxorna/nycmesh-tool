// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
	"github.com/spf13/cobra"
)

// Schema cli for Simulation

// register flags to command
func registerModelSimulationFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerSimulationDevices(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSimulationLinks(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerSimulationDevices(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: devices SimulationDeviceList array type is not supported by go-swagger cli yet

	return nil
}

func registerSimulationLinks(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: links SimulationLinkList array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelSimulationFlags(depth int, m *models.Simulation, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, devicesAdded := retrieveSimulationDevicesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || devicesAdded

	err, linksAdded := retrieveSimulationLinksFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || linksAdded

	return nil, retAdded
}

func retrieveSimulationDevicesFlags(depth int, m *models.Simulation, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	devicesFlagName := fmt.Sprintf("%v.devices", cmdPrefix)
	if cmd.Flags().Changed(devicesFlagName) {
		// warning: devices array type SimulationDeviceList is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveSimulationLinksFlags(depth int, m *models.Simulation, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	linksFlagName := fmt.Sprintf("%v.links", cmdPrefix)
	if cmd.Flags().Changed(linksFlagName) {
		// warning: links array type SimulationLinkList is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
