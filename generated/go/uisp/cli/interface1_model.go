// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
	"github.com/go-openapi/swag"

	"github.com/spf13/cobra"
)

// Schema cli for Interface1

// register flags to command
func registerModelInterface1Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerInterface1Sfp1(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerInterface1Sfp2(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerInterface1Sfp1(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerInterface1Sfp2(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerInterface1Sfp1(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var sfp1FlagName string
	if cmdPrefix == "" {
		sfp1FlagName = "sfp+1"
	} else {
		sfp1FlagName = fmt.Sprintf("%v.sfp+1", cmdPrefix)
	}

	if err := registerModelSfp1Flags(depth+1, sfp1FlagName, cmd); err != nil {
		return err
	}

	return nil
}

func registerInterface1Sfp2(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var sfp2FlagName string
	if cmdPrefix == "" {
		sfp2FlagName = "sfp+2"
	} else {
		sfp2FlagName = fmt.Sprintf("%v.sfp+2", cmdPrefix)
	}

	if err := registerModelSfp2Flags(depth+1, sfp2FlagName, cmd); err != nil {
		return err
	}

	return nil
}

//func registerInterface1Sfp1(depth int, cmdPrefix string, cmd *cobra.Command) error {
//	if depth > maxDepth {
//		return nil
//	}
//
//	var sfp1FlagName string
//	if cmdPrefix == "" {
//		sfp1FlagName = "sfp1"
//	} else {
//		sfp1FlagName = fmt.Sprintf("%v.sfp1", cmdPrefix)
//	}
//
//	if err := registerModelSfp1Flags(depth+1, sfp1FlagName, cmd); err != nil {
//		return err
//	}
//
//	return nil
//}
//
//func registerInterface1Sfp2(depth int, cmdPrefix string, cmd *cobra.Command) error {
//	if depth > maxDepth {
//		return nil
//	}
//
//	var sfp2FlagName string
//	if cmdPrefix == "" {
//		sfp2FlagName = "sfp2"
//	} else {
//		sfp2FlagName = fmt.Sprintf("%v.sfp2", cmdPrefix)
//	}
//
//	if err := registerModelSfp2Flags(depth+1, sfp2FlagName, cmd); err != nil {
//		return err
//	}
//
//	return nil
//}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelInterface1Flags(depth int, m *models.Interface1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, sfp1Added := retrieveInterface1Sfp1Flags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sfp1Added

	err, sfp2Added := retrieveInterface1Sfp2Flags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sfp2Added

	//err, sfp1Added := retrieveInterface1Sfp1Flags(depth, m, cmdPrefix, cmd)
	//if err != nil {
	//	return err, false
	//}
	//retAdded = retAdded || sfp1Added

	//err, sfp2Added := retrieveInterface1Sfp2Flags(depth, m, cmdPrefix, cmd)
	//if err != nil {
	//	return err, false
	//}
	//retAdded = retAdded || sfp2Added

	return nil, retAdded
}

func retrieveInterface1Sfp1Flags(depth int, m *models.Interface1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	sfp1FlagName := fmt.Sprintf("%v.sfp+1", cmdPrefix)
	if cmd.Flags().Changed(sfp1FlagName) {
		// info: complex object sfp+1 Sfp1 is retrieved outside this Changed() block
	}
	sfp1FlagValue := m.Sfp1
	if swag.IsZero(sfp1FlagValue) {
		sfp1FlagValue = &models.Sfp1{}
	}

	err, sfp1Added := retrieveModelSfp1Flags(depth+1, sfp1FlagValue, sfp1FlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sfp1Added
	if sfp1Added {
		m.Sfp1 = sfp1FlagValue
	}

	return nil, retAdded
}

func retrieveInterface1Sfp2Flags(depth int, m *models.Interface1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	sfp2FlagName := fmt.Sprintf("%v.sfp+2", cmdPrefix)
	if cmd.Flags().Changed(sfp2FlagName) {
		// info: complex object sfp+2 Sfp2 is retrieved outside this Changed() block
	}
	sfp2FlagValue := m.Sfp2
	if swag.IsZero(sfp2FlagValue) {
		sfp2FlagValue = &models.Sfp2{}
	}

	err, sfp2Added := retrieveModelSfp2Flags(depth+1, sfp2FlagValue, sfp2FlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sfp2Added
	if sfp2Added {
		m.Sfp2 = sfp2FlagValue
	}

	return nil, retAdded
}

//func retrieveInterface1Sfp1Flags(depth int, m *models.Interface1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
//	if depth > maxDepth {
//		return nil, false
//	}
//	retAdded := false
//
//	sfp1FlagName := fmt.Sprintf("%v.sfp1", cmdPrefix)
//	if cmd.Flags().Changed(sfp1FlagName) {
//		// info: complex object sfp1 Sfp1 is retrieved outside this Changed() block
//	}
//	sfp1FlagValue := m.Sfp1
//	if swag.IsZero(sfp1FlagValue) {
//		sfp1FlagValue = &models.Sfp1{}
//	}
//
//	err, sfp1Added := retrieveModelSfp1Flags(depth+1, sfp1FlagValue, sfp1FlagName, cmd)
//	if err != nil {
//		return err, false
//	}
//	retAdded = retAdded || sfp1Added
//	if sfp1Added {
//		m.Sfp1 = sfp1FlagValue
//	}
//
//	return nil, retAdded
//}
//
//func retrieveInterface1Sfp2Flags(depth int, m *models.Interface1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
//	if depth > maxDepth {
//		return nil, false
//	}
//	retAdded := false
//
//	sfp2FlagName := fmt.Sprintf("%v.sfp2", cmdPrefix)
//	if cmd.Flags().Changed(sfp2FlagName) {
//		// info: complex object sfp2 Sfp2 is retrieved outside this Changed() block
//	}
//	sfp2FlagValue := m.Sfp2
//	if swag.IsZero(sfp2FlagValue) {
//		sfp2FlagValue = &models.Sfp2{}
//	}
//
//	err, sfp2Added := retrieveModelSfp2Flags(depth+1, sfp2FlagValue, sfp2FlagName, cmd)
//	if err != nil {
//		return err, false
//	}
//	retAdded = retAdded || sfp2Added
//	if sfp2Added {
//		m.Sfp2 = sfp2FlagValue
//	}
//
//	return nil, retAdded
//}
