// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PutDevicesUisprsIDFirewallFiltersFilternameRuleReader is a Reader for the PutDevicesUisprsIDFirewallFiltersFilternameRule structure.
type PutDevicesUisprsIDFirewallFiltersFilternameRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesUisprsIDFirewallFiltersFilternameRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDevicesUisprsIDFirewallFiltersFilternameRuleOK creates a PutDevicesUisprsIDFirewallFiltersFilternameRuleOK with default headers values
func NewPutDevicesUisprsIDFirewallFiltersFilternameRuleOK() *PutDevicesUisprsIDFirewallFiltersFilternameRuleOK {
	return &PutDevicesUisprsIDFirewallFiltersFilternameRuleOK{}
}

/* PutDevicesUisprsIDFirewallFiltersFilternameRuleOK describes a response with status code 200, with default header values.

Successful
*/
type PutDevicesUisprsIDFirewallFiltersFilternameRuleOK struct {
	Payload *models.Status
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleOK) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] putDevicesUisprsIdFirewallFiltersFilternameRuleOK  %+v", 200, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest creates a PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest with default headers values
func NewPutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest() *PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest {
	return &PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest{}
}

/* PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] putDevicesUisprsIdFirewallFiltersFilternameRuleBadRequest  %+v", 400, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized creates a PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized with default headers values
func NewPutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized() *PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized {
	return &PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized{}
}

/* PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] putDevicesUisprsIdFirewallFiltersFilternameRuleUnauthorized  %+v", 401, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound creates a PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound with default headers values
func NewPutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound() *PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound {
	return &PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound{}
}

/* PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] putDevicesUisprsIdFirewallFiltersFilternameRuleNotFound  %+v", 404, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError creates a PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError with default headers values
func NewPutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError() *PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError {
	return &PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError{}
}

/* PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] putDevicesUisprsIdFirewallFiltersFilternameRuleInternalServerError  %+v", 500, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
