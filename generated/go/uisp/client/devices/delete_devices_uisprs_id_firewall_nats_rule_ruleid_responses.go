// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// DeleteDevicesUisprsIDFirewallNatsRuleRuleidReader is a Reader for the DeleteDevicesUisprsIDFirewallNatsRuleRuleid structure.
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidOK creates a DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK with default headers values
func NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidOK() *DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK {
	return &DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK{}
}

/* DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK describes a response with status code 200, with default header values.

Successful
*/
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK struct {
	Payload *models.Status
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK) Error() string {
	return fmt.Sprintf("[DELETE /devices/uisprs/{id}/firewall/nats/rule/{ruleId}][%d] deleteDevicesUisprsIdFirewallNatsRuleRuleidOK  %+v", 200, o.Payload)
}
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest creates a DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest with default headers values
func NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest() *DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest {
	return &DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest{}
}

/* DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest struct {
	Payload *models.Error
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /devices/uisprs/{id}/firewall/nats/rule/{ruleId}][%d] deleteDevicesUisprsIdFirewallNatsRuleRuleidBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized creates a DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized with default headers values
func NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized() *DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized {
	return &DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized{}
}

/* DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /devices/uisprs/{id}/firewall/nats/rule/{ruleId}][%d] deleteDevicesUisprsIdFirewallNatsRuleRuleidUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound creates a DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound with default headers values
func NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound() *DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound {
	return &DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound{}
}

/* DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound struct {
	Payload *models.Error
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /devices/uisprs/{id}/firewall/nats/rule/{ruleId}][%d] deleteDevicesUisprsIdFirewallNatsRuleRuleidNotFound  %+v", 404, o.Payload)
}
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError creates a DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError with default headers values
func NewDeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError() *DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError {
	return &DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError{}
}

/* DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /devices/uisprs/{id}/firewall/nats/rule/{ruleId}][%d] deleteDevicesUisprsIdFirewallNatsRuleRuleidInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDevicesUisprsIDFirewallNatsRuleRuleidInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
