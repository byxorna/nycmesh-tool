// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// GetDevicesWavesIDStationsReader is a Reader for the GetDevicesWavesIDStations structure.
type GetDevicesWavesIDStationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesWavesIDStationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesWavesIDStationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesWavesIDStationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesWavesIDStationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesWavesIDStationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesWavesIDStationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesWavesIDStationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesWavesIDStationsOK creates a GetDevicesWavesIDStationsOK with default headers values
func NewGetDevicesWavesIDStationsOK() *GetDevicesWavesIDStationsOK {
	return &GetDevicesWavesIDStationsOK{}
}

/* GetDevicesWavesIDStationsOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesWavesIDStationsOK struct {
	Payload models.Model50
}

func (o *GetDevicesWavesIDStationsOK) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsOK  %+v", 200, o.Payload)
}
func (o *GetDevicesWavesIDStationsOK) GetPayload() models.Model50 {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesWavesIDStationsBadRequest creates a GetDevicesWavesIDStationsBadRequest with default headers values
func NewGetDevicesWavesIDStationsBadRequest() *GetDevicesWavesIDStationsBadRequest {
	return &GetDevicesWavesIDStationsBadRequest{}
}

/* GetDevicesWavesIDStationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesWavesIDStationsBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesWavesIDStationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesWavesIDStationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesWavesIDStationsUnauthorized creates a GetDevicesWavesIDStationsUnauthorized with default headers values
func NewGetDevicesWavesIDStationsUnauthorized() *GetDevicesWavesIDStationsUnauthorized {
	return &GetDevicesWavesIDStationsUnauthorized{}
}

/* GetDevicesWavesIDStationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesWavesIDStationsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesWavesIDStationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesWavesIDStationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesWavesIDStationsForbidden creates a GetDevicesWavesIDStationsForbidden with default headers values
func NewGetDevicesWavesIDStationsForbidden() *GetDevicesWavesIDStationsForbidden {
	return &GetDevicesWavesIDStationsForbidden{}
}

/* GetDevicesWavesIDStationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesWavesIDStationsForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesWavesIDStationsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesWavesIDStationsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesWavesIDStationsNotFound creates a GetDevicesWavesIDStationsNotFound with default headers values
func NewGetDevicesWavesIDStationsNotFound() *GetDevicesWavesIDStationsNotFound {
	return &GetDevicesWavesIDStationsNotFound{}
}

/* GetDevicesWavesIDStationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesWavesIDStationsNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesWavesIDStationsNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesWavesIDStationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesWavesIDStationsInternalServerError creates a GetDevicesWavesIDStationsInternalServerError with default headers values
func NewGetDevicesWavesIDStationsInternalServerError() *GetDevicesWavesIDStationsInternalServerError {
	return &GetDevicesWavesIDStationsInternalServerError{}
}

/* GetDevicesWavesIDStationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesWavesIDStationsInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesWavesIDStationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/waves/{id}/stations][%d] getDevicesWavesIdStationsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesWavesIDStationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesWavesIDStationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
