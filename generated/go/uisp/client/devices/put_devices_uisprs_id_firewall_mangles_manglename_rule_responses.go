// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PutDevicesUisprsIDFirewallManglesManglenameRuleReader is a Reader for the PutDevicesUisprsIDFirewallManglesManglenameRule structure.
type PutDevicesUisprsIDFirewallManglesManglenameRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesUisprsIDFirewallManglesManglenameRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesUisprsIDFirewallManglesManglenameRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDevicesUisprsIDFirewallManglesManglenameRuleOK creates a PutDevicesUisprsIDFirewallManglesManglenameRuleOK with default headers values
func NewPutDevicesUisprsIDFirewallManglesManglenameRuleOK() *PutDevicesUisprsIDFirewallManglesManglenameRuleOK {
	return &PutDevicesUisprsIDFirewallManglesManglenameRuleOK{}
}

/* PutDevicesUisprsIDFirewallManglesManglenameRuleOK describes a response with status code 200, with default header values.

Successful
*/
type PutDevicesUisprsIDFirewallManglesManglenameRuleOK struct {
	Payload *models.Status
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleOK) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/mangles/{mangleName}/rule][%d] putDevicesUisprsIdFirewallManglesManglenameRuleOK  %+v", 200, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest creates a PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest with default headers values
func NewPutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest() *PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest {
	return &PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest{}
}

/* PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/mangles/{mangleName}/rule][%d] putDevicesUisprsIdFirewallManglesManglenameRuleBadRequest  %+v", 400, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized creates a PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized with default headers values
func NewPutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized() *PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized {
	return &PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized{}
}

/* PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/mangles/{mangleName}/rule][%d] putDevicesUisprsIdFirewallManglesManglenameRuleUnauthorized  %+v", 401, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallManglesManglenameRuleNotFound creates a PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound with default headers values
func NewPutDevicesUisprsIDFirewallManglesManglenameRuleNotFound() *PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound {
	return &PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound{}
}

/* PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/mangles/{mangleName}/rule][%d] putDevicesUisprsIdFirewallManglesManglenameRuleNotFound  %+v", 404, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError creates a PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError with default headers values
func NewPutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError() *PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError {
	return &PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError{}
}

/* PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/uisprs/{id}/firewall/mangles/{mangleName}/rule][%d] putDevicesUisprsIdFirewallManglesManglenameRuleInternalServerError  %+v", 500, o.Payload)
}
func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesUisprsIDFirewallManglesManglenameRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
