// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PutDevicesIDSystemUsersReader is a Reader for the PutDevicesIDSystemUsers structure.
type PutDevicesIDSystemUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDevicesIDSystemUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDevicesIDSystemUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDevicesIDSystemUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutDevicesIDSystemUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutDevicesIDSystemUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDevicesIDSystemUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDevicesIDSystemUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDevicesIDSystemUsersOK creates a PutDevicesIDSystemUsersOK with default headers values
func NewPutDevicesIDSystemUsersOK() *PutDevicesIDSystemUsersOK {
	return &PutDevicesIDSystemUsersOK{}
}

/* PutDevicesIDSystemUsersOK describes a response with status code 200, with default header values.

Successful
*/
type PutDevicesIDSystemUsersOK struct {
	Payload *models.DeviceSystem
}

func (o *PutDevicesIDSystemUsersOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersOK  %+v", 200, o.Payload)
}
func (o *PutDevicesIDSystemUsersOK) GetPayload() *models.DeviceSystem {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceSystem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDSystemUsersBadRequest creates a PutDevicesIDSystemUsersBadRequest with default headers values
func NewPutDevicesIDSystemUsersBadRequest() *PutDevicesIDSystemUsersBadRequest {
	return &PutDevicesIDSystemUsersBadRequest{}
}

/* PutDevicesIDSystemUsersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDevicesIDSystemUsersBadRequest struct {
	Payload *models.Error
}

func (o *PutDevicesIDSystemUsersBadRequest) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersBadRequest  %+v", 400, o.Payload)
}
func (o *PutDevicesIDSystemUsersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDSystemUsersUnauthorized creates a PutDevicesIDSystemUsersUnauthorized with default headers values
func NewPutDevicesIDSystemUsersUnauthorized() *PutDevicesIDSystemUsersUnauthorized {
	return &PutDevicesIDSystemUsersUnauthorized{}
}

/* PutDevicesIDSystemUsersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutDevicesIDSystemUsersUnauthorized struct {
	Payload *models.Error
}

func (o *PutDevicesIDSystemUsersUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersUnauthorized  %+v", 401, o.Payload)
}
func (o *PutDevicesIDSystemUsersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDSystemUsersForbidden creates a PutDevicesIDSystemUsersForbidden with default headers values
func NewPutDevicesIDSystemUsersForbidden() *PutDevicesIDSystemUsersForbidden {
	return &PutDevicesIDSystemUsersForbidden{}
}

/* PutDevicesIDSystemUsersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutDevicesIDSystemUsersForbidden struct {
	Payload *models.Error
}

func (o *PutDevicesIDSystemUsersForbidden) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersForbidden  %+v", 403, o.Payload)
}
func (o *PutDevicesIDSystemUsersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDSystemUsersNotFound creates a PutDevicesIDSystemUsersNotFound with default headers values
func NewPutDevicesIDSystemUsersNotFound() *PutDevicesIDSystemUsersNotFound {
	return &PutDevicesIDSystemUsersNotFound{}
}

/* PutDevicesIDSystemUsersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDevicesIDSystemUsersNotFound struct {
	Payload *models.Error
}

func (o *PutDevicesIDSystemUsersNotFound) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersNotFound  %+v", 404, o.Payload)
}
func (o *PutDevicesIDSystemUsersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDevicesIDSystemUsersInternalServerError creates a PutDevicesIDSystemUsersInternalServerError with default headers values
func NewPutDevicesIDSystemUsersInternalServerError() *PutDevicesIDSystemUsersInternalServerError {
	return &PutDevicesIDSystemUsersInternalServerError{}
}

/* PutDevicesIDSystemUsersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDevicesIDSystemUsersInternalServerError struct {
	Payload *models.Error
}

func (o *PutDevicesIDSystemUsersInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /devices/{id}/system/users][%d] putDevicesIdSystemUsersInternalServerError  %+v", 500, o.Payload)
}
func (o *PutDevicesIDSystemUsersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutDevicesIDSystemUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
