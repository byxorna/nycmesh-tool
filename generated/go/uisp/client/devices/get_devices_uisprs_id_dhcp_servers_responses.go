// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// GetDevicesUisprsIDDhcpServersReader is a Reader for the GetDevicesUisprsIDDhcpServers structure.
type GetDevicesUisprsIDDhcpServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesUisprsIDDhcpServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesUisprsIDDhcpServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesUisprsIDDhcpServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesUisprsIDDhcpServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesUisprsIDDhcpServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesUisprsIDDhcpServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesUisprsIDDhcpServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesUisprsIDDhcpServersOK creates a GetDevicesUisprsIDDhcpServersOK with default headers values
func NewGetDevicesUisprsIDDhcpServersOK() *GetDevicesUisprsIDDhcpServersOK {
	return &GetDevicesUisprsIDDhcpServersOK{}
}

/* GetDevicesUisprsIDDhcpServersOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesUisprsIDDhcpServersOK struct {
	Payload models.DHCPServerList1
}

func (o *GetDevicesUisprsIDDhcpServersOK) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersOK  %+v", 200, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersOK) GetPayload() models.DHCPServerList1 {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersBadRequest creates a GetDevicesUisprsIDDhcpServersBadRequest with default headers values
func NewGetDevicesUisprsIDDhcpServersBadRequest() *GetDevicesUisprsIDDhcpServersBadRequest {
	return &GetDevicesUisprsIDDhcpServersBadRequest{}
}

/* GetDevicesUisprsIDDhcpServersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesUisprsIDDhcpServersBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersUnauthorized creates a GetDevicesUisprsIDDhcpServersUnauthorized with default headers values
func NewGetDevicesUisprsIDDhcpServersUnauthorized() *GetDevicesUisprsIDDhcpServersUnauthorized {
	return &GetDevicesUisprsIDDhcpServersUnauthorized{}
}

/* GetDevicesUisprsIDDhcpServersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesUisprsIDDhcpServersUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersForbidden creates a GetDevicesUisprsIDDhcpServersForbidden with default headers values
func NewGetDevicesUisprsIDDhcpServersForbidden() *GetDevicesUisprsIDDhcpServersForbidden {
	return &GetDevicesUisprsIDDhcpServersForbidden{}
}

/* GetDevicesUisprsIDDhcpServersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesUisprsIDDhcpServersForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersNotFound creates a GetDevicesUisprsIDDhcpServersNotFound with default headers values
func NewGetDevicesUisprsIDDhcpServersNotFound() *GetDevicesUisprsIDDhcpServersNotFound {
	return &GetDevicesUisprsIDDhcpServersNotFound{}
}

/* GetDevicesUisprsIDDhcpServersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesUisprsIDDhcpServersNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUisprsIDDhcpServersInternalServerError creates a GetDevicesUisprsIDDhcpServersInternalServerError with default headers values
func NewGetDevicesUisprsIDDhcpServersInternalServerError() *GetDevicesUisprsIDDhcpServersInternalServerError {
	return &GetDevicesUisprsIDDhcpServersInternalServerError{}
}

/* GetDevicesUisprsIDDhcpServersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesUisprsIDDhcpServersInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesUisprsIDDhcpServersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/uisprs/{id}/dhcp/servers][%d] getDevicesUisprsIdDhcpServersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesUisprsIDDhcpServersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUisprsIDDhcpServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
