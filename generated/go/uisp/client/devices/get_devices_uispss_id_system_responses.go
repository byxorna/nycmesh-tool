// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// GetDevicesUispssIDSystemReader is a Reader for the GetDevicesUispssIDSystem structure.
type GetDevicesUispssIDSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesUispssIDSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesUispssIDSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesUispssIDSystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesUispssIDSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesUispssIDSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesUispssIDSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesUispssIDSystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDevicesUispssIDSystemOK creates a GetDevicesUispssIDSystemOK with default headers values
func NewGetDevicesUispssIDSystemOK() *GetDevicesUispssIDSystemOK {
	return &GetDevicesUispssIDSystemOK{}
}

/* GetDevicesUispssIDSystemOK describes a response with status code 200, with default header values.

Successful
*/
type GetDevicesUispssIDSystemOK struct {
	Payload *models.Model41
}

func (o *GetDevicesUispssIDSystemOK) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemOK  %+v", 200, o.Payload)
}
func (o *GetDevicesUispssIDSystemOK) GetPayload() *models.Model41 {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Model41)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUispssIDSystemBadRequest creates a GetDevicesUispssIDSystemBadRequest with default headers values
func NewGetDevicesUispssIDSystemBadRequest() *GetDevicesUispssIDSystemBadRequest {
	return &GetDevicesUispssIDSystemBadRequest{}
}

/* GetDevicesUispssIDSystemBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDevicesUispssIDSystemBadRequest struct {
	Payload *models.Error
}

func (o *GetDevicesUispssIDSystemBadRequest) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemBadRequest  %+v", 400, o.Payload)
}
func (o *GetDevicesUispssIDSystemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUispssIDSystemUnauthorized creates a GetDevicesUispssIDSystemUnauthorized with default headers values
func NewGetDevicesUispssIDSystemUnauthorized() *GetDevicesUispssIDSystemUnauthorized {
	return &GetDevicesUispssIDSystemUnauthorized{}
}

/* GetDevicesUispssIDSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDevicesUispssIDSystemUnauthorized struct {
	Payload *models.Error
}

func (o *GetDevicesUispssIDSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDevicesUispssIDSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUispssIDSystemForbidden creates a GetDevicesUispssIDSystemForbidden with default headers values
func NewGetDevicesUispssIDSystemForbidden() *GetDevicesUispssIDSystemForbidden {
	return &GetDevicesUispssIDSystemForbidden{}
}

/* GetDevicesUispssIDSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDevicesUispssIDSystemForbidden struct {
	Payload *models.Error
}

func (o *GetDevicesUispssIDSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemForbidden  %+v", 403, o.Payload)
}
func (o *GetDevicesUispssIDSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUispssIDSystemNotFound creates a GetDevicesUispssIDSystemNotFound with default headers values
func NewGetDevicesUispssIDSystemNotFound() *GetDevicesUispssIDSystemNotFound {
	return &GetDevicesUispssIDSystemNotFound{}
}

/* GetDevicesUispssIDSystemNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDevicesUispssIDSystemNotFound struct {
	Payload *models.Error
}

func (o *GetDevicesUispssIDSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemNotFound  %+v", 404, o.Payload)
}
func (o *GetDevicesUispssIDSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesUispssIDSystemInternalServerError creates a GetDevicesUispssIDSystemInternalServerError with default headers values
func NewGetDevicesUispssIDSystemInternalServerError() *GetDevicesUispssIDSystemInternalServerError {
	return &GetDevicesUispssIDSystemInternalServerError{}
}

/* GetDevicesUispssIDSystemInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDevicesUispssIDSystemInternalServerError struct {
	Payload *models.Error
}

func (o *GetDevicesUispssIDSystemInternalServerError) Error() string {
	return fmt.Sprintf("[GET /devices/uispss/{id}/system][%d] getDevicesUispssIdSystemInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDevicesUispssIDSystemInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDevicesUispssIDSystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
