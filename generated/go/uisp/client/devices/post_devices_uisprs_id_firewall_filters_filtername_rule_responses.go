// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PostDevicesUisprsIDFirewallFiltersFilternameRuleReader is a Reader for the PostDevicesUisprsIDFirewallFiltersFilternameRule structure.
type PostDevicesUisprsIDFirewallFiltersFilternameRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDevicesUisprsIDFirewallFiltersFilternameRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDevicesUisprsIDFirewallFiltersFilternameRuleOK creates a PostDevicesUisprsIDFirewallFiltersFilternameRuleOK with default headers values
func NewPostDevicesUisprsIDFirewallFiltersFilternameRuleOK() *PostDevicesUisprsIDFirewallFiltersFilternameRuleOK {
	return &PostDevicesUisprsIDFirewallFiltersFilternameRuleOK{}
}

/* PostDevicesUisprsIDFirewallFiltersFilternameRuleOK describes a response with status code 200, with default header values.

Successful
*/
type PostDevicesUisprsIDFirewallFiltersFilternameRuleOK struct {
	Payload models.Model112
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleOK) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] postDevicesUisprsIdFirewallFiltersFilternameRuleOK  %+v", 200, o.Payload)
}
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleOK) GetPayload() models.Model112 {
	return o.Payload
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest creates a PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest with default headers values
func NewPostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest() *PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest {
	return &PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest{}
}

/* PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] postDevicesUisprsIdFirewallFiltersFilternameRuleBadRequest  %+v", 400, o.Payload)
}
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized creates a PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized with default headers values
func NewPostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized() *PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized {
	return &PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized{}
}

/* PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] postDevicesUisprsIdFirewallFiltersFilternameRuleUnauthorized  %+v", 401, o.Payload)
}
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound creates a PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound with default headers values
func NewPostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound() *PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound {
	return &PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound{}
}

/* PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] postDevicesUisprsIdFirewallFiltersFilternameRuleNotFound  %+v", 404, o.Payload)
}
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError creates a PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError with default headers values
func NewPostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError() *PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError {
	return &PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError{}
}

/* PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError struct {
	Payload *models.Error
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/uisprs/{id}/firewall/filters/{filterName}/rule][%d] postDevicesUisprsIdFirewallFiltersFilternameRuleInternalServerError  %+v", 500, o.Payload)
}
func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDevicesUisprsIDFirewallFiltersFilternameRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
