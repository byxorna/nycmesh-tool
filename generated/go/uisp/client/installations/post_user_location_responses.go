// Code generated by go-swagger; DO NOT EDIT.

package installations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PostUserLocationReader is a Reader for the PostUserLocation structure.
type PostUserLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUserLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUserLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUserLocationOK creates a PostUserLocationOK with default headers values
func NewPostUserLocationOK() *PostUserLocationOK {
	return &PostUserLocationOK{}
}

/* PostUserLocationOK describes a response with status code 200, with default header values.

Successful
*/
type PostUserLocationOK struct {
	Payload *models.UserLocation
}

func (o *PostUserLocationOK) Error() string {
	return fmt.Sprintf("[POST /user/location][%d] postUserLocationOK  %+v", 200, o.Payload)
}
func (o *PostUserLocationOK) GetPayload() *models.UserLocation {
	return o.Payload
}

func (o *PostUserLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserLocation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserLocationBadRequest creates a PostUserLocationBadRequest with default headers values
func NewPostUserLocationBadRequest() *PostUserLocationBadRequest {
	return &PostUserLocationBadRequest{}
}

/* PostUserLocationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostUserLocationBadRequest struct {
	Payload *models.Error
}

func (o *PostUserLocationBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/location][%d] postUserLocationBadRequest  %+v", 400, o.Payload)
}
func (o *PostUserLocationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserLocationUnauthorized creates a PostUserLocationUnauthorized with default headers values
func NewPostUserLocationUnauthorized() *PostUserLocationUnauthorized {
	return &PostUserLocationUnauthorized{}
}

/* PostUserLocationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostUserLocationUnauthorized struct {
	Payload *models.Error
}

func (o *PostUserLocationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/location][%d] postUserLocationUnauthorized  %+v", 401, o.Payload)
}
func (o *PostUserLocationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserLocationForbidden creates a PostUserLocationForbidden with default headers values
func NewPostUserLocationForbidden() *PostUserLocationForbidden {
	return &PostUserLocationForbidden{}
}

/* PostUserLocationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostUserLocationForbidden struct {
	Payload *models.Error
}

func (o *PostUserLocationForbidden) Error() string {
	return fmt.Sprintf("[POST /user/location][%d] postUserLocationForbidden  %+v", 403, o.Payload)
}
func (o *PostUserLocationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserLocationInternalServerError creates a PostUserLocationInternalServerError with default headers values
func NewPostUserLocationInternalServerError() *PostUserLocationInternalServerError {
	return &PostUserLocationInternalServerError{}
}

/* PostUserLocationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostUserLocationInternalServerError struct {
	Payload *models.Error
}

func (o *PostUserLocationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/location][%d] postUserLocationInternalServerError  %+v", 500, o.Payload)
}
func (o *PostUserLocationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
