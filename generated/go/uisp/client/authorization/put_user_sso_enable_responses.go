// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// PutUserSsoEnableReader is a Reader for the PutUserSsoEnable structure.
type PutUserSsoEnableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserSsoEnableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserSsoEnableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserSsoEnableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserSsoEnableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserSsoEnableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserSsoEnableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserSsoEnableOK creates a PutUserSsoEnableOK with default headers values
func NewPutUserSsoEnableOK() *PutUserSsoEnableOK {
	return &PutUserSsoEnableOK{}
}

/* PutUserSsoEnableOK describes a response with status code 200, with default header values.

Successful
*/
type PutUserSsoEnableOK struct {
	Payload *models.User
}

func (o *PutUserSsoEnableOK) Error() string {
	return fmt.Sprintf("[PUT /user/sso/enable][%d] putUserSsoEnableOK  %+v", 200, o.Payload)
}
func (o *PutUserSsoEnableOK) GetPayload() *models.User {
	return o.Payload
}

func (o *PutUserSsoEnableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSsoEnableBadRequest creates a PutUserSsoEnableBadRequest with default headers values
func NewPutUserSsoEnableBadRequest() *PutUserSsoEnableBadRequest {
	return &PutUserSsoEnableBadRequest{}
}

/* PutUserSsoEnableBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutUserSsoEnableBadRequest struct {
	Payload *models.Error
}

func (o *PutUserSsoEnableBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/sso/enable][%d] putUserSsoEnableBadRequest  %+v", 400, o.Payload)
}
func (o *PutUserSsoEnableBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserSsoEnableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSsoEnableUnauthorized creates a PutUserSsoEnableUnauthorized with default headers values
func NewPutUserSsoEnableUnauthorized() *PutUserSsoEnableUnauthorized {
	return &PutUserSsoEnableUnauthorized{}
}

/* PutUserSsoEnableUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutUserSsoEnableUnauthorized struct {
	Payload *models.Error
}

func (o *PutUserSsoEnableUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/sso/enable][%d] putUserSsoEnableUnauthorized  %+v", 401, o.Payload)
}
func (o *PutUserSsoEnableUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserSsoEnableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSsoEnableForbidden creates a PutUserSsoEnableForbidden with default headers values
func NewPutUserSsoEnableForbidden() *PutUserSsoEnableForbidden {
	return &PutUserSsoEnableForbidden{}
}

/* PutUserSsoEnableForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutUserSsoEnableForbidden struct {
	Payload *models.Error
}

func (o *PutUserSsoEnableForbidden) Error() string {
	return fmt.Sprintf("[PUT /user/sso/enable][%d] putUserSsoEnableForbidden  %+v", 403, o.Payload)
}
func (o *PutUserSsoEnableForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserSsoEnableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSsoEnableInternalServerError creates a PutUserSsoEnableInternalServerError with default headers values
func NewPutUserSsoEnableInternalServerError() *PutUserSsoEnableInternalServerError {
	return &PutUserSsoEnableInternalServerError{}
}

/* PutUserSsoEnableInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutUserSsoEnableInternalServerError struct {
	Payload *models.Error
}

func (o *PutUserSsoEnableInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user/sso/enable][%d] putUserSsoEnableInternalServerError  %+v", 500, o.Payload)
}
func (o *PutUserSsoEnableInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutUserSsoEnableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
