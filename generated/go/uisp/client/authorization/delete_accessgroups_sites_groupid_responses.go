// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/byxorna/nycmesh-tool/generated/go/uisp/models"
)

// DeleteAccessgroupsSitesGroupidReader is a Reader for the DeleteAccessgroupsSitesGroupid structure.
type DeleteAccessgroupsSitesGroupidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccessgroupsSitesGroupidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAccessgroupsSitesGroupidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAccessgroupsSitesGroupidBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAccessgroupsSitesGroupidUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAccessgroupsSitesGroupidForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAccessgroupsSitesGroupidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteAccessgroupsSitesGroupidConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAccessgroupsSitesGroupidInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAccessgroupsSitesGroupidOK creates a DeleteAccessgroupsSitesGroupidOK with default headers values
func NewDeleteAccessgroupsSitesGroupidOK() *DeleteAccessgroupsSitesGroupidOK {
	return &DeleteAccessgroupsSitesGroupidOK{}
}

/* DeleteAccessgroupsSitesGroupidOK describes a response with status code 200, with default header values.

Successful
*/
type DeleteAccessgroupsSitesGroupidOK struct {
	Payload *models.Status
}

func (o *DeleteAccessgroupsSitesGroupidOK) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidOK  %+v", 200, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidBadRequest creates a DeleteAccessgroupsSitesGroupidBadRequest with default headers values
func NewDeleteAccessgroupsSitesGroupidBadRequest() *DeleteAccessgroupsSitesGroupidBadRequest {
	return &DeleteAccessgroupsSitesGroupidBadRequest{}
}

/* DeleteAccessgroupsSitesGroupidBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAccessgroupsSitesGroupidBadRequest struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidUnauthorized creates a DeleteAccessgroupsSitesGroupidUnauthorized with default headers values
func NewDeleteAccessgroupsSitesGroupidUnauthorized() *DeleteAccessgroupsSitesGroupidUnauthorized {
	return &DeleteAccessgroupsSitesGroupidUnauthorized{}
}

/* DeleteAccessgroupsSitesGroupidUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAccessgroupsSitesGroupidUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidForbidden creates a DeleteAccessgroupsSitesGroupidForbidden with default headers values
func NewDeleteAccessgroupsSitesGroupidForbidden() *DeleteAccessgroupsSitesGroupidForbidden {
	return &DeleteAccessgroupsSitesGroupidForbidden{}
}

/* DeleteAccessgroupsSitesGroupidForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAccessgroupsSitesGroupidForbidden struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidForbidden) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidNotFound creates a DeleteAccessgroupsSitesGroupidNotFound with default headers values
func NewDeleteAccessgroupsSitesGroupidNotFound() *DeleteAccessgroupsSitesGroupidNotFound {
	return &DeleteAccessgroupsSitesGroupidNotFound{}
}

/* DeleteAccessgroupsSitesGroupidNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAccessgroupsSitesGroupidNotFound struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidConflict creates a DeleteAccessgroupsSitesGroupidConflict with default headers values
func NewDeleteAccessgroupsSitesGroupidConflict() *DeleteAccessgroupsSitesGroupidConflict {
	return &DeleteAccessgroupsSitesGroupidConflict{}
}

/* DeleteAccessgroupsSitesGroupidConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteAccessgroupsSitesGroupidConflict struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidConflict) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidConflict  %+v", 409, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessgroupsSitesGroupidInternalServerError creates a DeleteAccessgroupsSitesGroupidInternalServerError with default headers values
func NewDeleteAccessgroupsSitesGroupidInternalServerError() *DeleteAccessgroupsSitesGroupidInternalServerError {
	return &DeleteAccessgroupsSitesGroupidInternalServerError{}
}

/* DeleteAccessgroupsSitesGroupidInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAccessgroupsSitesGroupidInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteAccessgroupsSitesGroupidInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /access-groups/sites/{groupId}][%d] deleteAccessgroupsSitesGroupidInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteAccessgroupsSitesGroupidInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAccessgroupsSitesGroupidInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
