# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false


  build:
    needs: release
    strategy:
      matrix:
        include:
          - arch: amd64
            os: linux
            go_version: 1.17
          - arch: arm64
            os: linux
            go_version: 1.17
          - arch: arm64
            os: darwin
            go_version: 1.17
          - arch: amd64
            os: darwin
            go_version: 1.17
          - arch: amd64
            os: windows
            go_version: 1.17

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go ${{matrix.go_version}} for ${{ matrix.os }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}

      - name: Build
        run: make GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }}

      - uses: actions/upload-artifact@v2
        with:
          name: nycmesh-tool-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/nycmesh-tool

      - name: Upload artifact
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const tag = context.ref.replace("refs/tags/", "");
            // Get release for this tag
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });
            // Upload the release asset
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: "nycmesh-tool-${{ matrix.os }}-${{matrix.arch}}",
              data: await fs.readFileSync("bin/nycmesh-tool")
            });
