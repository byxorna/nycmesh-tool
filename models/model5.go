// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model5 model 5
//
// swagger:model Model 5
type Model5 struct {

	// cidr
	// Example: 192.168.1.100/24
	// Required: true
	Cidr *string `json:"cidr"`

	// origin
	// Example: dhcp
	// Enum: [dhcp slaac link-local static]
	Origin string `json:"origin,omitempty"`

	// type
	// Example: dynamic
	// Required: true
	// Enum: [dynamic static dhcp dhcpv6]
	Type *string `json:"type"`

	// version
	// Example: v4
	// Enum: [v4 v6]
	Version string `json:"version,omitempty"`
}

// Validate validates this model 5
func (m *Model5) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCidr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrigin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model5) validateCidr(formats strfmt.Registry) error {

	if err := validate.Required("cidr", "body", m.Cidr); err != nil {
		return err
	}

	return nil
}

var model5TypeOriginPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dhcp","slaac","link-local","static"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model5TypeOriginPropEnum = append(model5TypeOriginPropEnum, v)
	}
}

const (

	// Model5OriginDhcp captures enum value "dhcp"
	Model5OriginDhcp string = "dhcp"

	// Model5OriginSlaac captures enum value "slaac"
	Model5OriginSlaac string = "slaac"

	// Model5OriginLinkDashLocal captures enum value "link-local"
	Model5OriginLinkDashLocal string = "link-local"

	// Model5OriginStatic captures enum value "static"
	Model5OriginStatic string = "static"
)

// prop value enum
func (m *Model5) validateOriginEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, model5TypeOriginPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Model5) validateOrigin(formats strfmt.Registry) error {
	if swag.IsZero(m.Origin) { // not required
		return nil
	}

	// value enum
	if err := m.validateOriginEnum("origin", "body", m.Origin); err != nil {
		return err
	}

	return nil
}

var model5TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dynamic","static","dhcp","dhcpv6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model5TypeTypePropEnum = append(model5TypeTypePropEnum, v)
	}
}

const (

	// Model5TypeDynamic captures enum value "dynamic"
	Model5TypeDynamic string = "dynamic"

	// Model5TypeStatic captures enum value "static"
	Model5TypeStatic string = "static"

	// Model5TypeDhcp captures enum value "dhcp"
	Model5TypeDhcp string = "dhcp"

	// Model5TypeDhcpv6 captures enum value "dhcpv6"
	Model5TypeDhcpv6 string = "dhcpv6"
)

// prop value enum
func (m *Model5) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, model5TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Model5) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

var model5TypeVersionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["v4","v6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model5TypeVersionPropEnum = append(model5TypeVersionPropEnum, v)
	}
}

const (

	// Model5VersionV4 captures enum value "v4"
	Model5VersionV4 string = "v4"

	// Model5VersionV6 captures enum value "v6"
	Model5VersionV6 string = "v6"
)

// prop value enum
func (m *Model5) validateVersionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, model5TypeVersionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Model5) validateVersion(formats strfmt.Registry) error {
	if swag.IsZero(m.Version) { // not required
		return nil
	}

	// value enum
	if err := m.validateVersionEnum("version", "body", m.Version); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this model 5 based on context it is used
func (m *Model5) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Model5) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model5) UnmarshalBinary(b []byte) error {
	var res Model5
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
