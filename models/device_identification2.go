// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeviceIdentification2 Log respective device identification object.
//
// swagger:model DeviceIdentification 2
type DeviceIdentification2 struct {

	// Device is added to UISP.
	Authorized bool `json:"authorized,omitempty"`

	// category
	// Enum: [optical wired wireless accessories]
	Category string `json:"category,omitempty"`

	// UISP device alias or real name.
	DisplayName string `json:"displayName,omitempty"`

	// In SemVer format.
	FirmwareVersion string `json:"firmwareVersion,omitempty"`

	// hostname
	Hostname string `json:"hostname,omitempty"`

	// Device ID.
	// Example: f7ac9cad-ea28-4390-93c8-7add010e8ee3
	// Required: true
	ID *string `json:"id"`

	// Custom IP address in IPv4 or IPv6 format.
	// Example: 192.168.1.22
	IP string `json:"ip,omitempty"`

	// mac
	// Pattern: ^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$
	Mac string `json:"mac,omitempty"`

	// Short names, for example UF-OLT.
	// Enum: [UF-Nano UF-Loco UF-Wifi UF-Instant UF-OLT UF-OLT4 UISP-R-Pro UISP-R-Lite UNMS-S-Lite UISP-S-Lite UISP-S-Pro UISP-P-Lite UISP-LTE ER-X ER-X-SFP ERLite-3 ERPoe-5 ERPro-8 ER-8 ER-8-XG ER-4 ER-6P ER-12 ER-12P ER-10X EP-R8 EP-R6 EP-S16 ES-12F ES-16-150W ES-24-250W ES-24-500W ES-24-Lite ES-48-500W ES-48-750W ES-48-Lite ES-8-150W ES-16-XG ES-10XP ES-10X ES-18X ES-26X EP-54V-150W EP-24V-72W EP-54V-72W TSW-PoE TSW-PoE PRO ACB-AC ACB-ISP ACB-LOCO AF11FX AF24 AF24HD AF2X AF3X AF4X AF5 AF5U AF5X AF-5XHD AF-LTU LTU-LITE AF-LTU5 LTU-Rocket AFLTULR AF60 AF60-LR WaveAP WaveCPE GBE-LR GBE GBE-Plus GBE-AP R2N R2T R5N R6N R36-GPS RM3-GPS R2N-GPS R5N-GPS R9N-GPS R5T-GPS RM3 R36 R9N N2N N5N N6N NS3 N36 N9N N9S LM2 LM5 B2N B2T B5N B5T BAC AG2 AG2-HP AG5 AG5-HP p2N p5N M25 P2B-400 P5B-300 P5B-300-ISO P5B-400 P5B-400-ISO P5B-620 LB5-120 LB5 N5B N5B-16 N5B-19 N5B-300 N5B-400 N5B-Client N2B N2B-13 N2B-400 PAP LAP-HP LAP AGW AGW-LR AGW-Pro AGW-Installer PB5 PB3 P36 PBM10 NB5 NB2 NB3 B36 NB9 SM5 WM5 IS-M5 Loco5AC NS-5AC R5AC-PTMP R5AC-PTP R5AC-Lite R5AC-PRISM R2AC-Prism R2AC-Gen2 RP-5AC-Gen2 NBE-2AC-13 NBE-5AC-16 NBE-5AC-19 NBE-5AC-Gen2 PBE-5AC-300 PBE-5AC-300-ISO PBE-5AC-400 PBE-5AC-400-ISO PBE-5AC-500 PBE-5AC-500-ISO PBE-5AC-620 PBE-5AC-620-ISO PBE-2AC-400 PBE-2AC-400-ISO PBE-5AC-X-Gen2 PBE-5AC-Gen2 PBE-5AC-ISO-Gen2 PBE-5AC-400-ISO-Gen2 LBE-5AC-16-120 LAP-120 LBE-5AC-23 LBE-5AC-Gen2 LBE-5AC-LR LAP-GPS IS-5AC PS-5AC SolarSwitch SolarPoint BulletAC-IP67 B-DB-AC UNKNOWN]
	Model string `json:"model,omitempty"`

	// Full names, for example UFiber OLT.
	ModelName string `json:"modelName,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Short name, for example e600.
	PlatformID string `json:"platformId,omitempty"`

	// platform name
	// Enum: [UFiber NanoG UFiber Loco UFiber Wifi UFiber Instant UISPRPro UISPRLite UISPS UISPSPro UNMSS UISPLTE UISPPLite e50 e100 e200 e300 e600 e1000 u50 u100 u200 u300 u1000 ESWH ESGH ES ESX EP EPX SW ACB WA 2WA XC 2XC XW XM TI GBE AirGW AirGWP AF AF02 AF06 AF07 AF08 AF09 af5xhd afltu lturocket GP ltu60 SunMax UNKNOWN]
	PlatformName string `json:"platformName,omitempty"`

	// role
	// Enum: [router switch gpon ap station other ups server wireless convertor gateway]
	Role string `json:"role,omitempty"`

	// serial number
	SerialNumber string `json:"serialNumber,omitempty"`

	// site
	Site *Site `json:"site,omitempty"`

	// started
	// Format: date
	Started strfmt.Date `json:"started,omitempty"`

	// Status of the station.
	// Example: active
	// Enum: [active connecting discovered inactive disabled disconnected unauthorized proposed unknown unplaced custom]
	Status string `json:"status,omitempty"`

	// type
	// Enum: [onu olt uispp uispr uisps uispLte erouter eswitch epower airCube airMax airFiber toughSwitch solarBeam wave blackBox]
	Type string `json:"type,omitempty"`

	// updated
	// Format: date
	Updated strfmt.Date `json:"updated,omitempty"`

	// wan interface Id
	WanInterfaceID string `json:"wanInterfaceId,omitempty"`
}

// Validate validates this device identification 2
func (m *DeviceIdentification2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMac(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatformName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSite(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStarted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var deviceIdentification2TypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["optical","wired","wireless","accessories"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypeCategoryPropEnum = append(deviceIdentification2TypeCategoryPropEnum, v)
	}
}

const (

	// DeviceIdentification2CategoryOptical captures enum value "optical"
	DeviceIdentification2CategoryOptical string = "optical"

	// DeviceIdentification2CategoryWired captures enum value "wired"
	DeviceIdentification2CategoryWired string = "wired"

	// DeviceIdentification2CategoryWireless captures enum value "wireless"
	DeviceIdentification2CategoryWireless string = "wireless"

	// DeviceIdentification2CategoryAccessories captures enum value "accessories"
	DeviceIdentification2CategoryAccessories string = "accessories"
)

// prop value enum
func (m *DeviceIdentification2) validateCategoryEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypeCategoryPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validateCategory(formats strfmt.Registry) error {
	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification2) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification2) validateMac(formats strfmt.Registry) error {
	if swag.IsZero(m.Mac) { // not required
		return nil
	}

	if err := validate.Pattern("mac", "body", m.Mac, `^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$`); err != nil {
		return err
	}

	return nil
}

var deviceIdentification2TypeModelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UF-Nano","UF-Loco","UF-Wifi","UF-Instant","UF-OLT","UF-OLT4","UISP-R-Pro","UISP-R-Lite","UNMS-S-Lite","UISP-S-Lite","UISP-S-Pro","UISP-P-Lite","UISP-LTE","ER-X","ER-X-SFP","ERLite-3","ERPoe-5","ERPro-8","ER-8","ER-8-XG","ER-4","ER-6P","ER-12","ER-12P","ER-10X","EP-R8","EP-R6","EP-S16","ES-12F","ES-16-150W","ES-24-250W","ES-24-500W","ES-24-Lite","ES-48-500W","ES-48-750W","ES-48-Lite","ES-8-150W","ES-16-XG","ES-10XP","ES-10X","ES-18X","ES-26X","EP-54V-150W","EP-24V-72W","EP-54V-72W","TSW-PoE","TSW-PoE PRO","ACB-AC","ACB-ISP","ACB-LOCO","AF11FX","AF24","AF24HD","AF2X","AF3X","AF4X","AF5","AF5U","AF5X","AF-5XHD","AF-LTU","LTU-LITE","AF-LTU5","LTU-Rocket","AFLTULR","AF60","AF60-LR","WaveAP","WaveCPE","GBE-LR","GBE","GBE-Plus","GBE-AP","R2N","R2T","R5N","R6N","R36-GPS","RM3-GPS","R2N-GPS","R5N-GPS","R9N-GPS","R5T-GPS","RM3","R36","R9N","N2N","N5N","N6N","NS3","N36","N9N","N9S","LM2","LM5","B2N","B2T","B5N","B5T","BAC","AG2","AG2-HP","AG5","AG5-HP","p2N","p5N","M25","P2B-400","P5B-300","P5B-300-ISO","P5B-400","P5B-400-ISO","P5B-620","LB5-120","LB5","N5B","N5B-16","N5B-19","N5B-300","N5B-400","N5B-Client","N2B","N2B-13","N2B-400","PAP","LAP-HP","LAP","AGW","AGW-LR","AGW-Pro","AGW-Installer","PB5","PB3","P36","PBM10","NB5","NB2","NB3","B36","NB9","SM5","WM5","IS-M5","Loco5AC","NS-5AC","R5AC-PTMP","R5AC-PTP","R5AC-Lite","R5AC-PRISM","R2AC-Prism","R2AC-Gen2","RP-5AC-Gen2","NBE-2AC-13","NBE-5AC-16","NBE-5AC-19","NBE-5AC-Gen2","PBE-5AC-300","PBE-5AC-300-ISO","PBE-5AC-400","PBE-5AC-400-ISO","PBE-5AC-500","PBE-5AC-500-ISO","PBE-5AC-620","PBE-5AC-620-ISO","PBE-2AC-400","PBE-2AC-400-ISO","PBE-5AC-X-Gen2","PBE-5AC-Gen2","PBE-5AC-ISO-Gen2","PBE-5AC-400-ISO-Gen2","LBE-5AC-16-120","LAP-120","LBE-5AC-23","LBE-5AC-Gen2","LBE-5AC-LR","LAP-GPS","IS-5AC","PS-5AC","SolarSwitch","SolarPoint","BulletAC-IP67","B-DB-AC","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypeModelPropEnum = append(deviceIdentification2TypeModelPropEnum, v)
	}
}

const (

	// DeviceIdentification2ModelUFDashNano captures enum value "UF-Nano"
	DeviceIdentification2ModelUFDashNano string = "UF-Nano"

	// DeviceIdentification2ModelUFDashLoco captures enum value "UF-Loco"
	DeviceIdentification2ModelUFDashLoco string = "UF-Loco"

	// DeviceIdentification2ModelUFDashWifi captures enum value "UF-Wifi"
	DeviceIdentification2ModelUFDashWifi string = "UF-Wifi"

	// DeviceIdentification2ModelUFDashInstant captures enum value "UF-Instant"
	DeviceIdentification2ModelUFDashInstant string = "UF-Instant"

	// DeviceIdentification2ModelUFDashOLT captures enum value "UF-OLT"
	DeviceIdentification2ModelUFDashOLT string = "UF-OLT"

	// DeviceIdentification2ModelUFDashOLT4 captures enum value "UF-OLT4"
	DeviceIdentification2ModelUFDashOLT4 string = "UF-OLT4"

	// DeviceIdentification2ModelUISPDashRDashPro captures enum value "UISP-R-Pro"
	DeviceIdentification2ModelUISPDashRDashPro string = "UISP-R-Pro"

	// DeviceIdentification2ModelUISPDashRDashLite captures enum value "UISP-R-Lite"
	DeviceIdentification2ModelUISPDashRDashLite string = "UISP-R-Lite"

	// DeviceIdentification2ModelUNMSDashSDashLite captures enum value "UNMS-S-Lite"
	DeviceIdentification2ModelUNMSDashSDashLite string = "UNMS-S-Lite"

	// DeviceIdentification2ModelUISPDashSDashLite captures enum value "UISP-S-Lite"
	DeviceIdentification2ModelUISPDashSDashLite string = "UISP-S-Lite"

	// DeviceIdentification2ModelUISPDashSDashPro captures enum value "UISP-S-Pro"
	DeviceIdentification2ModelUISPDashSDashPro string = "UISP-S-Pro"

	// DeviceIdentification2ModelUISPDashPDashLite captures enum value "UISP-P-Lite"
	DeviceIdentification2ModelUISPDashPDashLite string = "UISP-P-Lite"

	// DeviceIdentification2ModelUISPDashLTE captures enum value "UISP-LTE"
	DeviceIdentification2ModelUISPDashLTE string = "UISP-LTE"

	// DeviceIdentification2ModelERDashX captures enum value "ER-X"
	DeviceIdentification2ModelERDashX string = "ER-X"

	// DeviceIdentification2ModelERDashXDashSFP captures enum value "ER-X-SFP"
	DeviceIdentification2ModelERDashXDashSFP string = "ER-X-SFP"

	// DeviceIdentification2ModelERLiteDash3 captures enum value "ERLite-3"
	DeviceIdentification2ModelERLiteDash3 string = "ERLite-3"

	// DeviceIdentification2ModelERPoeDash5 captures enum value "ERPoe-5"
	DeviceIdentification2ModelERPoeDash5 string = "ERPoe-5"

	// DeviceIdentification2ModelERProDash8 captures enum value "ERPro-8"
	DeviceIdentification2ModelERProDash8 string = "ERPro-8"

	// DeviceIdentification2ModelERDash8 captures enum value "ER-8"
	DeviceIdentification2ModelERDash8 string = "ER-8"

	// DeviceIdentification2ModelERDash8DashXG captures enum value "ER-8-XG"
	DeviceIdentification2ModelERDash8DashXG string = "ER-8-XG"

	// DeviceIdentification2ModelERDash4 captures enum value "ER-4"
	DeviceIdentification2ModelERDash4 string = "ER-4"

	// DeviceIdentification2ModelERDash6P captures enum value "ER-6P"
	DeviceIdentification2ModelERDash6P string = "ER-6P"

	// DeviceIdentification2ModelERDash12 captures enum value "ER-12"
	DeviceIdentification2ModelERDash12 string = "ER-12"

	// DeviceIdentification2ModelERDash12P captures enum value "ER-12P"
	DeviceIdentification2ModelERDash12P string = "ER-12P"

	// DeviceIdentification2ModelERDash10X captures enum value "ER-10X"
	DeviceIdentification2ModelERDash10X string = "ER-10X"

	// DeviceIdentification2ModelEPDashR8 captures enum value "EP-R8"
	DeviceIdentification2ModelEPDashR8 string = "EP-R8"

	// DeviceIdentification2ModelEPDashR6 captures enum value "EP-R6"
	DeviceIdentification2ModelEPDashR6 string = "EP-R6"

	// DeviceIdentification2ModelEPDashS16 captures enum value "EP-S16"
	DeviceIdentification2ModelEPDashS16 string = "EP-S16"

	// DeviceIdentification2ModelESDash12F captures enum value "ES-12F"
	DeviceIdentification2ModelESDash12F string = "ES-12F"

	// DeviceIdentification2ModelESDash16Dash150W captures enum value "ES-16-150W"
	DeviceIdentification2ModelESDash16Dash150W string = "ES-16-150W"

	// DeviceIdentification2ModelESDash24Dash250W captures enum value "ES-24-250W"
	DeviceIdentification2ModelESDash24Dash250W string = "ES-24-250W"

	// DeviceIdentification2ModelESDash24Dash500W captures enum value "ES-24-500W"
	DeviceIdentification2ModelESDash24Dash500W string = "ES-24-500W"

	// DeviceIdentification2ModelESDash24DashLite captures enum value "ES-24-Lite"
	DeviceIdentification2ModelESDash24DashLite string = "ES-24-Lite"

	// DeviceIdentification2ModelESDash48Dash500W captures enum value "ES-48-500W"
	DeviceIdentification2ModelESDash48Dash500W string = "ES-48-500W"

	// DeviceIdentification2ModelESDash48Dash750W captures enum value "ES-48-750W"
	DeviceIdentification2ModelESDash48Dash750W string = "ES-48-750W"

	// DeviceIdentification2ModelESDash48DashLite captures enum value "ES-48-Lite"
	DeviceIdentification2ModelESDash48DashLite string = "ES-48-Lite"

	// DeviceIdentification2ModelESDash8Dash150W captures enum value "ES-8-150W"
	DeviceIdentification2ModelESDash8Dash150W string = "ES-8-150W"

	// DeviceIdentification2ModelESDash16DashXG captures enum value "ES-16-XG"
	DeviceIdentification2ModelESDash16DashXG string = "ES-16-XG"

	// DeviceIdentification2ModelESDash10XP captures enum value "ES-10XP"
	DeviceIdentification2ModelESDash10XP string = "ES-10XP"

	// DeviceIdentification2ModelESDash10X captures enum value "ES-10X"
	DeviceIdentification2ModelESDash10X string = "ES-10X"

	// DeviceIdentification2ModelESDash18X captures enum value "ES-18X"
	DeviceIdentification2ModelESDash18X string = "ES-18X"

	// DeviceIdentification2ModelESDash26X captures enum value "ES-26X"
	DeviceIdentification2ModelESDash26X string = "ES-26X"

	// DeviceIdentification2ModelEPDash54VDash150W captures enum value "EP-54V-150W"
	DeviceIdentification2ModelEPDash54VDash150W string = "EP-54V-150W"

	// DeviceIdentification2ModelEPDash24VDash72W captures enum value "EP-24V-72W"
	DeviceIdentification2ModelEPDash24VDash72W string = "EP-24V-72W"

	// DeviceIdentification2ModelEPDash54VDash72W captures enum value "EP-54V-72W"
	DeviceIdentification2ModelEPDash54VDash72W string = "EP-54V-72W"

	// DeviceIdentification2ModelTSWDashPoE captures enum value "TSW-PoE"
	DeviceIdentification2ModelTSWDashPoE string = "TSW-PoE"

	// DeviceIdentification2ModelTSWDashPoEPRO captures enum value "TSW-PoE PRO"
	DeviceIdentification2ModelTSWDashPoEPRO string = "TSW-PoE PRO"

	// DeviceIdentification2ModelACBDashAC captures enum value "ACB-AC"
	DeviceIdentification2ModelACBDashAC string = "ACB-AC"

	// DeviceIdentification2ModelACBDashISP captures enum value "ACB-ISP"
	DeviceIdentification2ModelACBDashISP string = "ACB-ISP"

	// DeviceIdentification2ModelACBDashLOCO captures enum value "ACB-LOCO"
	DeviceIdentification2ModelACBDashLOCO string = "ACB-LOCO"

	// DeviceIdentification2ModelAF11FX captures enum value "AF11FX"
	DeviceIdentification2ModelAF11FX string = "AF11FX"

	// DeviceIdentification2ModelAF24 captures enum value "AF24"
	DeviceIdentification2ModelAF24 string = "AF24"

	// DeviceIdentification2ModelAF24HD captures enum value "AF24HD"
	DeviceIdentification2ModelAF24HD string = "AF24HD"

	// DeviceIdentification2ModelAF2X captures enum value "AF2X"
	DeviceIdentification2ModelAF2X string = "AF2X"

	// DeviceIdentification2ModelAF3X captures enum value "AF3X"
	DeviceIdentification2ModelAF3X string = "AF3X"

	// DeviceIdentification2ModelAF4X captures enum value "AF4X"
	DeviceIdentification2ModelAF4X string = "AF4X"

	// DeviceIdentification2ModelAF5 captures enum value "AF5"
	DeviceIdentification2ModelAF5 string = "AF5"

	// DeviceIdentification2ModelAF5U captures enum value "AF5U"
	DeviceIdentification2ModelAF5U string = "AF5U"

	// DeviceIdentification2ModelAF5X captures enum value "AF5X"
	DeviceIdentification2ModelAF5X string = "AF5X"

	// DeviceIdentification2ModelAFDash5XHD captures enum value "AF-5XHD"
	DeviceIdentification2ModelAFDash5XHD string = "AF-5XHD"

	// DeviceIdentification2ModelAFDashLTU captures enum value "AF-LTU"
	DeviceIdentification2ModelAFDashLTU string = "AF-LTU"

	// DeviceIdentification2ModelLTUDashLITE captures enum value "LTU-LITE"
	DeviceIdentification2ModelLTUDashLITE string = "LTU-LITE"

	// DeviceIdentification2ModelAFDashLTU5 captures enum value "AF-LTU5"
	DeviceIdentification2ModelAFDashLTU5 string = "AF-LTU5"

	// DeviceIdentification2ModelLTUDashRocket captures enum value "LTU-Rocket"
	DeviceIdentification2ModelLTUDashRocket string = "LTU-Rocket"

	// DeviceIdentification2ModelAFLTULR captures enum value "AFLTULR"
	DeviceIdentification2ModelAFLTULR string = "AFLTULR"

	// DeviceIdentification2ModelAF60 captures enum value "AF60"
	DeviceIdentification2ModelAF60 string = "AF60"

	// DeviceIdentification2ModelAF60DashLR captures enum value "AF60-LR"
	DeviceIdentification2ModelAF60DashLR string = "AF60-LR"

	// DeviceIdentification2ModelWaveAP captures enum value "WaveAP"
	DeviceIdentification2ModelWaveAP string = "WaveAP"

	// DeviceIdentification2ModelWaveCPE captures enum value "WaveCPE"
	DeviceIdentification2ModelWaveCPE string = "WaveCPE"

	// DeviceIdentification2ModelGBEDashLR captures enum value "GBE-LR"
	DeviceIdentification2ModelGBEDashLR string = "GBE-LR"

	// DeviceIdentification2ModelGBE captures enum value "GBE"
	DeviceIdentification2ModelGBE string = "GBE"

	// DeviceIdentification2ModelGBEDashPlus captures enum value "GBE-Plus"
	DeviceIdentification2ModelGBEDashPlus string = "GBE-Plus"

	// DeviceIdentification2ModelGBEDashAP captures enum value "GBE-AP"
	DeviceIdentification2ModelGBEDashAP string = "GBE-AP"

	// DeviceIdentification2ModelR2N captures enum value "R2N"
	DeviceIdentification2ModelR2N string = "R2N"

	// DeviceIdentification2ModelR2T captures enum value "R2T"
	DeviceIdentification2ModelR2T string = "R2T"

	// DeviceIdentification2ModelR5N captures enum value "R5N"
	DeviceIdentification2ModelR5N string = "R5N"

	// DeviceIdentification2ModelR6N captures enum value "R6N"
	DeviceIdentification2ModelR6N string = "R6N"

	// DeviceIdentification2ModelR36DashGPS captures enum value "R36-GPS"
	DeviceIdentification2ModelR36DashGPS string = "R36-GPS"

	// DeviceIdentification2ModelRM3DashGPS captures enum value "RM3-GPS"
	DeviceIdentification2ModelRM3DashGPS string = "RM3-GPS"

	// DeviceIdentification2ModelR2NDashGPS captures enum value "R2N-GPS"
	DeviceIdentification2ModelR2NDashGPS string = "R2N-GPS"

	// DeviceIdentification2ModelR5NDashGPS captures enum value "R5N-GPS"
	DeviceIdentification2ModelR5NDashGPS string = "R5N-GPS"

	// DeviceIdentification2ModelR9NDashGPS captures enum value "R9N-GPS"
	DeviceIdentification2ModelR9NDashGPS string = "R9N-GPS"

	// DeviceIdentification2ModelR5TDashGPS captures enum value "R5T-GPS"
	DeviceIdentification2ModelR5TDashGPS string = "R5T-GPS"

	// DeviceIdentification2ModelRM3 captures enum value "RM3"
	DeviceIdentification2ModelRM3 string = "RM3"

	// DeviceIdentification2ModelR36 captures enum value "R36"
	DeviceIdentification2ModelR36 string = "R36"

	// DeviceIdentification2ModelR9N captures enum value "R9N"
	DeviceIdentification2ModelR9N string = "R9N"

	// DeviceIdentification2ModelN2N captures enum value "N2N"
	DeviceIdentification2ModelN2N string = "N2N"

	// DeviceIdentification2ModelN5N captures enum value "N5N"
	DeviceIdentification2ModelN5N string = "N5N"

	// DeviceIdentification2ModelN6N captures enum value "N6N"
	DeviceIdentification2ModelN6N string = "N6N"

	// DeviceIdentification2ModelNS3 captures enum value "NS3"
	DeviceIdentification2ModelNS3 string = "NS3"

	// DeviceIdentification2ModelN36 captures enum value "N36"
	DeviceIdentification2ModelN36 string = "N36"

	// DeviceIdentification2ModelN9N captures enum value "N9N"
	DeviceIdentification2ModelN9N string = "N9N"

	// DeviceIdentification2ModelN9S captures enum value "N9S"
	DeviceIdentification2ModelN9S string = "N9S"

	// DeviceIdentification2ModelLM2 captures enum value "LM2"
	DeviceIdentification2ModelLM2 string = "LM2"

	// DeviceIdentification2ModelLM5 captures enum value "LM5"
	DeviceIdentification2ModelLM5 string = "LM5"

	// DeviceIdentification2ModelB2N captures enum value "B2N"
	DeviceIdentification2ModelB2N string = "B2N"

	// DeviceIdentification2ModelB2T captures enum value "B2T"
	DeviceIdentification2ModelB2T string = "B2T"

	// DeviceIdentification2ModelB5N captures enum value "B5N"
	DeviceIdentification2ModelB5N string = "B5N"

	// DeviceIdentification2ModelB5T captures enum value "B5T"
	DeviceIdentification2ModelB5T string = "B5T"

	// DeviceIdentification2ModelBAC captures enum value "BAC"
	DeviceIdentification2ModelBAC string = "BAC"

	// DeviceIdentification2ModelAG2 captures enum value "AG2"
	DeviceIdentification2ModelAG2 string = "AG2"

	// DeviceIdentification2ModelAG2DashHP captures enum value "AG2-HP"
	DeviceIdentification2ModelAG2DashHP string = "AG2-HP"

	// DeviceIdentification2ModelAG5 captures enum value "AG5"
	DeviceIdentification2ModelAG5 string = "AG5"

	// DeviceIdentification2ModelAG5DashHP captures enum value "AG5-HP"
	DeviceIdentification2ModelAG5DashHP string = "AG5-HP"

	// DeviceIdentification2ModelP2N captures enum value "p2N"
	DeviceIdentification2ModelP2N string = "p2N"

	// DeviceIdentification2ModelP5N captures enum value "p5N"
	DeviceIdentification2ModelP5N string = "p5N"

	// DeviceIdentification2ModelM25 captures enum value "M25"
	DeviceIdentification2ModelM25 string = "M25"

	// DeviceIdentification2ModelP2BDash400 captures enum value "P2B-400"
	DeviceIdentification2ModelP2BDash400 string = "P2B-400"

	// DeviceIdentification2ModelP5BDash300 captures enum value "P5B-300"
	DeviceIdentification2ModelP5BDash300 string = "P5B-300"

	// DeviceIdentification2ModelP5BDash300DashISO captures enum value "P5B-300-ISO"
	DeviceIdentification2ModelP5BDash300DashISO string = "P5B-300-ISO"

	// DeviceIdentification2ModelP5BDash400 captures enum value "P5B-400"
	DeviceIdentification2ModelP5BDash400 string = "P5B-400"

	// DeviceIdentification2ModelP5BDash400DashISO captures enum value "P5B-400-ISO"
	DeviceIdentification2ModelP5BDash400DashISO string = "P5B-400-ISO"

	// DeviceIdentification2ModelP5BDash620 captures enum value "P5B-620"
	DeviceIdentification2ModelP5BDash620 string = "P5B-620"

	// DeviceIdentification2ModelLB5Dash120 captures enum value "LB5-120"
	DeviceIdentification2ModelLB5Dash120 string = "LB5-120"

	// DeviceIdentification2ModelLB5 captures enum value "LB5"
	DeviceIdentification2ModelLB5 string = "LB5"

	// DeviceIdentification2ModelN5B captures enum value "N5B"
	DeviceIdentification2ModelN5B string = "N5B"

	// DeviceIdentification2ModelN5BDash16 captures enum value "N5B-16"
	DeviceIdentification2ModelN5BDash16 string = "N5B-16"

	// DeviceIdentification2ModelN5BDash19 captures enum value "N5B-19"
	DeviceIdentification2ModelN5BDash19 string = "N5B-19"

	// DeviceIdentification2ModelN5BDash300 captures enum value "N5B-300"
	DeviceIdentification2ModelN5BDash300 string = "N5B-300"

	// DeviceIdentification2ModelN5BDash400 captures enum value "N5B-400"
	DeviceIdentification2ModelN5BDash400 string = "N5B-400"

	// DeviceIdentification2ModelN5BDashClient captures enum value "N5B-Client"
	DeviceIdentification2ModelN5BDashClient string = "N5B-Client"

	// DeviceIdentification2ModelN2B captures enum value "N2B"
	DeviceIdentification2ModelN2B string = "N2B"

	// DeviceIdentification2ModelN2BDash13 captures enum value "N2B-13"
	DeviceIdentification2ModelN2BDash13 string = "N2B-13"

	// DeviceIdentification2ModelN2BDash400 captures enum value "N2B-400"
	DeviceIdentification2ModelN2BDash400 string = "N2B-400"

	// DeviceIdentification2ModelPAP captures enum value "PAP"
	DeviceIdentification2ModelPAP string = "PAP"

	// DeviceIdentification2ModelLAPDashHP captures enum value "LAP-HP"
	DeviceIdentification2ModelLAPDashHP string = "LAP-HP"

	// DeviceIdentification2ModelLAP captures enum value "LAP"
	DeviceIdentification2ModelLAP string = "LAP"

	// DeviceIdentification2ModelAGW captures enum value "AGW"
	DeviceIdentification2ModelAGW string = "AGW"

	// DeviceIdentification2ModelAGWDashLR captures enum value "AGW-LR"
	DeviceIdentification2ModelAGWDashLR string = "AGW-LR"

	// DeviceIdentification2ModelAGWDashPro captures enum value "AGW-Pro"
	DeviceIdentification2ModelAGWDashPro string = "AGW-Pro"

	// DeviceIdentification2ModelAGWDashInstaller captures enum value "AGW-Installer"
	DeviceIdentification2ModelAGWDashInstaller string = "AGW-Installer"

	// DeviceIdentification2ModelPB5 captures enum value "PB5"
	DeviceIdentification2ModelPB5 string = "PB5"

	// DeviceIdentification2ModelPB3 captures enum value "PB3"
	DeviceIdentification2ModelPB3 string = "PB3"

	// DeviceIdentification2ModelP36 captures enum value "P36"
	DeviceIdentification2ModelP36 string = "P36"

	// DeviceIdentification2ModelPBM10 captures enum value "PBM10"
	DeviceIdentification2ModelPBM10 string = "PBM10"

	// DeviceIdentification2ModelNB5 captures enum value "NB5"
	DeviceIdentification2ModelNB5 string = "NB5"

	// DeviceIdentification2ModelNB2 captures enum value "NB2"
	DeviceIdentification2ModelNB2 string = "NB2"

	// DeviceIdentification2ModelNB3 captures enum value "NB3"
	DeviceIdentification2ModelNB3 string = "NB3"

	// DeviceIdentification2ModelB36 captures enum value "B36"
	DeviceIdentification2ModelB36 string = "B36"

	// DeviceIdentification2ModelNB9 captures enum value "NB9"
	DeviceIdentification2ModelNB9 string = "NB9"

	// DeviceIdentification2ModelSM5 captures enum value "SM5"
	DeviceIdentification2ModelSM5 string = "SM5"

	// DeviceIdentification2ModelWM5 captures enum value "WM5"
	DeviceIdentification2ModelWM5 string = "WM5"

	// DeviceIdentification2ModelISDashM5 captures enum value "IS-M5"
	DeviceIdentification2ModelISDashM5 string = "IS-M5"

	// DeviceIdentification2ModelLoco5AC captures enum value "Loco5AC"
	DeviceIdentification2ModelLoco5AC string = "Loco5AC"

	// DeviceIdentification2ModelNSDash5AC captures enum value "NS-5AC"
	DeviceIdentification2ModelNSDash5AC string = "NS-5AC"

	// DeviceIdentification2ModelR5ACDashPTMP captures enum value "R5AC-PTMP"
	DeviceIdentification2ModelR5ACDashPTMP string = "R5AC-PTMP"

	// DeviceIdentification2ModelR5ACDashPTP captures enum value "R5AC-PTP"
	DeviceIdentification2ModelR5ACDashPTP string = "R5AC-PTP"

	// DeviceIdentification2ModelR5ACDashLite captures enum value "R5AC-Lite"
	DeviceIdentification2ModelR5ACDashLite string = "R5AC-Lite"

	// DeviceIdentification2ModelR5ACDashPRISM captures enum value "R5AC-PRISM"
	DeviceIdentification2ModelR5ACDashPRISM string = "R5AC-PRISM"

	// DeviceIdentification2ModelR2ACDashPrism captures enum value "R2AC-Prism"
	DeviceIdentification2ModelR2ACDashPrism string = "R2AC-Prism"

	// DeviceIdentification2ModelR2ACDashGen2 captures enum value "R2AC-Gen2"
	DeviceIdentification2ModelR2ACDashGen2 string = "R2AC-Gen2"

	// DeviceIdentification2ModelRPDash5ACDashGen2 captures enum value "RP-5AC-Gen2"
	DeviceIdentification2ModelRPDash5ACDashGen2 string = "RP-5AC-Gen2"

	// DeviceIdentification2ModelNBEDash2ACDash13 captures enum value "NBE-2AC-13"
	DeviceIdentification2ModelNBEDash2ACDash13 string = "NBE-2AC-13"

	// DeviceIdentification2ModelNBEDash5ACDash16 captures enum value "NBE-5AC-16"
	DeviceIdentification2ModelNBEDash5ACDash16 string = "NBE-5AC-16"

	// DeviceIdentification2ModelNBEDash5ACDash19 captures enum value "NBE-5AC-19"
	DeviceIdentification2ModelNBEDash5ACDash19 string = "NBE-5AC-19"

	// DeviceIdentification2ModelNBEDash5ACDashGen2 captures enum value "NBE-5AC-Gen2"
	DeviceIdentification2ModelNBEDash5ACDashGen2 string = "NBE-5AC-Gen2"

	// DeviceIdentification2ModelPBEDash5ACDash300 captures enum value "PBE-5AC-300"
	DeviceIdentification2ModelPBEDash5ACDash300 string = "PBE-5AC-300"

	// DeviceIdentification2ModelPBEDash5ACDash300DashISO captures enum value "PBE-5AC-300-ISO"
	DeviceIdentification2ModelPBEDash5ACDash300DashISO string = "PBE-5AC-300-ISO"

	// DeviceIdentification2ModelPBEDash5ACDash400 captures enum value "PBE-5AC-400"
	DeviceIdentification2ModelPBEDash5ACDash400 string = "PBE-5AC-400"

	// DeviceIdentification2ModelPBEDash5ACDash400DashISO captures enum value "PBE-5AC-400-ISO"
	DeviceIdentification2ModelPBEDash5ACDash400DashISO string = "PBE-5AC-400-ISO"

	// DeviceIdentification2ModelPBEDash5ACDash500 captures enum value "PBE-5AC-500"
	DeviceIdentification2ModelPBEDash5ACDash500 string = "PBE-5AC-500"

	// DeviceIdentification2ModelPBEDash5ACDash500DashISO captures enum value "PBE-5AC-500-ISO"
	DeviceIdentification2ModelPBEDash5ACDash500DashISO string = "PBE-5AC-500-ISO"

	// DeviceIdentification2ModelPBEDash5ACDash620 captures enum value "PBE-5AC-620"
	DeviceIdentification2ModelPBEDash5ACDash620 string = "PBE-5AC-620"

	// DeviceIdentification2ModelPBEDash5ACDash620DashISO captures enum value "PBE-5AC-620-ISO"
	DeviceIdentification2ModelPBEDash5ACDash620DashISO string = "PBE-5AC-620-ISO"

	// DeviceIdentification2ModelPBEDash2ACDash400 captures enum value "PBE-2AC-400"
	DeviceIdentification2ModelPBEDash2ACDash400 string = "PBE-2AC-400"

	// DeviceIdentification2ModelPBEDash2ACDash400DashISO captures enum value "PBE-2AC-400-ISO"
	DeviceIdentification2ModelPBEDash2ACDash400DashISO string = "PBE-2AC-400-ISO"

	// DeviceIdentification2ModelPBEDash5ACDashXDashGen2 captures enum value "PBE-5AC-X-Gen2"
	DeviceIdentification2ModelPBEDash5ACDashXDashGen2 string = "PBE-5AC-X-Gen2"

	// DeviceIdentification2ModelPBEDash5ACDashGen2 captures enum value "PBE-5AC-Gen2"
	DeviceIdentification2ModelPBEDash5ACDashGen2 string = "PBE-5AC-Gen2"

	// DeviceIdentification2ModelPBEDash5ACDashISODashGen2 captures enum value "PBE-5AC-ISO-Gen2"
	DeviceIdentification2ModelPBEDash5ACDashISODashGen2 string = "PBE-5AC-ISO-Gen2"

	// DeviceIdentification2ModelPBEDash5ACDash400DashISODashGen2 captures enum value "PBE-5AC-400-ISO-Gen2"
	DeviceIdentification2ModelPBEDash5ACDash400DashISODashGen2 string = "PBE-5AC-400-ISO-Gen2"

	// DeviceIdentification2ModelLBEDash5ACDash16Dash120 captures enum value "LBE-5AC-16-120"
	DeviceIdentification2ModelLBEDash5ACDash16Dash120 string = "LBE-5AC-16-120"

	// DeviceIdentification2ModelLAPDash120 captures enum value "LAP-120"
	DeviceIdentification2ModelLAPDash120 string = "LAP-120"

	// DeviceIdentification2ModelLBEDash5ACDash23 captures enum value "LBE-5AC-23"
	DeviceIdentification2ModelLBEDash5ACDash23 string = "LBE-5AC-23"

	// DeviceIdentification2ModelLBEDash5ACDashGen2 captures enum value "LBE-5AC-Gen2"
	DeviceIdentification2ModelLBEDash5ACDashGen2 string = "LBE-5AC-Gen2"

	// DeviceIdentification2ModelLBEDash5ACDashLR captures enum value "LBE-5AC-LR"
	DeviceIdentification2ModelLBEDash5ACDashLR string = "LBE-5AC-LR"

	// DeviceIdentification2ModelLAPDashGPS captures enum value "LAP-GPS"
	DeviceIdentification2ModelLAPDashGPS string = "LAP-GPS"

	// DeviceIdentification2ModelISDash5AC captures enum value "IS-5AC"
	DeviceIdentification2ModelISDash5AC string = "IS-5AC"

	// DeviceIdentification2ModelPSDash5AC captures enum value "PS-5AC"
	DeviceIdentification2ModelPSDash5AC string = "PS-5AC"

	// DeviceIdentification2ModelSolarSwitch captures enum value "SolarSwitch"
	DeviceIdentification2ModelSolarSwitch string = "SolarSwitch"

	// DeviceIdentification2ModelSolarPoint captures enum value "SolarPoint"
	DeviceIdentification2ModelSolarPoint string = "SolarPoint"

	// DeviceIdentification2ModelBulletACDashIP67 captures enum value "BulletAC-IP67"
	DeviceIdentification2ModelBulletACDashIP67 string = "BulletAC-IP67"

	// DeviceIdentification2ModelBDashDBDashAC captures enum value "B-DB-AC"
	DeviceIdentification2ModelBDashDBDashAC string = "B-DB-AC"

	// DeviceIdentification2ModelUNKNOWN captures enum value "UNKNOWN"
	DeviceIdentification2ModelUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *DeviceIdentification2) validateModelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypeModelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validateModel(formats strfmt.Registry) error {
	if swag.IsZero(m.Model) { // not required
		return nil
	}

	// value enum
	if err := m.validateModelEnum("model", "body", m.Model); err != nil {
		return err
	}

	return nil
}

var deviceIdentification2TypePlatformNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UFiber NanoG","UFiber Loco","UFiber Wifi","UFiber Instant","UISPRPro","UISPRLite","UISPS","UISPSPro","UNMSS","UISPLTE","UISPPLite","e50","e100","e200","e300","e600","e1000","u50","u100","u200","u300","u1000","ESWH","ESGH","ES","ESX","EP","EPX","SW","ACB","WA","2WA","XC","2XC","XW","XM","TI","GBE","AirGW","AirGWP","AF","AF02","AF06","AF07","AF08","AF09","af5xhd","afltu","lturocket","GP","ltu60","SunMax","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypePlatformNamePropEnum = append(deviceIdentification2TypePlatformNamePropEnum, v)
	}
}

const (

	// DeviceIdentification2PlatformNameUFiberNanoG captures enum value "UFiber NanoG"
	DeviceIdentification2PlatformNameUFiberNanoG string = "UFiber NanoG"

	// DeviceIdentification2PlatformNameUFiberLoco captures enum value "UFiber Loco"
	DeviceIdentification2PlatformNameUFiberLoco string = "UFiber Loco"

	// DeviceIdentification2PlatformNameUFiberWifi captures enum value "UFiber Wifi"
	DeviceIdentification2PlatformNameUFiberWifi string = "UFiber Wifi"

	// DeviceIdentification2PlatformNameUFiberInstant captures enum value "UFiber Instant"
	DeviceIdentification2PlatformNameUFiberInstant string = "UFiber Instant"

	// DeviceIdentification2PlatformNameUISPRPro captures enum value "UISPRPro"
	DeviceIdentification2PlatformNameUISPRPro string = "UISPRPro"

	// DeviceIdentification2PlatformNameUISPRLite captures enum value "UISPRLite"
	DeviceIdentification2PlatformNameUISPRLite string = "UISPRLite"

	// DeviceIdentification2PlatformNameUISPS captures enum value "UISPS"
	DeviceIdentification2PlatformNameUISPS string = "UISPS"

	// DeviceIdentification2PlatformNameUISPSPro captures enum value "UISPSPro"
	DeviceIdentification2PlatformNameUISPSPro string = "UISPSPro"

	// DeviceIdentification2PlatformNameUNMSS captures enum value "UNMSS"
	DeviceIdentification2PlatformNameUNMSS string = "UNMSS"

	// DeviceIdentification2PlatformNameUISPLTE captures enum value "UISPLTE"
	DeviceIdentification2PlatformNameUISPLTE string = "UISPLTE"

	// DeviceIdentification2PlatformNameUISPPLite captures enum value "UISPPLite"
	DeviceIdentification2PlatformNameUISPPLite string = "UISPPLite"

	// DeviceIdentification2PlatformNameE50 captures enum value "e50"
	DeviceIdentification2PlatformNameE50 string = "e50"

	// DeviceIdentification2PlatformNameE100 captures enum value "e100"
	DeviceIdentification2PlatformNameE100 string = "e100"

	// DeviceIdentification2PlatformNameE200 captures enum value "e200"
	DeviceIdentification2PlatformNameE200 string = "e200"

	// DeviceIdentification2PlatformNameE300 captures enum value "e300"
	DeviceIdentification2PlatformNameE300 string = "e300"

	// DeviceIdentification2PlatformNameE600 captures enum value "e600"
	DeviceIdentification2PlatformNameE600 string = "e600"

	// DeviceIdentification2PlatformNameE1000 captures enum value "e1000"
	DeviceIdentification2PlatformNameE1000 string = "e1000"

	// DeviceIdentification2PlatformNameU50 captures enum value "u50"
	DeviceIdentification2PlatformNameU50 string = "u50"

	// DeviceIdentification2PlatformNameU100 captures enum value "u100"
	DeviceIdentification2PlatformNameU100 string = "u100"

	// DeviceIdentification2PlatformNameU200 captures enum value "u200"
	DeviceIdentification2PlatformNameU200 string = "u200"

	// DeviceIdentification2PlatformNameU300 captures enum value "u300"
	DeviceIdentification2PlatformNameU300 string = "u300"

	// DeviceIdentification2PlatformNameU1000 captures enum value "u1000"
	DeviceIdentification2PlatformNameU1000 string = "u1000"

	// DeviceIdentification2PlatformNameESWH captures enum value "ESWH"
	DeviceIdentification2PlatformNameESWH string = "ESWH"

	// DeviceIdentification2PlatformNameESGH captures enum value "ESGH"
	DeviceIdentification2PlatformNameESGH string = "ESGH"

	// DeviceIdentification2PlatformNameES captures enum value "ES"
	DeviceIdentification2PlatformNameES string = "ES"

	// DeviceIdentification2PlatformNameESX captures enum value "ESX"
	DeviceIdentification2PlatformNameESX string = "ESX"

	// DeviceIdentification2PlatformNameEP captures enum value "EP"
	DeviceIdentification2PlatformNameEP string = "EP"

	// DeviceIdentification2PlatformNameEPX captures enum value "EPX"
	DeviceIdentification2PlatformNameEPX string = "EPX"

	// DeviceIdentification2PlatformNameSW captures enum value "SW"
	DeviceIdentification2PlatformNameSW string = "SW"

	// DeviceIdentification2PlatformNameACB captures enum value "ACB"
	DeviceIdentification2PlatformNameACB string = "ACB"

	// DeviceIdentification2PlatformNameWA captures enum value "WA"
	DeviceIdentification2PlatformNameWA string = "WA"

	// DeviceIdentification2PlatformNameNr2WA captures enum value "2WA"
	DeviceIdentification2PlatformNameNr2WA string = "2WA"

	// DeviceIdentification2PlatformNameXC captures enum value "XC"
	DeviceIdentification2PlatformNameXC string = "XC"

	// DeviceIdentification2PlatformNameNr2XC captures enum value "2XC"
	DeviceIdentification2PlatformNameNr2XC string = "2XC"

	// DeviceIdentification2PlatformNameXW captures enum value "XW"
	DeviceIdentification2PlatformNameXW string = "XW"

	// DeviceIdentification2PlatformNameXM captures enum value "XM"
	DeviceIdentification2PlatformNameXM string = "XM"

	// DeviceIdentification2PlatformNameTI captures enum value "TI"
	DeviceIdentification2PlatformNameTI string = "TI"

	// DeviceIdentification2PlatformNameGBE captures enum value "GBE"
	DeviceIdentification2PlatformNameGBE string = "GBE"

	// DeviceIdentification2PlatformNameAirGW captures enum value "AirGW"
	DeviceIdentification2PlatformNameAirGW string = "AirGW"

	// DeviceIdentification2PlatformNameAirGWP captures enum value "AirGWP"
	DeviceIdentification2PlatformNameAirGWP string = "AirGWP"

	// DeviceIdentification2PlatformNameAF captures enum value "AF"
	DeviceIdentification2PlatformNameAF string = "AF"

	// DeviceIdentification2PlatformNameAF02 captures enum value "AF02"
	DeviceIdentification2PlatformNameAF02 string = "AF02"

	// DeviceIdentification2PlatformNameAF06 captures enum value "AF06"
	DeviceIdentification2PlatformNameAF06 string = "AF06"

	// DeviceIdentification2PlatformNameAF07 captures enum value "AF07"
	DeviceIdentification2PlatformNameAF07 string = "AF07"

	// DeviceIdentification2PlatformNameAF08 captures enum value "AF08"
	DeviceIdentification2PlatformNameAF08 string = "AF08"

	// DeviceIdentification2PlatformNameAF09 captures enum value "AF09"
	DeviceIdentification2PlatformNameAF09 string = "AF09"

	// DeviceIdentification2PlatformNameAf5xhd captures enum value "af5xhd"
	DeviceIdentification2PlatformNameAf5xhd string = "af5xhd"

	// DeviceIdentification2PlatformNameAfltu captures enum value "afltu"
	DeviceIdentification2PlatformNameAfltu string = "afltu"

	// DeviceIdentification2PlatformNameLturocket captures enum value "lturocket"
	DeviceIdentification2PlatformNameLturocket string = "lturocket"

	// DeviceIdentification2PlatformNameGP captures enum value "GP"
	DeviceIdentification2PlatformNameGP string = "GP"

	// DeviceIdentification2PlatformNameLtu60 captures enum value "ltu60"
	DeviceIdentification2PlatformNameLtu60 string = "ltu60"

	// DeviceIdentification2PlatformNameSunMax captures enum value "SunMax"
	DeviceIdentification2PlatformNameSunMax string = "SunMax"

	// DeviceIdentification2PlatformNameUNKNOWN captures enum value "UNKNOWN"
	DeviceIdentification2PlatformNameUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *DeviceIdentification2) validatePlatformNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypePlatformNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validatePlatformName(formats strfmt.Registry) error {
	if swag.IsZero(m.PlatformName) { // not required
		return nil
	}

	// value enum
	if err := m.validatePlatformNameEnum("platformName", "body", m.PlatformName); err != nil {
		return err
	}

	return nil
}

var deviceIdentification2TypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["router","switch","gpon","ap","station","other","ups","server","wireless","convertor","gateway"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypeRolePropEnum = append(deviceIdentification2TypeRolePropEnum, v)
	}
}

const (

	// DeviceIdentification2RoleRouter captures enum value "router"
	DeviceIdentification2RoleRouter string = "router"

	// DeviceIdentification2RoleSwitch captures enum value "switch"
	DeviceIdentification2RoleSwitch string = "switch"

	// DeviceIdentification2RoleGpon captures enum value "gpon"
	DeviceIdentification2RoleGpon string = "gpon"

	// DeviceIdentification2RoleAp captures enum value "ap"
	DeviceIdentification2RoleAp string = "ap"

	// DeviceIdentification2RoleStation captures enum value "station"
	DeviceIdentification2RoleStation string = "station"

	// DeviceIdentification2RoleOther captures enum value "other"
	DeviceIdentification2RoleOther string = "other"

	// DeviceIdentification2RoleUps captures enum value "ups"
	DeviceIdentification2RoleUps string = "ups"

	// DeviceIdentification2RoleServer captures enum value "server"
	DeviceIdentification2RoleServer string = "server"

	// DeviceIdentification2RoleWireless captures enum value "wireless"
	DeviceIdentification2RoleWireless string = "wireless"

	// DeviceIdentification2RoleConvertor captures enum value "convertor"
	DeviceIdentification2RoleConvertor string = "convertor"

	// DeviceIdentification2RoleGateway captures enum value "gateway"
	DeviceIdentification2RoleGateway string = "gateway"
)

// prop value enum
func (m *DeviceIdentification2) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", m.Role); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification2) validateSite(formats strfmt.Registry) error {
	if swag.IsZero(m.Site) { // not required
		return nil
	}

	if m.Site != nil {
		if err := m.Site.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

func (m *DeviceIdentification2) validateStarted(formats strfmt.Registry) error {
	if swag.IsZero(m.Started) { // not required
		return nil
	}

	if err := validate.FormatOf("started", "body", "date", m.Started.String(), formats); err != nil {
		return err
	}

	return nil
}

var deviceIdentification2TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","connecting","discovered","inactive","disabled","disconnected","unauthorized","proposed","unknown","unplaced","custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypeStatusPropEnum = append(deviceIdentification2TypeStatusPropEnum, v)
	}
}

const (

	// DeviceIdentification2StatusActive captures enum value "active"
	DeviceIdentification2StatusActive string = "active"

	// DeviceIdentification2StatusConnecting captures enum value "connecting"
	DeviceIdentification2StatusConnecting string = "connecting"

	// DeviceIdentification2StatusDiscovered captures enum value "discovered"
	DeviceIdentification2StatusDiscovered string = "discovered"

	// DeviceIdentification2StatusInactive captures enum value "inactive"
	DeviceIdentification2StatusInactive string = "inactive"

	// DeviceIdentification2StatusDisabled captures enum value "disabled"
	DeviceIdentification2StatusDisabled string = "disabled"

	// DeviceIdentification2StatusDisconnected captures enum value "disconnected"
	DeviceIdentification2StatusDisconnected string = "disconnected"

	// DeviceIdentification2StatusUnauthorized captures enum value "unauthorized"
	DeviceIdentification2StatusUnauthorized string = "unauthorized"

	// DeviceIdentification2StatusProposed captures enum value "proposed"
	DeviceIdentification2StatusProposed string = "proposed"

	// DeviceIdentification2StatusUnknown captures enum value "unknown"
	DeviceIdentification2StatusUnknown string = "unknown"

	// DeviceIdentification2StatusUnplaced captures enum value "unplaced"
	DeviceIdentification2StatusUnplaced string = "unplaced"

	// DeviceIdentification2StatusCustom captures enum value "custom"
	DeviceIdentification2StatusCustom string = "custom"
)

// prop value enum
func (m *DeviceIdentification2) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var deviceIdentification2TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["onu","olt","uispp","uispr","uisps","uispLte","erouter","eswitch","epower","airCube","airMax","airFiber","toughSwitch","solarBeam","wave","blackBox"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIdentification2TypeTypePropEnum = append(deviceIdentification2TypeTypePropEnum, v)
	}
}

const (

	// DeviceIdentification2TypeOnu captures enum value "onu"
	DeviceIdentification2TypeOnu string = "onu"

	// DeviceIdentification2TypeOlt captures enum value "olt"
	DeviceIdentification2TypeOlt string = "olt"

	// DeviceIdentification2TypeUispp captures enum value "uispp"
	DeviceIdentification2TypeUispp string = "uispp"

	// DeviceIdentification2TypeUispr captures enum value "uispr"
	DeviceIdentification2TypeUispr string = "uispr"

	// DeviceIdentification2TypeUisps captures enum value "uisps"
	DeviceIdentification2TypeUisps string = "uisps"

	// DeviceIdentification2TypeUispLte captures enum value "uispLte"
	DeviceIdentification2TypeUispLte string = "uispLte"

	// DeviceIdentification2TypeErouter captures enum value "erouter"
	DeviceIdentification2TypeErouter string = "erouter"

	// DeviceIdentification2TypeEswitch captures enum value "eswitch"
	DeviceIdentification2TypeEswitch string = "eswitch"

	// DeviceIdentification2TypeEpower captures enum value "epower"
	DeviceIdentification2TypeEpower string = "epower"

	// DeviceIdentification2TypeAirCube captures enum value "airCube"
	DeviceIdentification2TypeAirCube string = "airCube"

	// DeviceIdentification2TypeAirMax captures enum value "airMax"
	DeviceIdentification2TypeAirMax string = "airMax"

	// DeviceIdentification2TypeAirFiber captures enum value "airFiber"
	DeviceIdentification2TypeAirFiber string = "airFiber"

	// DeviceIdentification2TypeToughSwitch captures enum value "toughSwitch"
	DeviceIdentification2TypeToughSwitch string = "toughSwitch"

	// DeviceIdentification2TypeSolarBeam captures enum value "solarBeam"
	DeviceIdentification2TypeSolarBeam string = "solarBeam"

	// DeviceIdentification2TypeWave captures enum value "wave"
	DeviceIdentification2TypeWave string = "wave"

	// DeviceIdentification2TypeBlackBox captures enum value "blackBox"
	DeviceIdentification2TypeBlackBox string = "blackBox"
)

// prop value enum
func (m *DeviceIdentification2) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, deviceIdentification2TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DeviceIdentification2) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *DeviceIdentification2) validateUpdated(formats strfmt.Registry) error {
	if swag.IsZero(m.Updated) { // not required
		return nil
	}

	if err := validate.FormatOf("updated", "body", "date", m.Updated.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this device identification 2 based on the context it is used
func (m *DeviceIdentification2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSite(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeviceIdentification2) contextValidateSite(ctx context.Context, formats strfmt.Registry) error {

	if m.Site != nil {
		if err := m.Site.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeviceIdentification2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceIdentification2) UnmarshalBinary(b []byte) error {
	var res DeviceIdentification2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
