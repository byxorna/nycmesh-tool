// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UispSettingMeta uisp setting meta
//
// swagger:model UispSettingMeta
type UispSettingMeta struct {

	// Display name used in UISP for the device.
	// Example: Main gateway.
	// Max Length: 30
	Alias string `json:"alias,omitempty"`

	// Custom IP address in IPv4 or IPv6 format.
	// Example: 192.168.1.22
	CustomIPAddress string `json:"customIpAddress,omitempty"`

	// If set to true outages are not reported for the device.
	Maintenance bool `json:"maintenance,omitempty"`

	// Custom device description.
	// Example: Main gateway for whole network
	// Max Length: 300
	Note string `json:"note,omitempty"`
}

// Validate validates this uisp setting meta
func (m *UispSettingMeta) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlias(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNote(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UispSettingMeta) validateAlias(formats strfmt.Registry) error {
	if swag.IsZero(m.Alias) { // not required
		return nil
	}

	if err := validate.MaxLength("alias", "body", m.Alias, 30); err != nil {
		return err
	}

	return nil
}

func (m *UispSettingMeta) validateNote(formats strfmt.Registry) error {
	if swag.IsZero(m.Note) { // not required
		return nil
	}

	if err := validate.MaxLength("note", "body", m.Note, 300); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this uisp setting meta based on context it is used
func (m *UispSettingMeta) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UispSettingMeta) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UispSettingMeta) UnmarshalBinary(b []byte) error {
	var res UispSettingMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
