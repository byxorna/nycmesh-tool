// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Wan2 wan 2
//
// swagger:model wan 2
type Wan2 struct {

	// IPv6 address of gateway
	// Example: 0:0:0:0:0:ffff:5ca8:d101/24
	// Required: true
	Gateway6 *string `json:"gateway6"`

	// WAN address of ONU in CIDR format - required if wanMode6 is set to "static"
	// Example: 0:0:0:0:0:ffff:5ca8:d101/24
	// Required: true
	WanAddress6 *string `json:"wanAddress6"`

	// IPv6 WAN mode
	// Example: slaac
	// Required: true
	// Enum: [dhcp slaac link-local static]
	WanMode6 *string `json:"wanMode6"`
}

// Validate validates this wan 2
func (m *Wan2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGateway6(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWanAddress6(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWanMode6(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Wan2) validateGateway6(formats strfmt.Registry) error {

	if err := validate.Required("gateway6", "body", m.Gateway6); err != nil {
		return err
	}

	return nil
}

func (m *Wan2) validateWanAddress6(formats strfmt.Registry) error {

	if err := validate.Required("wanAddress6", "body", m.WanAddress6); err != nil {
		return err
	}

	return nil
}

var wan2TypeWanMode6PropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["dhcp","slaac","link-local","static"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		wan2TypeWanMode6PropEnum = append(wan2TypeWanMode6PropEnum, v)
	}
}

const (

	// Wan2WanMode6Dhcp captures enum value "dhcp"
	Wan2WanMode6Dhcp string = "dhcp"

	// Wan2WanMode6Slaac captures enum value "slaac"
	Wan2WanMode6Slaac string = "slaac"

	// Wan2WanMode6LinkDashLocal captures enum value "link-local"
	Wan2WanMode6LinkDashLocal string = "link-local"

	// Wan2WanMode6Static captures enum value "static"
	Wan2WanMode6Static string = "static"
)

// prop value enum
func (m *Wan2) validateWanMode6Enum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, wan2TypeWanMode6PropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Wan2) validateWanMode6(formats strfmt.Registry) error {

	if err := validate.Required("wanMode6", "body", m.WanMode6); err != nil {
		return err
	}

	// value enum
	if err := m.validateWanMode6Enum("wanMode6", "body", *m.WanMode6); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this wan 2 based on context it is used
func (m *Wan2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Wan2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Wan2) UnmarshalBinary(b []byte) error {
	var res Wan2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
