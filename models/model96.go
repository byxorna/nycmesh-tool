// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model96 model 96
//
// swagger:model Model 96
type Model96 struct {

	// cidr
	// Required: true
	Cidr *string `json:"cidr"`

	// type
	// Required: true
	// Enum: [static dhcp dhcpv6]
	Type *string `json:"type"`
}

// Validate validates this model 96
func (m *Model96) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCidr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model96) validateCidr(formats strfmt.Registry) error {

	if err := validate.Required("cidr", "body", m.Cidr); err != nil {
		return err
	}

	return nil
}

var model96TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["static","dhcp","dhcpv6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		model96TypeTypePropEnum = append(model96TypeTypePropEnum, v)
	}
}

const (

	// Model96TypeStatic captures enum value "static"
	Model96TypeStatic string = "static"

	// Model96TypeDhcp captures enum value "dhcp"
	Model96TypeDhcp string = "dhcp"

	// Model96TypeDhcpv6 captures enum value "dhcpv6"
	Model96TypeDhcpv6 string = "dhcpv6"
)

// prop value enum
func (m *Model96) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, model96TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Model96) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this model 96 based on context it is used
func (m *Model96) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Model96) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model96) UnmarshalBinary(b []byte) error {
	var res Model96
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
