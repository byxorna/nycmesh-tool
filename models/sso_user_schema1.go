// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SsoUserSchema1 SSO user data obtained through "POST /nms/api/v2.1/user/sso/verify" API.
//
// swagger:model SsoUserSchema 1
type SsoUserSchema1 struct {

	// email
	// Example: john.doe@example.com
	// Required: true
	Email *string `json:"email"`

	// first name
	// Example: John
	FirstName string `json:"firstName,omitempty"`

	// id
	// Example: f7ac9cad-ea28-4390-93c8-7add010e8ee3
	// Required: true
	ID *string `json:"id"`

	// image Url
	ImageURL string `json:"imageUrl,omitempty"`

	// last name
	// Example: Doe
	LastName string `json:"lastName,omitempty"`

	// username
	// Example: JohnDoe
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this sso user schema 1
func (m *SsoUserSchema1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SsoUserSchema1) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *SsoUserSchema1) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *SsoUserSchema1) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sso user schema 1 based on context it is used
func (m *SsoUserSchema1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SsoUserSchema1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SsoUserSchema1) UnmarshalBinary(b []byte) error {
	var res SsoUserSchema1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
