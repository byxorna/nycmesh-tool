// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SiteDescriptionLocation site description location
//
// swagger:model SiteDescriptionLocation
type SiteDescriptionLocation struct {

	// Site longitude.
	// Example: 27.986065
	// Required: true
	// Maximum: 90
	// Minimum: -90
	Latitude *float64 `json:"latitude"`

	// Site latitude.
	// Example: 86.922623
	// Required: true
	// Maximum: 180
	// Minimum: -180
	Longitude *float64 `json:"longitude"`
}

// Validate validates this site description location
func (m *SiteDescriptionLocation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SiteDescriptionLocation) validateLatitude(formats strfmt.Registry) error {

	if err := validate.Required("latitude", "body", m.Latitude); err != nil {
		return err
	}

	if err := validate.Minimum("latitude", "body", *m.Latitude, -90, false); err != nil {
		return err
	}

	if err := validate.Maximum("latitude", "body", *m.Latitude, 90, false); err != nil {
		return err
	}

	return nil
}

func (m *SiteDescriptionLocation) validateLongitude(formats strfmt.Registry) error {

	if err := validate.Required("longitude", "body", m.Longitude); err != nil {
		return err
	}

	if err := validate.Minimum("longitude", "body", *m.Longitude, -180, false); err != nil {
		return err
	}

	if err := validate.Maximum("longitude", "body", *m.Longitude, 180, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this site description location based on context it is used
func (m *SiteDescriptionLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SiteDescriptionLocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SiteDescriptionLocation) UnmarshalBinary(b []byte) error {
	var res SiteDescriptionLocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
