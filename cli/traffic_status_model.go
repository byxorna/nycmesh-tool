// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/models"
	"github.com/spf13/cobra"
)

// Schema cli for TrafficStatus

// register flags to command
func registerModelTrafficStatusFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTrafficStatusIsActive(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTrafficStatusSources(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTrafficStatusIsActive(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	isActiveDescription := `Required. `

	var isActiveFlagName string
	if cmdPrefix == "" {
		isActiveFlagName = "isActive"
	} else {
		isActiveFlagName = fmt.Sprintf("%v.isActive", cmdPrefix)
	}

	var isActiveFlagDefault bool

	_ = cmd.PersistentFlags().Bool(isActiveFlagName, isActiveFlagDefault, isActiveDescription)

	return nil
}

func registerTrafficStatusSources(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: sources Sources array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTrafficStatusFlags(depth int, m *models.TrafficStatus, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, isActiveAdded := retrieveTrafficStatusIsActiveFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || isActiveAdded

	err, sourcesAdded := retrieveTrafficStatusSourcesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || sourcesAdded

	return nil, retAdded
}

func retrieveTrafficStatusIsActiveFlags(depth int, m *models.TrafficStatus, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	isActiveFlagName := fmt.Sprintf("%v.isActive", cmdPrefix)
	if cmd.Flags().Changed(isActiveFlagName) {

		var isActiveFlagName string
		if cmdPrefix == "" {
			isActiveFlagName = "isActive"
		} else {
			isActiveFlagName = fmt.Sprintf("%v.isActive", cmdPrefix)
		}

		isActiveFlagValue, err := cmd.Flags().GetBool(isActiveFlagName)
		if err != nil {
			return err, false
		}
		m.IsActive = &isActiveFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveTrafficStatusSourcesFlags(depth int, m *models.TrafficStatus, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	sourcesFlagName := fmt.Sprintf("%v.sources", cmdPrefix)
	if cmd.Flags().Changed(sourcesFlagName) {
		// warning: sources array type Sources is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
