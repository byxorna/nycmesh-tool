// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/models"
	"github.com/spf13/cobra"
)

// Schema cli for Elevations1

// register flags to command
func registerModelElevations1Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerElevations1Elevations(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerElevations1EndOuterElevations(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerElevations1StartOuterElevations(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerElevations1Elevations(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: elevations Elevations array type is not supported by go-swagger cli yet

	return nil
}

func registerElevations1EndOuterElevations(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: endOuterElevations EndOuterElevations array type is not supported by go-swagger cli yet

	return nil
}

func registerElevations1StartOuterElevations(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: startOuterElevations StartOuterElevations array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelElevations1Flags(depth int, m *models.Elevations1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, elevationsAdded := retrieveElevations1ElevationsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || elevationsAdded

	err, endOuterElevationsAdded := retrieveElevations1EndOuterElevationsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || endOuterElevationsAdded

	err, startOuterElevationsAdded := retrieveElevations1StartOuterElevationsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || startOuterElevationsAdded

	return nil, retAdded
}

func retrieveElevations1ElevationsFlags(depth int, m *models.Elevations1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	elevationsFlagName := fmt.Sprintf("%v.elevations", cmdPrefix)
	if cmd.Flags().Changed(elevationsFlagName) {
		// warning: elevations array type Elevations is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveElevations1EndOuterElevationsFlags(depth int, m *models.Elevations1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	endOuterElevationsFlagName := fmt.Sprintf("%v.endOuterElevations", cmdPrefix)
	if cmd.Flags().Changed(endOuterElevationsFlagName) {
		// warning: endOuterElevations array type EndOuterElevations is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveElevations1StartOuterElevationsFlags(depth int, m *models.Elevations1, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	startOuterElevationsFlagName := fmt.Sprintf("%v.startOuterElevations", cmdPrefix)
	if cmd.Flags().Changed(startOuterElevationsFlagName) {
		// warning: startOuterElevations array type StartOuterElevations is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
