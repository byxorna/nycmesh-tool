// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/byxorna/nycmesh-tool/models"
	"github.com/spf13/cobra"
)

// Schema cli for Model91

// register flags to command
func registerModelModel91Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerModel91ParentID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerModel91ParentID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	parentIdDescription := `Required. `

	var parentIdFlagName string
	if cmdPrefix == "" {
		parentIdFlagName = "parentId"
	} else {
		parentIdFlagName = fmt.Sprintf("%v.parentId", cmdPrefix)
	}

	var parentIdFlagDefault string

	_ = cmd.PersistentFlags().String(parentIdFlagName, parentIdFlagDefault, parentIdDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelModel91Flags(depth int, m *models.Model91, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, parentIdAdded := retrieveModel91ParentIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || parentIdAdded

	return nil, retAdded
}

func retrieveModel91ParentIDFlags(depth int, m *models.Model91, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	parentIdFlagName := fmt.Sprintf("%v.parentId", cmdPrefix)
	if cmd.Flags().Changed(parentIdFlagName) {

		var parentIdFlagName string
		if cmdPrefix == "" {
			parentIdFlagName = "parentId"
		} else {
			parentIdFlagName = fmt.Sprintf("%v.parentId", cmdPrefix)
		}

		parentIdFlagValue, err := cmd.Flags().GetString(parentIdFlagName)
		if err != nil {
			return err, false
		}
		m.ParentID = &parentIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}
