// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"log"
	"os"
	"path/filepath"

	"github.com/byxorna/nycmesh-tool/client"
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

// debug flag indicating that cli should output debug logs
var debug bool

// config file location
var configFile string

// dry run flag
var dryRun bool

// name of the executable
var exeName string = filepath.Base(os.Args[0])

// logDebugf writes debug log to stdout
func logDebugf(format string, v ...interface{}) {
	if !debug {
		return
	}
	log.Printf(format, v...)
}

// depth of recursion to construct model flags
var maxDepth int = 5

func NewClient(cmd *cobra.Command, args []string) (*client.UISPAPI, error) {
	return makeClient(cmd, args)
}

// makeClient constructs a client object
func makeClient(cmd *cobra.Command, args []string) (*client.UISPAPI, error) {
	hostname := viper.GetString("uisp.hostname")
	scheme := viper.GetString("uisp.scheme")

	httpc, err := httptransport.TLSClient(httptransport.TLSClientOptions{
		InsecureSkipVerify: viper.GetBool("uisp.skip-verify-tls"),
	})
	if err != nil {
		return nil, err
	}

	r := httptransport.NewWithClient(hostname, client.DefaultBasePath, []string{scheme}, httpc)
	r.SetDebug(viper.GetBool("uisp.debug"))

	// set custom producer and consumer to use the default ones

	r.Consumers["application/json"] = runtime.JSONConsumer()

	r.Producers["application/json"] = runtime.JSONProducer()

	auth, err := makeAuthInfoWriter(cmd)
	if err != nil {
		return nil, err
	}
	r.DefaultAuthentication = auth

	appCli := client.New(r, strfmt.Default)
	logDebugf("Server url: %v://%v", scheme, hostname)
	return appCli, nil
}

// MakeRootCmd returns the root cmd
func MakeRootCmd() (*cobra.Command, error) {

	// Use executable name as the command name
	rootCmd := &cobra.Command{
		Use: exeName,
	}

	// register basic flags
	rootCmd.PersistentFlags().String("hostname", client.DefaultHost, "hostname of the service")
	viper.BindPFlag("uisp.hostname", rootCmd.PersistentFlags().Lookup("hostname"))
	rootCmd.PersistentFlags().String("scheme", client.DefaultSchemes[0], fmt.Sprintf("Choose from: %v", client.DefaultSchemes))
	viper.BindPFlag("uisp.scheme", rootCmd.PersistentFlags().Lookup("scheme"))

	//     http.DefaultTransport.(*http.Transport).TLSClientConfig = &tls.Config{InsecureSkipVerify: true}
	rootCmd.PersistentFlags().Bool("skip-verify-tls", false, fmt.Sprintf("sets &tls.Config{InsecureSkipVerify: true} in UISP HTTP Client"))
	viper.BindPFlag("uisp.skip-verify-tls", rootCmd.PersistentFlags().Lookup("skip-verify-tls"))

	rootCmd.PersistentFlags().BoolVar(&debug, "debug", false, "output debug logs")
	viper.BindPFlag("uisp.debug", rootCmd.PersistentFlags().Lookup("debug"))
	rootCmd.PersistentFlags().StringVar(&configFile, "config", "", "config file path")
	// configure dry run flag
	rootCmd.PersistentFlags().BoolVar(&dryRun, "dry-run", false, "do not send the request to server")

	// register security flags
	if err := registerAuthInoWriterFlags(rootCmd); err != nil {
		return nil, err
	}
	// add all operation groups
	operationGroupAuthorizationCmd, err := makeOperationGroupAuthorizationCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupAuthorizationCmd)

	operationGroupBackupsCmd, err := makeOperationGroupBackupsCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupBackupsCmd)

	operationGroupCrmCmd, err := makeOperationGroupCrmCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupCrmCmd)

	operationGroupDataLinksCmd, err := makeOperationGroupDataLinksCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupDataLinksCmd)

	operationGroupDevicesCmd, err := makeOperationGroupDevicesCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupDevicesCmd)

	operationGroupDiscoveryCmd, err := makeOperationGroupDiscoveryCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupDiscoveryCmd)

	operationGroupExportCmd, err := makeOperationGroupExportCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupExportCmd)

	operationGroupFirmwareCmd, err := makeOperationGroupFirmwareCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupFirmwareCmd)

	operationGroupGatewaysCmd, err := makeOperationGroupGatewaysCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupGatewaysCmd)

	operationGroupInstallationsCmd, err := makeOperationGroupInstallationsCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupInstallationsCmd)

	operationGroupLogsCmd, err := makeOperationGroupLogsCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupLogsCmd)

	operationGroupOutagesCmd, err := makeOperationGroupOutagesCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupOutagesCmd)

	operationGroupServerCmd, err := makeOperationGroupServerCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupServerCmd)

	operationGroupSimulationCmd, err := makeOperationGroupSimulationCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupSimulationCmd)

	operationGroupSitesCmd, err := makeOperationGroupSitesCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupSitesCmd)

	operationGroupSpeedTestCmd, err := makeOperationGroupSpeedTestCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupSpeedTestCmd)

	operationGroupTasksCmd, err := makeOperationGroupTasksCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupTasksCmd)

	operationGroupTokenCmd, err := makeOperationGroupTokenCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupTokenCmd)

	operationGroupTrafficCmd, err := makeOperationGroupTrafficCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupTrafficCmd)

	operationGroupUsersCmd, err := makeOperationGroupUsersCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupUsersCmd)

	operationGroupVaultCmd, err := makeOperationGroupVaultCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupVaultCmd)

	operationGroupWebSocketCmd, err := makeOperationGroupWebSocketCmd()
	if err != nil {
		return nil, err
	}
	rootCmd.AddCommand(operationGroupWebSocketCmd)

	// add cobra completion
	rootCmd.AddCommand(makeGenCompletionCmd())

	return rootCmd, nil
}

// registerAuthInoWriterFlags registers all flags needed to perform authentication
func registerAuthInoWriterFlags(cmd *cobra.Command) error {
	/*x-auth-token User authorization token*/
	cmd.PersistentFlags().String("x-auth-token", "", `User authorization token`)
	viper.BindPFlag("uisp.x-auth-token", cmd.PersistentFlags().Lookup("x-auth-token"))
	return nil
}

// makeAuthInfoWriter retrieves cmd flags and construct an auth info writer
func makeAuthInfoWriter(cmd *cobra.Command) (runtime.ClientAuthInfoWriter, error) {
	auths := []runtime.ClientAuthInfoWriter{}
	/*x-auth-token User authorization token*/
	if viper.IsSet("uisp.x-auth-token") {
		XAuthTokenKey := viper.GetString("uisp.x-auth-token")
		auths = append(auths, httptransport.APIKeyAuth("x-auth-token", "header", XAuthTokenKey))
	}
	if len(auths) == 0 {
		logDebugf("Warning: No auth params detected.")
		return nil, nil
	}
	// compose all auths together
	return httptransport.Compose(auths...), nil
}

func makeOperationGroupAuthorizationCmd() (*cobra.Command, error) {
	operationGroupAuthorizationCmd := &cobra.Command{
		Use:  "authorization",
		Long: ``,
	}

	operationDeleteAccessgroupsSitesGroupidCmd, err := makeOperationAuthorizationDeleteAccessgroupsSitesGroupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationDeleteAccessgroupsSitesGroupidCmd)

	operationDeleteAccessgroupsSitesGroupidSiteidCmd, err := makeOperationAuthorizationDeleteAccessgroupsSitesGroupidSiteidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationDeleteAccessgroupsSitesGroupidSiteidCmd)

	operationGetAccessgroupsSitesCmd, err := makeOperationAuthorizationGetAccessgroupsSitesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationGetAccessgroupsSitesCmd)

	operationGetAccessgroupsSitesGroupidCmd, err := makeOperationAuthorizationGetAccessgroupsSitesGroupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationGetAccessgroupsSitesGroupidCmd)

	operationGetNmsAccountLoginUbiquitiCmd, err := makeOperationAuthorizationGetNmsAccountLoginUbiquitiCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationGetNmsAccountLoginUbiquitiCmd)

	operationGetUserCmd, err := makeOperationAuthorizationGetUserCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationGetUserCmd)

	operationGetUserTotpauthCmd, err := makeOperationAuthorizationGetUserTotpauthCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationGetUserTotpauthCmd)

	operationPostAccessgroupsSitesCmd, err := makeOperationAuthorizationPostAccessgroupsSitesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostAccessgroupsSitesCmd)

	operationPostUserCheckcredentialsCmd, err := makeOperationAuthorizationPostUserCheckcredentialsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserCheckcredentialsCmd)

	operationPostUserChecksessionCmd, err := makeOperationAuthorizationPostUserChecksessionCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserChecksessionCmd)

	operationPostUserLastreleasenotesseenCmd, err := makeOperationAuthorizationPostUserLastreleasenotesseenCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLastreleasenotesseenCmd)

	operationPostUserLoginCmd, err := makeOperationAuthorizationPostUserLoginCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLoginCmd)

	operationPostUserLoginInviteLocalCmd, err := makeOperationAuthorizationPostUserLoginInviteLocalCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLoginInviteLocalCmd)

	operationPostUserLoginInviteUbiquitiCmd, err := makeOperationAuthorizationPostUserLoginInviteUbiquitiCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLoginInviteUbiquitiCmd)

	operationPostUserLoginTotpauthCmd, err := makeOperationAuthorizationPostUserLoginTotpauthCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLoginTotpauthCmd)

	operationPostUserLoginUbiquitiCmd, err := makeOperationAuthorizationPostUserLoginUbiquitiCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLoginUbiquitiCmd)

	operationPostUserLogoutCmd, err := makeOperationAuthorizationPostUserLogoutCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserLogoutCmd)

	operationPostUserPasswordRequestresetCmd, err := makeOperationAuthorizationPostUserPasswordRequestresetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserPasswordRequestresetCmd)

	operationPostUserPasswordResetCmd, err := makeOperationAuthorizationPostUserPasswordResetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserPasswordResetCmd)

	operationPostUserPasswordStrengthCmd, err := makeOperationAuthorizationPostUserPasswordStrengthCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserPasswordStrengthCmd)

	operationPostUserSsoVerifyCmd, err := makeOperationAuthorizationPostUserSsoVerifyCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPostUserSsoVerifyCmd)

	operationPutAccessgroupsSitesGroupidCmd, err := makeOperationAuthorizationPutAccessgroupsSitesGroupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutAccessgroupsSitesGroupidCmd)

	operationPutAccessgroupsSitesGroupidSiteidCmd, err := makeOperationAuthorizationPutAccessgroupsSitesGroupidSiteidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutAccessgroupsSitesGroupidSiteidCmd)

	operationPutUserCmd, err := makeOperationAuthorizationPutUserCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutUserCmd)

	operationPutUserDisabledtotpauthCmd, err := makeOperationAuthorizationPutUserDisabledtotpauthCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutUserDisabledtotpauthCmd)

	operationPutUserPreferencesCmd, err := makeOperationAuthorizationPutUserPreferencesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutUserPreferencesCmd)

	operationPutUserSsoEnableCmd, err := makeOperationAuthorizationPutUserSsoEnableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutUserSsoEnableCmd)

	operationPutUserTotpauthCmd, err := makeOperationAuthorizationPutUserTotpauthCmd()
	if err != nil {
		return nil, err
	}
	operationGroupAuthorizationCmd.AddCommand(operationPutUserTotpauthCmd)

	return operationGroupAuthorizationCmd, nil
}
func makeOperationGroupBackupsCmd() (*cobra.Command, error) {
	operationGroupBackupsCmd := &cobra.Command{
		Use:  "backups",
		Long: ``,
	}

	operationDeleteNmsBackupsBackupidCmd, err := makeOperationBackupsDeleteNmsBackupsBackupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationDeleteNmsBackupsBackupidCmd)

	operationGetNmsBackupsCmd, err := makeOperationBackupsGetNmsBackupsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationGetNmsBackupsCmd)

	operationGetNmsBackupsBackupidCmd, err := makeOperationBackupsGetNmsBackupsBackupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationGetNmsBackupsBackupidCmd)

	operationGetNmsBackupsBackupidDownloadtokenCmd, err := makeOperationBackupsGetNmsBackupsBackupidDownloadtokenCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationGetNmsBackupsBackupidDownloadtokenCmd)

	operationGetNmsDownloadsTokenCmd, err := makeOperationBackupsGetNmsDownloadsTokenCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationGetNmsDownloadsTokenCmd)

	operationPostNmsBackupsBackupidRestoreCmd, err := makeOperationBackupsPostNmsBackupsBackupidRestoreCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationPostNmsBackupsBackupidRestoreCmd)

	operationPostNmsBackupsCreateCmd, err := makeOperationBackupsPostNmsBackupsCreateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupBackupsCmd.AddCommand(operationPostNmsBackupsCreateCmd)

	return operationGroupBackupsCmd, nil
}
func makeOperationGroupCrmCmd() (*cobra.Command, error) {
	operationGroupCrmCmd := &cobra.Command{
		Use:  "c_r_m",
		Long: ``,
	}

	operationGetCrmRolesCmd, err := makeOperationCrmGetCrmRolesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupCrmCmd.AddCommand(operationGetCrmRolesCmd)

	operationGetCrmServiceplansCmd, err := makeOperationCrmGetCrmServiceplansCmd()
	if err != nil {
		return nil, err
	}
	operationGroupCrmCmd.AddCommand(operationGetCrmServiceplansCmd)

	operationPostCrmClientsCmd, err := makeOperationCrmPostCrmClientsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupCrmCmd.AddCommand(operationPostCrmClientsCmd)

	return operationGroupCrmCmd, nil
}
func makeOperationGroupDataLinksCmd() (*cobra.Command, error) {
	operationGroupDataLinksCmd := &cobra.Command{
		Use:  "data_links",
		Long: ``,
	}

	operationDeleteDatalinksIDCmd, err := makeOperationDataLinksDeleteDatalinksIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationDeleteDatalinksIDCmd)

	operationGetDatalinksCmd, err := makeOperationDataLinksGetDatalinksCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationGetDatalinksCmd)

	operationGetDatalinksDeviceIDCmd, err := makeOperationDataLinksGetDatalinksDeviceIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationGetDatalinksDeviceIDCmd)

	operationGetDatalinksIDCmd, err := makeOperationDataLinksGetDatalinksIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationGetDatalinksIDCmd)

	operationGetDatalinksSitesSiteidCmd, err := makeOperationDataLinksGetDatalinksSitesSiteidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationGetDatalinksSitesSiteidCmd)

	operationPostDatalinksCmd, err := makeOperationDataLinksPostDatalinksCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationPostDatalinksCmd)

	operationPutDatalinksIDCmd, err := makeOperationDataLinksPutDatalinksIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDataLinksCmd.AddCommand(operationPutDatalinksIDCmd)

	return operationGroupDataLinksCmd, nil
}
func makeOperationGroupDevicesCmd() (*cobra.Command, error) {
	operationGroupDevicesCmd := &cobra.Command{
		Use:  "devices",
		Long: ``,
	}

	operationDeleteDevicesDeviceidBackupsBackupidCmd, err := makeOperationDevicesDeleteDevicesDeviceidBackupsBackupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesDeviceidBackupsBackupidCmd)

	operationDeleteDevicesDeviceidInterfacesInterfacenameCmd, err := makeOperationDevicesDeleteDevicesDeviceidInterfacesInterfacenameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesDeviceidInterfacesInterfacenameCmd)

	operationDeleteDevicesDeviceidInterfacesInterfacenameOspfCmd, err := makeOperationDevicesDeleteDevicesDeviceidInterfacesInterfacenameOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesDeviceidInterfacesInterfacenameOspfCmd)

	operationDeleteDevicesDeviceidUdapiVersionUdapiurlCmd, err := makeOperationDevicesDeleteDevicesDeviceidUdapiVersionUdapiurlCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesDeviceidUdapiVersionUdapiurlCmd)

	operationDeleteDevicesEroutersIDDhcpLeasesServernameLeaseidCmd, err := makeOperationDevicesDeleteDevicesEroutersIDDhcpLeasesServernameLeaseidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesEroutersIDDhcpLeasesServernameLeaseidCmd)

	operationDeleteDevicesEroutersIDDhcpServersServernameCmd, err := makeOperationDevicesDeleteDevicesEroutersIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesEroutersIDDhcpServersServernameCmd)

	operationDeleteDevicesEroutersIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesDeleteDevicesEroutersIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesEroutersIDRouterOspfAreasAreaidCmd)

	operationDeleteDevicesIDCmd, err := makeOperationDevicesDeleteDevicesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesIDCmd)

	operationDeleteDevicesIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesDeleteDevicesIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesIDRouterOspfAreasAreaidCmd)

	operationDeleteDevicesIDStationsCmd, err := makeOperationDevicesDeleteDevicesIDStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesIDStationsCmd)

	operationDeleteDevicesIDVlansVlanidCmd, err := makeOperationDevicesDeleteDevicesIDVlansVlanidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesIDVlansVlanidCmd)

	operationDeleteDevicesOltsIDOnuProfilesProfileidCmd, err := makeOperationDevicesDeleteDevicesOltsIDOnuProfilesProfileidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesOltsIDOnuProfilesProfileidCmd)

	operationDeleteDevicesUisprsIDDhcpLeasesServernameLeaseidCmd, err := makeOperationDevicesDeleteDevicesUisprsIDDhcpLeasesServernameLeaseidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDDhcpLeasesServernameLeaseidCmd)

	operationDeleteDevicesUisprsIDDhcpServersServernameCmd, err := makeOperationDevicesDeleteDevicesUisprsIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDDhcpServersServernameCmd)

	operationDeleteDevicesUisprsIDFirewallFiltersFilternameRuleRuleidCmd, err := makeOperationDevicesDeleteDevicesUisprsIDFirewallFiltersFilternameRuleRuleidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDFirewallFiltersFilternameRuleRuleidCmd)

	operationDeleteDevicesUisprsIDFirewallManglesManglenameRuleRuleidCmd, err := makeOperationDevicesDeleteDevicesUisprsIDFirewallManglesManglenameRuleRuleidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDFirewallManglesManglenameRuleRuleidCmd)

	operationDeleteDevicesUisprsIDFirewallNatsRuleRuleidCmd, err := makeOperationDevicesDeleteDevicesUisprsIDFirewallNatsRuleRuleidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDFirewallNatsRuleRuleidCmd)

	operationDeleteDevicesUisprsIDFirewallSetsSetCmd, err := makeOperationDevicesDeleteDevicesUisprsIDFirewallSetsSetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDFirewallSetsSetCmd)

	operationDeleteDevicesUisprsIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesDeleteDevicesUisprsIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDRouterOspfAreasAreaidCmd)

	operationDeleteDevicesUisprsIDRouterOspfInterfacesInterfacenameCmd, err := makeOperationDevicesDeleteDevicesUisprsIDRouterOspfInterfacesInterfacenameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUisprsIDRouterOspfInterfacesInterfacenameCmd)

	operationDeleteDevicesUnknownIpaddressCmd, err := makeOperationDevicesDeleteDevicesUnknownIpaddressCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationDeleteDevicesUnknownIpaddressCmd)

	operationGetAirlinkProxyAirlinkbeCmd, err := makeOperationDevicesGetAirlinkProxyAirlinkbeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetAirlinkProxyAirlinkbeCmd)

	operationGetAirlinkProxyCountriesmapgeojsonCmd, err := makeOperationDevicesGetAirlinkProxyCountriesmapgeojsonCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetAirlinkProxyCountriesmapgeojsonCmd)

	operationGetAirlinkProxyElevationCmd, err := makeOperationDevicesGetAirlinkProxyElevationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetAirlinkProxyElevationCmd)

	operationGetAirlinkProxyRainfallr001mapCmd, err := makeOperationDevicesGetAirlinkProxyRainfallr001mapCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetAirlinkProxyRainfallr001mapCmd)

	operationGetDevicesCmd, err := makeOperationDevicesGetDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesCmd)

	operationGetDevicesAircubesIDCmd, err := makeOperationDevicesGetDevicesAircubesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDCmd)

	operationGetDevicesAircubesIDConfigNetworkCmd, err := makeOperationDevicesGetDevicesAircubesIDConfigNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDConfigNetworkCmd)

	operationGetDevicesAircubesIDConfigSystemCmd, err := makeOperationDevicesGetDevicesAircubesIDConfigSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDConfigSystemCmd)

	operationGetDevicesAircubesIDConfigWirelessCmd, err := makeOperationDevicesGetDevicesAircubesIDConfigWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDConfigWirelessCmd)

	operationGetDevicesAircubesIDFrequencylistsCmd, err := makeOperationDevicesGetDevicesAircubesIDFrequencylistsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDFrequencylistsCmd)

	operationGetDevicesAircubesIDNetworkCmd, err := makeOperationDevicesGetDevicesAircubesIDNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDNetworkCmd)

	operationGetDevicesAircubesIDStationsCmd, err := makeOperationDevicesGetDevicesAircubesIDStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDStationsCmd)

	operationGetDevicesAircubesIDSystemCmd, err := makeOperationDevicesGetDevicesAircubesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDSystemCmd)

	operationGetDevicesAircubesIDTxpowerlistsCmd, err := makeOperationDevicesGetDevicesAircubesIDTxpowerlistsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDTxpowerlistsCmd)

	operationGetDevicesAircubesIDWirelessCmd, err := makeOperationDevicesGetDevicesAircubesIDWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAircubesIDWirelessCmd)

	operationGetDevicesAirfibersIDCmd, err := makeOperationDevicesGetDevicesAirfibersIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirfibersIDCmd)

	operationGetDevicesAirfibersIDStationsCmd, err := makeOperationDevicesGetDevicesAirfibersIDStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirfibersIDStationsCmd)

	operationGetDevicesAirmaxesIDCmd, err := makeOperationDevicesGetDevicesAirmaxesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDCmd)

	operationGetDevicesAirmaxesIDConfigWirelessCmd, err := makeOperationDevicesGetDevicesAirmaxesIDConfigWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDConfigWirelessCmd)

	operationGetDevicesAirmaxesIDFrequencybandsCmd, err := makeOperationDevicesGetDevicesAirmaxesIDFrequencybandsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDFrequencybandsCmd)

	operationGetDevicesAirmaxesIDSitesurveyCmd, err := makeOperationDevicesGetDevicesAirmaxesIDSitesurveyCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDSitesurveyCmd)

	operationGetDevicesAirmaxesIDStationsCmd, err := makeOperationDevicesGetDevicesAirmaxesIDStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDStationsCmd)

	operationGetDevicesAirmaxesIDSystemCmd, err := makeOperationDevicesGetDevicesAirmaxesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesAirmaxesIDSystemCmd)

	operationGetDevicesApsProfilesCmd, err := makeOperationDevicesGetDevicesApsProfilesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesApsProfilesCmd)

	operationGetDevicesBlackboxesIDCmd, err := makeOperationDevicesGetDevicesBlackboxesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesBlackboxesIDCmd)

	operationGetDevicesBlackboxesIDConfigCmd, err := makeOperationDevicesGetDevicesBlackboxesIDConfigCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesBlackboxesIDConfigCmd)

	operationGetDevicesDeviceidBackupsCmd, err := makeOperationDevicesGetDevicesDeviceidBackupsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidBackupsCmd)

	operationGetDevicesDeviceidBackupsBackupidCmd, err := makeOperationDevicesGetDevicesDeviceidBackupsBackupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidBackupsBackupidCmd)

	operationGetDevicesDeviceidInterfacesCmd, err := makeOperationDevicesGetDevicesDeviceidInterfacesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidInterfacesCmd)

	operationGetDevicesDeviceidInterfacesDatalinkAvailableCmd, err := makeOperationDevicesGetDevicesDeviceidInterfacesDatalinkAvailableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidInterfacesDatalinkAvailableCmd)

	operationGetDevicesDeviceidInterfacesInterfacenameCmd, err := makeOperationDevicesGetDevicesDeviceidInterfacesInterfacenameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidInterfacesInterfacenameCmd)

	operationGetDevicesDeviceidLocationCmd, err := makeOperationDevicesGetDevicesDeviceidLocationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidLocationCmd)

	operationGetDevicesDeviceidMactableCmd, err := makeOperationDevicesGetDevicesDeviceidMactableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidMactableCmd)

	operationGetDevicesDeviceidMactablerefreshCmd, err := makeOperationDevicesGetDevicesDeviceidMactablerefreshCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidMactablerefreshCmd)

	operationGetDevicesDeviceidUdapiVersionUdapiurlCmd, err := makeOperationDevicesGetDevicesDeviceidUdapiVersionUdapiurlCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDeviceidUdapiVersionUdapiurlCmd)

	operationGetDevicesDiscoveredCmd, err := makeOperationDevicesGetDevicesDiscoveredCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesDiscoveredCmd)

	operationGetDevicesEpowersIDCmd, err := makeOperationDevicesGetDevicesEpowersIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEpowersIDCmd)

	operationGetDevicesEpowersIDConfigurationPowerCmd, err := makeOperationDevicesGetDevicesEpowersIDConfigurationPowerCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEpowersIDConfigurationPowerCmd)

	operationGetDevicesEroutersIDCmd, err := makeOperationDevicesGetDevicesEroutersIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDCmd)

	operationGetDevicesEroutersIDDhcpLeasesCmd, err := makeOperationDevicesGetDevicesEroutersIDDhcpLeasesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDDhcpLeasesCmd)

	operationGetDevicesEroutersIDDhcpServersCmd, err := makeOperationDevicesGetDevicesEroutersIDDhcpServersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDDhcpServersCmd)

	operationGetDevicesEroutersIDDhcpServersServernameCmd, err := makeOperationDevicesGetDevicesEroutersIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDDhcpServersServernameCmd)

	operationGetDevicesEroutersIDNetflowCmd, err := makeOperationDevicesGetDevicesEroutersIDNetflowCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDNetflowCmd)

	operationGetDevicesEroutersIDRouterOspfCmd, err := makeOperationDevicesGetDevicesEroutersIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDRouterOspfCmd)

	operationGetDevicesEroutersIDRouterOspfAreasCmd, err := makeOperationDevicesGetDevicesEroutersIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDRouterOspfAreasCmd)

	operationGetDevicesEroutersIDRouterRoutesCmd, err := makeOperationDevicesGetDevicesEroutersIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEroutersIDRouterRoutesCmd)

	operationGetDevicesEswitchesIDCmd, err := makeOperationDevicesGetDevicesEswitchesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEswitchesIDCmd)

	operationGetDevicesEswitchesIDSystemCmd, err := makeOperationDevicesGetDevicesEswitchesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesEswitchesIDSystemCmd)

	operationGetDevicesIDCmd, err := makeOperationDevicesGetDevicesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDCmd)

	operationGetDevicesIDDetailCmd, err := makeOperationDevicesGetDevicesIDDetailCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDDetailCmd)

	operationGetDevicesIDNetflowCmd, err := makeOperationDevicesGetDevicesIDNetflowCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDNetflowCmd)

	operationGetDevicesIDRouterOspfCmd, err := makeOperationDevicesGetDevicesIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDRouterOspfCmd)

	operationGetDevicesIDRouterOspfAreasCmd, err := makeOperationDevicesGetDevicesIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDRouterOspfAreasCmd)

	operationGetDevicesIDRouterRoutesCmd, err := makeOperationDevicesGetDevicesIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDRouterRoutesCmd)

	operationGetDevicesIDServicesCmd, err := makeOperationDevicesGetDevicesIDServicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDServicesCmd)

	operationGetDevicesIDStatisticsCmd, err := makeOperationDevicesGetDevicesIDStatisticsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDStatisticsCmd)

	operationGetDevicesIDSupportfileCmd, err := makeOperationDevicesGetDevicesIDSupportfileCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDSupportfileCmd)

	operationGetDevicesIDSystemCmd, err := makeOperationDevicesGetDevicesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDSystemCmd)

	operationGetDevicesIDSystemUnmsCmd, err := makeOperationDevicesGetDevicesIDSystemUnmsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDSystemUnmsCmd)

	operationGetDevicesIDVlansCmd, err := makeOperationDevicesGetDevicesIDVlansCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIDVlansCmd)

	operationGetDevicesImportStatusCmd, err := makeOperationDevicesGetDevicesImportStatusCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesImportStatusCmd)

	operationGetDevicesIpsCmd, err := makeOperationDevicesGetDevicesIpsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesIpsCmd)

	operationGetDevicesMacMacCmd, err := makeOperationDevicesGetDevicesMacMacCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesMacMacCmd)

	operationGetDevicesMacsCmd, err := makeOperationDevicesGetDevicesMacsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesMacsCmd)

	operationGetDevicesModelsCmd, err := makeOperationDevicesGetDevicesModelsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesModelsCmd)

	operationGetDevicesOltsIDCmd, err := makeOperationDevicesGetDevicesOltsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOltsIDCmd)

	operationGetDevicesOltsIDOnuPoliciesCmd, err := makeOperationDevicesGetDevicesOltsIDOnuPoliciesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOltsIDOnuPoliciesCmd)

	operationGetDevicesOltsIDOnuProfilesCmd, err := makeOperationDevicesGetDevicesOltsIDOnuProfilesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOltsIDOnuProfilesCmd)

	operationGetDevicesOnusCmd, err := makeOperationDevicesGetDevicesOnusCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusCmd)

	operationGetDevicesOnusIDCmd, err := makeOperationDevicesGetDevicesOnusIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDCmd)

	operationGetDevicesOnusIDClientsCmd, err := makeOperationDevicesGetDevicesOnusIDClientsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDClientsCmd)

	operationGetDevicesOnusIDNetworkCmd, err := makeOperationDevicesGetDevicesOnusIDNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDNetworkCmd)

	operationGetDevicesOnusIDServicesCmd, err := makeOperationDevicesGetDevicesOnusIDServicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDServicesCmd)

	operationGetDevicesOnusIDSystemCmd, err := makeOperationDevicesGetDevicesOnusIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDSystemCmd)

	operationGetDevicesOnusIDVlansCmd, err := makeOperationDevicesGetDevicesOnusIDVlansCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDVlansCmd)

	operationGetDevicesOnusIDWirelessCmd, err := makeOperationDevicesGetDevicesOnusIDWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesOnusIDWirelessCmd)

	operationGetDevicesSolarbeamsIDCmd, err := makeOperationDevicesGetDevicesSolarbeamsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesSolarbeamsIDCmd)

	operationGetDevicesSolarbeamsIDConfigSystemCmd, err := makeOperationDevicesGetDevicesSolarbeamsIDConfigSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesSolarbeamsIDConfigSystemCmd)

	operationGetDevicesSsidsCmd, err := makeOperationDevicesGetDevicesSsidsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesSsidsCmd)

	operationGetDevicesToughswitchesIDCmd, err := makeOperationDevicesGetDevicesToughswitchesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesToughswitchesIDCmd)

	operationGetDevicesToughswitchesIDSystemCmd, err := makeOperationDevicesGetDevicesToughswitchesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesToughswitchesIDSystemCmd)

	operationGetDevicesUisprsIDCmd, err := makeOperationDevicesGetDevicesUisprsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDCmd)

	operationGetDevicesUisprsIDDhcpLeasesCmd, err := makeOperationDevicesGetDevicesUisprsIDDhcpLeasesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDDhcpLeasesCmd)

	operationGetDevicesUisprsIDDhcpServersCmd, err := makeOperationDevicesGetDevicesUisprsIDDhcpServersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDDhcpServersCmd)

	operationGetDevicesUisprsIDDhcpServersServernameCmd, err := makeOperationDevicesGetDevicesUisprsIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDDhcpServersServernameCmd)

	operationGetDevicesUisprsIDFirewallFiltersCmd, err := makeOperationDevicesGetDevicesUisprsIDFirewallFiltersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDFirewallFiltersCmd)

	operationGetDevicesUisprsIDFirewallManglesCmd, err := makeOperationDevicesGetDevicesUisprsIDFirewallManglesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDFirewallManglesCmd)

	operationGetDevicesUisprsIDFirewallNatsCmd, err := makeOperationDevicesGetDevicesUisprsIDFirewallNatsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDFirewallNatsCmd)

	operationGetDevicesUisprsIDFirewallSetsCmd, err := makeOperationDevicesGetDevicesUisprsIDFirewallSetsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDFirewallSetsCmd)

	operationGetDevicesUisprsIDFirewallSettingsCmd, err := makeOperationDevicesGetDevicesUisprsIDFirewallSettingsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDFirewallSettingsCmd)

	operationGetDevicesUisprsIDNetflowCmd, err := makeOperationDevicesGetDevicesUisprsIDNetflowCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDNetflowCmd)

	operationGetDevicesUisprsIDRouterOspfCmd, err := makeOperationDevicesGetDevicesUisprsIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDRouterOspfCmd)

	operationGetDevicesUisprsIDRouterOspfAreasCmd, err := makeOperationDevicesGetDevicesUisprsIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDRouterOspfAreasCmd)

	operationGetDevicesUisprsIDRouterOspfInterfacesCmd, err := makeOperationDevicesGetDevicesUisprsIDRouterOspfInterfacesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDRouterOspfInterfacesCmd)

	operationGetDevicesUisprsIDRouterRoutesCmd, err := makeOperationDevicesGetDevicesUisprsIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUisprsIDRouterRoutesCmd)

	operationGetDevicesUispssIDCmd, err := makeOperationDevicesGetDevicesUispssIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUispssIDCmd)

	operationGetDevicesUispssIDSystemCmd, err := makeOperationDevicesGetDevicesUispssIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUispssIDSystemCmd)

	operationGetDevicesUnknownCmd, err := makeOperationDevicesGetDevicesUnknownCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesUnknownCmd)

	operationGetDevicesWavesIDCmd, err := makeOperationDevicesGetDevicesWavesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesWavesIDCmd)

	operationGetDevicesWavesIDStationsCmd, err := makeOperationDevicesGetDevicesWavesIDStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationGetDevicesWavesIDStationsCmd)

	operationPatchDevicesDeviceidUdapiVersionUdapiurlCmd, err := makeOperationDevicesPatchDevicesDeviceidUdapiVersionUdapiurlCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPatchDevicesDeviceidUdapiVersionUdapiurlCmd)

	operationPatchDevicesOnusIDCmd, err := makeOperationDevicesPatchDevicesOnusIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPatchDevicesOnusIDCmd)

	operationPostDevicesAirmaxesStationsCmd, err := makeOperationDevicesPostDevicesAirmaxesStationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesAirmaxesStationsCmd)

	operationPostDevicesAuthorizeCmd, err := makeOperationDevicesPostDevicesAuthorizeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesAuthorizeCmd)

	operationPostDevicesAuthorizefirstCmd, err := makeOperationDevicesPostDevicesAuthorizefirstCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesAuthorizefirstCmd)

	operationPostDevicesBackupsCmd, err := makeOperationDevicesPostDevicesBackupsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesBackupsCmd)

	operationPostDevicesBlackboxesConfigCmd, err := makeOperationDevicesPostDevicesBlackboxesConfigCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesBlackboxesConfigCmd)

	operationPostDevicesBulkdeleteCmd, err := makeOperationDevicesPostDevicesBulkdeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesBulkdeleteCmd)

	operationPostDevicesConnectOtherCmd, err := makeOperationDevicesPostDevicesConnectOtherCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesConnectOtherCmd)

	operationPostDevicesConnectUbntCmd, err := makeOperationDevicesPostDevicesConnectUbntCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesConnectUbntCmd)

	operationPostDevicesDeviceidBackupsCmd, err := makeOperationDevicesPostDevicesDeviceidBackupsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidBackupsCmd)

	operationPostDevicesDeviceidBackupsBackupidApplyCmd, err := makeOperationDevicesPostDevicesDeviceidBackupsBackupidApplyCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidBackupsBackupidApplyCmd)

	operationPostDevicesDeviceidInterfacesBridgeCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesBridgeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesBridgeCmd)

	operationPostDevicesDeviceidInterfacesDisablelagCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesDisablelagCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesDisablelagCmd)

	operationPostDevicesDeviceidInterfacesEnablelagCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesEnablelagCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesEnablelagCmd)

	operationPostDevicesDeviceidInterfacesInterfaceidResetstatsCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesInterfaceidResetstatsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesInterfaceidResetstatsCmd)

	operationPostDevicesDeviceidInterfacesInterfacenameBlockCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesInterfacenameBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesInterfacenameBlockCmd)

	operationPostDevicesDeviceidInterfacesInterfacenameCabletestCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesInterfacenameCabletestCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesInterfacenameCabletestCmd)

	operationPostDevicesDeviceidInterfacesInterfacenameResetCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesInterfacenameResetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesInterfacenameResetCmd)

	operationPostDevicesDeviceidInterfacesInterfacenameUnblockCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesInterfacenameUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesInterfacenameUnblockCmd)

	operationPostDevicesDeviceidInterfacesLagCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesLagCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesLagCmd)

	operationPostDevicesDeviceidInterfacesPppoeCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesPppoeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesPppoeCmd)

	operationPostDevicesDeviceidInterfacesVlanCmd, err := makeOperationDevicesPostDevicesDeviceidInterfacesVlanCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidInterfacesVlanCmd)

	operationPostDevicesDeviceidUdapiVersionUdapiurlCmd, err := makeOperationDevicesPostDevicesDeviceidUdapiVersionUdapiurlCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesDeviceidUdapiVersionUdapiurlCmd)

	operationPostDevicesEroutersIDDhcpLeasesCmd, err := makeOperationDevicesPostDevicesEroutersIDDhcpLeasesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDDhcpLeasesCmd)

	operationPostDevicesEroutersIDDhcpServersCmd, err := makeOperationDevicesPostDevicesEroutersIDDhcpServersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDDhcpServersCmd)

	operationPostDevicesEroutersIDDhcpServersServernameBlockCmd, err := makeOperationDevicesPostDevicesEroutersIDDhcpServersServernameBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDDhcpServersServernameBlockCmd)

	operationPostDevicesEroutersIDDhcpServersServernameUnblockCmd, err := makeOperationDevicesPostDevicesEroutersIDDhcpServersServernameUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDDhcpServersServernameUnblockCmd)

	operationPostDevicesEroutersIDRouterOspfAreasCmd, err := makeOperationDevicesPostDevicesEroutersIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDRouterOspfAreasCmd)

	operationPostDevicesEroutersIDRouterRoutesCmd, err := makeOperationDevicesPostDevicesEroutersIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDRouterRoutesCmd)

	operationPostDevicesEroutersIDRouterRoutesBlockCmd, err := makeOperationDevicesPostDevicesEroutersIDRouterRoutesBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDRouterRoutesBlockCmd)

	operationPostDevicesEroutersIDRouterRoutesDeleteCmd, err := makeOperationDevicesPostDevicesEroutersIDRouterRoutesDeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDRouterRoutesDeleteCmd)

	operationPostDevicesEroutersIDRouterRoutesUnblockCmd, err := makeOperationDevicesPostDevicesEroutersIDRouterRoutesUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesEroutersIDRouterRoutesUnblockCmd)

	operationPostDevicesIDAuthorizeCmd, err := makeOperationDevicesPostDevicesIDAuthorizeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDAuthorizeCmd)

	operationPostDevicesIDIplinkRedirectCmd, err := makeOperationDevicesPostDevicesIDIplinkRedirectCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDIplinkRedirectCmd)

	operationPostDevicesIDLocateStartCmd, err := makeOperationDevicesPostDevicesIDLocateStartCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDLocateStartCmd)

	operationPostDevicesIDLocateStopCmd, err := makeOperationDevicesPostDevicesIDLocateStopCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDLocateStopCmd)

	operationPostDevicesIDRefreshCmd, err := makeOperationDevicesPostDevicesIDRefreshCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRefreshCmd)

	operationPostDevicesIDResetlinkscoreCmd, err := makeOperationDevicesPostDevicesIDResetlinkscoreCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDResetlinkscoreCmd)

	operationPostDevicesIDRestartCmd, err := makeOperationDevicesPostDevicesIDRestartCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRestartCmd)

	operationPostDevicesIDRouterOspfAreasCmd, err := makeOperationDevicesPostDevicesIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRouterOspfAreasCmd)

	operationPostDevicesIDRouterRoutesCmd, err := makeOperationDevicesPostDevicesIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRouterRoutesCmd)

	operationPostDevicesIDRouterRoutesBlockCmd, err := makeOperationDevicesPostDevicesIDRouterRoutesBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRouterRoutesBlockCmd)

	operationPostDevicesIDRouterRoutesDeleteCmd, err := makeOperationDevicesPostDevicesIDRouterRoutesDeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRouterRoutesDeleteCmd)

	operationPostDevicesIDRouterRoutesUnblockCmd, err := makeOperationDevicesPostDevicesIDRouterRoutesUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDRouterRoutesUnblockCmd)

	operationPostDevicesIDSystemUnmsHostnameReachableCmd, err := makeOperationDevicesPostDevicesIDSystemUnmsHostnameReachableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDSystemUnmsHostnameReachableCmd)

	operationPostDevicesIDSystemUnmsKeyReachableCmd, err := makeOperationDevicesPostDevicesIDSystemUnmsKeyReachableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDSystemUnmsKeyReachableCmd)

	operationPostDevicesIDUnassignCmd, err := makeOperationDevicesPostDevicesIDUnassignCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDUnassignCmd)

	operationPostDevicesIDUpdateCmd, err := makeOperationDevicesPostDevicesIDUpdateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDUpdateCmd)

	operationPostDevicesIDUpgradetolatestCmd, err := makeOperationDevicesPostDevicesIDUpgradetolatestCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDUpgradetolatestCmd)

	operationPostDevicesIDVlansCmd, err := makeOperationDevicesPostDevicesIDVlansCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesIDVlansCmd)

	operationPostDevicesImportCmd, err := makeOperationDevicesPostDevicesImportCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesImportCmd)

	operationPostDevicesMaintenanceDisableCmd, err := makeOperationDevicesPostDevicesMaintenanceDisableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesMaintenanceDisableCmd)

	operationPostDevicesMaintenanceEnableCmd, err := makeOperationDevicesPostDevicesMaintenanceEnableCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesMaintenanceEnableCmd)

	operationPostDevicesOltsIDOnuProfilesCmd, err := makeOperationDevicesPostDevicesOltsIDOnuProfilesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesOltsIDOnuProfilesCmd)

	operationPostDevicesOnusIDBlockCmd, err := makeOperationDevicesPostDevicesOnusIDBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesOnusIDBlockCmd)

	operationPostDevicesOnusIDResetstatsCmd, err := makeOperationDevicesPostDevicesOnusIDResetstatsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesOnusIDResetstatsCmd)

	operationPostDevicesOnusIDUnblockCmd, err := makeOperationDevicesPostDevicesOnusIDUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesOnusIDUnblockCmd)

	operationPostDevicesOnusIDUpdateCmd, err := makeOperationDevicesPostDevicesOnusIDUpdateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesOnusIDUpdateCmd)

	operationPostDevicesRefreshCmd, err := makeOperationDevicesPostDevicesRefreshCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesRefreshCmd)

	operationPostDevicesSystemUnmsHostnameCmd, err := makeOperationDevicesPostDevicesSystemUnmsHostnameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesSystemUnmsHostnameCmd)

	operationPostDevicesSystemUnmsKeyCmd, err := makeOperationDevicesPostDevicesSystemUnmsKeyCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesSystemUnmsKeyCmd)

	operationPostDevicesUisprsIDDhcpLeasesCmd, err := makeOperationDevicesPostDevicesUisprsIDDhcpLeasesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDDhcpLeasesCmd)

	operationPostDevicesUisprsIDDhcpServersCmd, err := makeOperationDevicesPostDevicesUisprsIDDhcpServersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDDhcpServersCmd)

	operationPostDevicesUisprsIDDhcpServersServernameBlockCmd, err := makeOperationDevicesPostDevicesUisprsIDDhcpServersServernameBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDDhcpServersServernameBlockCmd)

	operationPostDevicesUisprsIDDhcpServersServernameUnblockCmd, err := makeOperationDevicesPostDevicesUisprsIDDhcpServersServernameUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDDhcpServersServernameUnblockCmd)

	operationPostDevicesUisprsIDFirewallFiltersFilternameRuleCmd, err := makeOperationDevicesPostDevicesUisprsIDFirewallFiltersFilternameRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDFirewallFiltersFilternameRuleCmd)

	operationPostDevicesUisprsIDFirewallManglesManglenameRuleCmd, err := makeOperationDevicesPostDevicesUisprsIDFirewallManglesManglenameRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDFirewallManglesManglenameRuleCmd)

	operationPostDevicesUisprsIDFirewallNatsRuleCmd, err := makeOperationDevicesPostDevicesUisprsIDFirewallNatsRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDFirewallNatsRuleCmd)

	operationPostDevicesUisprsIDFirewallSetsSetCmd, err := makeOperationDevicesPostDevicesUisprsIDFirewallSetsSetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDFirewallSetsSetCmd)

	operationPostDevicesUisprsIDRouterOspfAreasCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterOspfAreasCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterOspfAreasCmd)

	operationPostDevicesUisprsIDRouterOspfInterfaceCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterOspfInterfaceCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterOspfInterfaceCmd)

	operationPostDevicesUisprsIDRouterRoutesCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterRoutesCmd)

	operationPostDevicesUisprsIDRouterRoutesBlockCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterRoutesBlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterRoutesBlockCmd)

	operationPostDevicesUisprsIDRouterRoutesDeleteCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterRoutesDeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterRoutesDeleteCmd)

	operationPostDevicesUisprsIDRouterRoutesUnblockCmd, err := makeOperationDevicesPostDevicesUisprsIDRouterRoutesUnblockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPostDevicesUisprsIDRouterRoutesUnblockCmd)

	operationPutDevicesAircubesIDConfigNetworkCmd, err := makeOperationDevicesPutDevicesAircubesIDConfigNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDConfigNetworkCmd)

	operationPutDevicesAircubesIDConfigSystemCmd, err := makeOperationDevicesPutDevicesAircubesIDConfigSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDConfigSystemCmd)

	operationPutDevicesAircubesIDConfigWirelessCmd, err := makeOperationDevicesPutDevicesAircubesIDConfigWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDConfigWirelessCmd)

	operationPutDevicesAircubesIDNetworkCmd, err := makeOperationDevicesPutDevicesAircubesIDNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDNetworkCmd)

	operationPutDevicesAircubesIDSystemCmd, err := makeOperationDevicesPutDevicesAircubesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDSystemCmd)

	operationPutDevicesAircubesIDWirelessCmd, err := makeOperationDevicesPutDevicesAircubesIDWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAircubesIDWirelessCmd)

	operationPutDevicesAirmaxesIDConfigWirelessCmd, err := makeOperationDevicesPutDevicesAirmaxesIDConfigWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAirmaxesIDConfigWirelessCmd)

	operationPutDevicesAirmaxesIDSystemUsersCmd, err := makeOperationDevicesPutDevicesAirmaxesIDSystemUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesAirmaxesIDSystemUsersCmd)

	operationPutDevicesBlackboxesIDConfigCmd, err := makeOperationDevicesPutDevicesBlackboxesIDConfigCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesBlackboxesIDConfigCmd)

	operationPutDevicesDeviceidBackupsCmd, err := makeOperationDevicesPutDevicesDeviceidBackupsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidBackupsCmd)

	operationPutDevicesDeviceidBackupsBackupidCmd, err := makeOperationDevicesPutDevicesDeviceidBackupsBackupidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidBackupsBackupidCmd)

	operationPutDevicesDeviceidInterfacesInterfacenameCmd, err := makeOperationDevicesPutDevicesDeviceidInterfacesInterfacenameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidInterfacesInterfacenameCmd)

	operationPutDevicesDeviceidInterfacesInterfacenameOspfCmd, err := makeOperationDevicesPutDevicesDeviceidInterfacesInterfacenameOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidInterfacesInterfacenameOspfCmd)

	operationPutDevicesDeviceidLocationCmd, err := makeOperationDevicesPutDevicesDeviceidLocationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidLocationCmd)

	operationPutDevicesDeviceidUdapiVersionUdapiurlCmd, err := makeOperationDevicesPutDevicesDeviceidUdapiVersionUdapiurlCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesDeviceidUdapiVersionUdapiurlCmd)

	operationPutDevicesEroutersIDDhcpLeasesServernameLeaseidCmd, err := makeOperationDevicesPutDevicesEroutersIDDhcpLeasesServernameLeaseidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEroutersIDDhcpLeasesServernameLeaseidCmd)

	operationPutDevicesEroutersIDDhcpServersServernameCmd, err := makeOperationDevicesPutDevicesEroutersIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEroutersIDDhcpServersServernameCmd)

	operationPutDevicesEroutersIDRouterOspfCmd, err := makeOperationDevicesPutDevicesEroutersIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEroutersIDRouterOspfCmd)

	operationPutDevicesEroutersIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesPutDevicesEroutersIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEroutersIDRouterOspfAreasAreaidCmd)

	operationPutDevicesEroutersIDRouterRoutesCmd, err := makeOperationDevicesPutDevicesEroutersIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEroutersIDRouterRoutesCmd)

	operationPutDevicesEswitchesIDSystemUsersCmd, err := makeOperationDevicesPutDevicesEswitchesIDSystemUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesEswitchesIDSystemUsersCmd)

	operationPutDevicesIDRouterOspfCmd, err := makeOperationDevicesPutDevicesIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDRouterOspfCmd)

	operationPutDevicesIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesPutDevicesIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDRouterOspfAreasAreaidCmd)

	operationPutDevicesIDRouterRoutesCmd, err := makeOperationDevicesPutDevicesIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDRouterRoutesCmd)

	operationPutDevicesIDServicesCmd, err := makeOperationDevicesPutDevicesIDServicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDServicesCmd)

	operationPutDevicesIDSystemCmd, err := makeOperationDevicesPutDevicesIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDSystemCmd)

	operationPutDevicesIDSystemUnmsCmd, err := makeOperationDevicesPutDevicesIDSystemUnmsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDSystemUnmsCmd)

	operationPutDevicesIDSystemUsersCmd, err := makeOperationDevicesPutDevicesIDSystemUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesIDSystemUsersCmd)

	operationPutDevicesOltsIDOnuPoliciesCmd, err := makeOperationDevicesPutDevicesOltsIDOnuPoliciesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesOltsIDOnuPoliciesCmd)

	operationPutDevicesOltsIDOnuProfilesProfileidCmd, err := makeOperationDevicesPutDevicesOltsIDOnuProfilesProfileidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesOltsIDOnuProfilesProfileidCmd)

	operationPutDevicesOnusIDNetworkCmd, err := makeOperationDevicesPutDevicesOnusIDNetworkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesOnusIDNetworkCmd)

	operationPutDevicesOnusIDSystemCmd, err := makeOperationDevicesPutDevicesOnusIDSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesOnusIDSystemCmd)

	operationPutDevicesOnusIDWirelessCmd, err := makeOperationDevicesPutDevicesOnusIDWirelessCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesOnusIDWirelessCmd)

	operationPutDevicesSolarbeamsIDConfigSystemCmd, err := makeOperationDevicesPutDevicesSolarbeamsIDConfigSystemCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesSolarbeamsIDConfigSystemCmd)

	operationPutDevicesToughswitchesIDSystemUsersCmd, err := makeOperationDevicesPutDevicesToughswitchesIDSystemUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesToughswitchesIDSystemUsersCmd)

	operationPutDevicesUisprsIDDhcpLeasesServernameLeaseidCmd, err := makeOperationDevicesPutDevicesUisprsIDDhcpLeasesServernameLeaseidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDDhcpLeasesServernameLeaseidCmd)

	operationPutDevicesUisprsIDDhcpServersServernameCmd, err := makeOperationDevicesPutDevicesUisprsIDDhcpServersServernameCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDDhcpServersServernameCmd)

	operationPutDevicesUisprsIDFirewallFilterChainCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallFilterChainCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallFilterChainCmd)

	operationPutDevicesUisprsIDFirewallFiltersFilternameRuleCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallFiltersFilternameRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallFiltersFilternameRuleCmd)

	operationPutDevicesUisprsIDFirewallManglesManglenameRuleCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallManglesManglenameRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallManglesManglenameRuleCmd)

	operationPutDevicesUisprsIDFirewallNatsRuleCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallNatsRuleCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallNatsRuleCmd)

	operationPutDevicesUisprsIDFirewallNatsRulesCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallNatsRulesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallNatsRulesCmd)

	operationPutDevicesUisprsIDFirewallSetsSetCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallSetsSetCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallSetsSetCmd)

	operationPutDevicesUisprsIDFirewallSettingsCmd, err := makeOperationDevicesPutDevicesUisprsIDFirewallSettingsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDFirewallSettingsCmd)

	operationPutDevicesUisprsIDRouterOspfCmd, err := makeOperationDevicesPutDevicesUisprsIDRouterOspfCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDRouterOspfCmd)

	operationPutDevicesUisprsIDRouterOspfAreasAreaidCmd, err := makeOperationDevicesPutDevicesUisprsIDRouterOspfAreasAreaidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDRouterOspfAreasAreaidCmd)

	operationPutDevicesUisprsIDRouterOspfInterfaceCmd, err := makeOperationDevicesPutDevicesUisprsIDRouterOspfInterfaceCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDRouterOspfInterfaceCmd)

	operationPutDevicesUisprsIDRouterRoutesCmd, err := makeOperationDevicesPutDevicesUisprsIDRouterRoutesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUisprsIDRouterRoutesCmd)

	operationPutDevicesUispssIDSystemUsersCmd, err := makeOperationDevicesPutDevicesUispssIDSystemUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDevicesCmd.AddCommand(operationPutDevicesUispssIDSystemUsersCmd)

	return operationGroupDevicesCmd, nil
}
func makeOperationGroupDiscoveryCmd() (*cobra.Command, error) {
	operationGroupDiscoveryCmd := &cobra.Command{
		Use:  "discovery",
		Long: ``,
	}

	operationGetDiscoveryScanstatusCmd, err := makeOperationDiscoveryGetDiscoveryScanstatusCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationGetDiscoveryScanstatusCmd)

	operationGetDiscoveryStatusDeviceidCmd, err := makeOperationDiscoveryGetDiscoveryStatusDeviceidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationGetDiscoveryStatusDeviceidCmd)

	operationPostDiscoveryConnectOtherCmd, err := makeOperationDiscoveryPostDiscoveryConnectOtherCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationPostDiscoveryConnectOtherCmd)

	operationPostDiscoveryConnectUbntCmd, err := makeOperationDiscoveryPostDiscoveryConnectUbntCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationPostDiscoveryConnectUbntCmd)

	operationPostDiscoveryImportCmd, err := makeOperationDiscoveryPostDiscoveryImportCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationPostDiscoveryImportCmd)

	operationPostDiscoveryRescanCmd, err := makeOperationDiscoveryPostDiscoveryRescanCmd()
	if err != nil {
		return nil, err
	}
	operationGroupDiscoveryCmd.AddCommand(operationPostDiscoveryRescanCmd)

	return operationGroupDiscoveryCmd, nil
}
func makeOperationGroupExportCmd() (*cobra.Command, error) {
	operationGroupExportCmd := &cobra.Command{
		Use:  "export",
		Long: ``,
	}

	operationGetGdprClientsIDCmd, err := makeOperationExportGetGdprClientsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupExportCmd.AddCommand(operationGetGdprClientsIDCmd)

	return operationGroupExportCmd, nil
}
func makeOperationGroupFirmwareCmd() (*cobra.Command, error) {
	operationGroupFirmwareCmd := &cobra.Command{
		Use:  "firmware",
		Long: ``,
	}

	operationGetFirmwaresCmd, err := makeOperationFirmwareGetFirmwaresCmd()
	if err != nil {
		return nil, err
	}
	operationGroupFirmwareCmd.AddCommand(operationGetFirmwaresCmd)

	operationPostFirmwaresCmd, err := makeOperationFirmwarePostFirmwaresCmd()
	if err != nil {
		return nil, err
	}
	operationGroupFirmwareCmd.AddCommand(operationPostFirmwaresCmd)

	operationPostFirmwaresDeleteCmd, err := makeOperationFirmwarePostFirmwaresDeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupFirmwareCmd.AddCommand(operationPostFirmwaresDeleteCmd)

	operationPostFirmwaresDownloadCmd, err := makeOperationFirmwarePostFirmwaresDownloadCmd()
	if err != nil {
		return nil, err
	}
	operationGroupFirmwareCmd.AddCommand(operationPostFirmwaresDownloadCmd)

	return operationGroupFirmwareCmd, nil
}
func makeOperationGroupGatewaysCmd() (*cobra.Command, error) {
	operationGroupGatewaysCmd := &cobra.Command{
		Use:  "gateways",
		Long: ``,
	}

	operationDeleteGatewaysIDCmd, err := makeOperationGatewaysDeleteGatewaysIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupGatewaysCmd.AddCommand(operationDeleteGatewaysIDCmd)

	operationGetGatewaysCmd, err := makeOperationGatewaysGetGatewaysCmd()
	if err != nil {
		return nil, err
	}
	operationGroupGatewaysCmd.AddCommand(operationGetGatewaysCmd)

	operationGetGatewaysIDCmd, err := makeOperationGatewaysGetGatewaysIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupGatewaysCmd.AddCommand(operationGetGatewaysIDCmd)

	operationPostGatewaysCmd, err := makeOperationGatewaysPostGatewaysCmd()
	if err != nil {
		return nil, err
	}
	operationGroupGatewaysCmd.AddCommand(operationPostGatewaysCmd)

	operationPutGatewaysIDCmd, err := makeOperationGatewaysPutGatewaysIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupGatewaysCmd.AddCommand(operationPutGatewaysIDCmd)

	return operationGroupGatewaysCmd, nil
}
func makeOperationGroupInstallationsCmd() (*cobra.Command, error) {
	operationGroupInstallationsCmd := &cobra.Command{
		Use:  "installations",
		Long: ``,
	}

	operationGetInstallationsDevicesCmd, err := makeOperationInstallationsGetInstallationsDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationGetInstallationsDevicesCmd)

	operationGetInstallationsIDCmd, err := makeOperationInstallationsGetInstallationsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationGetInstallationsIDCmd)

	operationGetInstallationsIDMacConfigurationCmd, err := makeOperationInstallationsGetInstallationsIDMacConfigurationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationGetInstallationsIDMacConfigurationCmd)

	operationPostInstallationsCmd, err := makeOperationInstallationsPostInstallationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPostInstallationsCmd)

	operationPostInstallationsCoverageCmd, err := makeOperationInstallationsPostInstallationsCoverageCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPostInstallationsCoverageCmd)

	operationPostInstallationsDevicesCmd, err := makeOperationInstallationsPostInstallationsDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPostInstallationsDevicesCmd)

	operationPostInstallationsIDChatCmd, err := makeOperationInstallationsPostInstallationsIDChatCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPostInstallationsIDChatCmd)

	operationPostUserLocationCmd, err := makeOperationInstallationsPostUserLocationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPostUserLocationCmd)

	operationPutInstallationsIDMacCmd, err := makeOperationInstallationsPutInstallationsIDMacCmd()
	if err != nil {
		return nil, err
	}
	operationGroupInstallationsCmd.AddCommand(operationPutInstallationsIDMacCmd)

	return operationGroupInstallationsCmd, nil
}
func makeOperationGroupLogsCmd() (*cobra.Command, error) {
	operationGroupLogsCmd := &cobra.Command{
		Use:  "logs",
		Long: ``,
	}

	operationGetLogsCmd, err := makeOperationLogsGetLogsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupLogsCmd.AddCommand(operationGetLogsCmd)

	return operationGroupLogsCmd, nil
}
func makeOperationGroupOutagesCmd() (*cobra.Command, error) {
	operationGroupOutagesCmd := &cobra.Command{
		Use:  "outages",
		Long: ``,
	}

	operationGetOutagesCmd, err := makeOperationOutagesGetOutagesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupOutagesCmd.AddCommand(operationGetOutagesCmd)

	return operationGroupOutagesCmd, nil
}
func makeOperationGroupServerCmd() (*cobra.Command, error) {
	operationGroupServerCmd := &cobra.Command{
		Use:  "server",
		Long: ``,
	}

	operationGetNmsAddressCmd, err := makeOperationServerGetNmsAddressCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsAddressCmd)

	operationGetNmsBlogPostsCmd, err := makeOperationServerGetNmsBlogPostsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsBlogPostsCmd)

	operationGetNmsChangedCmd, err := makeOperationServerGetNmsChangedCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsChangedCmd)

	operationGetNmsConnectionCmd, err := makeOperationServerGetNmsConnectionCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsConnectionCmd)

	operationGetNmsEnumsCmd, err := makeOperationServerGetNmsEnumsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsEnumsCmd)

	operationGetNmsHeartbeatCmd, err := makeOperationServerGetNmsHeartbeatCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsHeartbeatCmd)

	operationGetNmsLogverbosityCmd, err := makeOperationServerGetNmsLogverbosityCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsLogverbosityCmd)

	operationGetNmsMailserverCmd, err := makeOperationServerGetNmsMailserverCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsMailserverCmd)

	operationGetNmsMaintenanceBackupCmd, err := makeOperationServerGetNmsMaintenanceBackupCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsMaintenanceBackupCmd)

	operationGetNmsMaintenanceBackupRestoreCmd, err := makeOperationServerGetNmsMaintenanceBackupRestoreCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsMaintenanceBackupRestoreCmd)

	operationGetNmsMaintenanceSupportinfoCmd, err := makeOperationServerGetNmsMaintenanceSupportinfoCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsMaintenanceSupportinfoCmd)

	operationGetNmsNewsCmd, err := makeOperationServerGetNmsNewsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsNewsCmd)

	operationGetNmsQuestionnairesActiveCmd, err := makeOperationServerGetNmsQuestionnairesActiveCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsQuestionnairesActiveCmd)

	operationGetNmsSearchCmd, err := makeOperationServerGetNmsSearchCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsSearchCmd)

	operationGetNmsServerconfigCmd, err := makeOperationServerGetNmsServerconfigCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsServerconfigCmd)

	operationGetNmsServertimeCmd, err := makeOperationServerGetNmsServertimeCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsServertimeCmd)

	operationGetNmsSettingsCmd, err := makeOperationServerGetNmsSettingsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsSettingsCmd)

	operationGetNmsSetupCmd, err := makeOperationServerGetNmsSetupCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsSetupCmd)

	operationGetNmsStatisticsCmd, err := makeOperationServerGetNmsStatisticsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsStatisticsCmd)

	operationGetNmsSummaryCmd, err := makeOperationServerGetNmsSummaryCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsSummaryCmd)

	operationGetNmsTrafficBlacklistCmd, err := makeOperationServerGetNmsTrafficBlacklistCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsTrafficBlacklistCmd)

	operationGetNmsTrafficSubnetsCmd, err := makeOperationServerGetNmsTrafficSubnetsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsTrafficSubnetsCmd)

	operationGetNmsUpdateCmd, err := makeOperationServerGetNmsUpdateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsUpdateCmd)

	operationGetNmsUpdateLogCmd, err := makeOperationServerGetNmsUpdateLogCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsUpdateLogCmd)

	operationGetNmsVersionCmd, err := makeOperationServerGetNmsVersionCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsVersionCmd)

	operationGetNmsVersionLatestCmd, err := makeOperationServerGetNmsVersionLatestCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationGetNmsVersionLatestCmd)

	operationPostNmsBlogPostsPostidReadCmd, err := makeOperationServerPostNmsBlogPostsPostidReadCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsBlogPostsPostidReadCmd)

	operationPostNmsBlogPostsReadallCmd, err := makeOperationServerPostNmsBlogPostsReadallCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsBlogPostsReadallCmd)

	operationPostNmsLogverbosityCmd, err := makeOperationServerPostNmsLogverbosityCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsLogverbosityCmd)

	operationPostNmsMailserverTestCmd, err := makeOperationServerPostNmsMailserverTestCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsMailserverTestCmd)

	operationPostNmsQuestionnairesIDSubmitCmd, err := makeOperationServerPostNmsQuestionnairesIDSubmitCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsQuestionnairesIDSubmitCmd)

	operationPostNmsQuestionnairesIDTouchCmd, err := makeOperationServerPostNmsQuestionnairesIDTouchCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsQuestionnairesIDTouchCmd)

	operationPostNmsSetupCmd, err := makeOperationServerPostNmsSetupCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsSetupCmd)

	operationPostNmsSetupStartCmd, err := makeOperationServerPostNmsSetupStartCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsSetupStartCmd)

	operationPostNmsSetupSurveyCmd, err := makeOperationServerPostNmsSetupSurveyCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsSetupSurveyCmd)

	operationPostNmsTrafficBlacklistCmd, err := makeOperationServerPostNmsTrafficBlacklistCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsTrafficBlacklistCmd)

	operationPostNmsTrafficSubnetsCmd, err := makeOperationServerPostNmsTrafficSubnetsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPostNmsTrafficSubnetsCmd)

	operationPutNmsMailserverCmd, err := makeOperationServerPutNmsMailserverCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPutNmsMailserverCmd)

	operationPutNmsMaintenanceBackupCmd, err := makeOperationServerPutNmsMaintenanceBackupCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPutNmsMaintenanceBackupCmd)

	operationPutNmsRefreshcertificateCmd, err := makeOperationServerPutNmsRefreshcertificateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPutNmsRefreshcertificateCmd)

	operationPutNmsSettingsCmd, err := makeOperationServerPutNmsSettingsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPutNmsSettingsCmd)

	operationPutNmsUpdateCmd, err := makeOperationServerPutNmsUpdateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupServerCmd.AddCommand(operationPutNmsUpdateCmd)

	return operationGroupServerCmd, nil
}
func makeOperationGroupSimulationCmd() (*cobra.Command, error) {
	operationGroupSimulationCmd := &cobra.Command{
		Use:  "simulation",
		Long: ``,
	}

	operationDeleteSimulationDevicesIDCmd, err := makeOperationSimulationDeleteSimulationDevicesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationDeleteSimulationDevicesIDCmd)

	operationGetSimulationCmd, err := makeOperationSimulationGetSimulationCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationGetSimulationCmd)

	operationGetSimulationDevicesCmd, err := makeOperationSimulationGetSimulationDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationGetSimulationDevicesCmd)

	operationGetSimulationLinksCmd, err := makeOperationSimulationGetSimulationLinksCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationGetSimulationLinksCmd)

	operationPatchSimulationDevicesIDCmd, err := makeOperationSimulationPatchSimulationDevicesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationPatchSimulationDevicesIDCmd)

	operationPatchSimulationLinksIDCmd, err := makeOperationSimulationPatchSimulationLinksIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationPatchSimulationLinksIDCmd)

	operationPostSimulationDevicesCmd, err := makeOperationSimulationPostSimulationDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationPostSimulationDevicesCmd)

	operationPutSimulationDevicesIDCmd, err := makeOperationSimulationPutSimulationDevicesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationPutSimulationDevicesIDCmd)

	operationPutSimulationLinksIDCmd, err := makeOperationSimulationPutSimulationLinksIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSimulationCmd.AddCommand(operationPutSimulationLinksIDCmd)

	return operationGroupSimulationCmd, nil
}
func makeOperationGroupSitesCmd() (*cobra.Command, error) {
	operationGroupSitesCmd := &cobra.Command{
		Use:  "sites",
		Long: ``,
	}

	operationDeleteSitesDevicesiterelationsCmd, err := makeOperationSitesDeleteSitesDevicesiterelationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationDeleteSitesDevicesiterelationsCmd)

	operationDeleteSitesIDCmd, err := makeOperationSitesDeleteSitesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationDeleteSitesIDCmd)

	operationDeleteSitesSiteidImagesImageidCmd, err := makeOperationSitesDeleteSitesSiteidImagesImageidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationDeleteSitesSiteidImagesImageidCmd)

	operationGetSitesCmd, err := makeOperationSitesGetSitesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesCmd)

	operationGetSitesIDCmd, err := makeOperationSitesGetSitesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesIDCmd)

	operationGetSitesIDClientsCmd, err := makeOperationSitesGetSitesIDClientsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesIDClientsCmd)

	operationGetSitesIDImagesCmd, err := makeOperationSitesGetSitesIDImagesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesIDImagesCmd)

	operationGetSitesSearchCmd, err := makeOperationSitesGetSitesSearchCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSearchCmd)

	operationGetSitesSiteidImagesImageidCmd, err := makeOperationSitesGetSitesSiteidImagesImageidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidImagesImageidCmd)

	operationGetSitesSiteidQosCmd, err := makeOperationSitesGetSitesSiteidQosCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidQosCmd)

	operationGetSitesSiteidSlastatsCmd, err := makeOperationSitesGetSitesSiteidSlastatsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidSlastatsCmd)

	operationGetSitesSiteidStatisticsCmd, err := makeOperationSitesGetSitesSiteidStatisticsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidStatisticsCmd)

	operationGetSitesSiteidTrafficCmd, err := makeOperationSitesGetSitesSiteidTrafficCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidTrafficCmd)

	operationGetSitesSiteidTrafficIntervalCmd, err := makeOperationSitesGetSitesSiteidTrafficIntervalCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidTrafficIntervalCmd)

	operationGetSitesSiteidTrafficSummaryCmd, err := makeOperationSitesGetSitesSiteidTrafficSummaryCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesSiteidTrafficSummaryCmd)

	operationGetSitesTrafficCmd, err := makeOperationSitesGetSitesTrafficCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationGetSitesTrafficCmd)

	operationPatchSitesSiteidImagesImageidCmd, err := makeOperationSitesPatchSitesSiteidImagesImageidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPatchSitesSiteidImagesImageidCmd)

	operationPostSitesCmd, err := makeOperationSitesPostSitesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesCmd)

	operationPostSitesBulkdeleteCmd, err := makeOperationSitesPostSitesBulkdeleteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesBulkdeleteCmd)

	operationPostSitesDevicesiterelationsCmd, err := makeOperationSitesPostSitesDevicesiterelationsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesDevicesiterelationsCmd)

	operationPostSitesIDImagesCmd, err := makeOperationSitesPostSitesIDImagesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesIDImagesCmd)

	operationPostSitesSiteidImagesImageidReorderCmd, err := makeOperationSitesPostSitesSiteidImagesImageidReorderCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidImagesImageidReorderCmd)

	operationPostSitesSiteidImagesImageidRotateleftCmd, err := makeOperationSitesPostSitesSiteidImagesImageidRotateleftCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidImagesImageidRotateleftCmd)

	operationPostSitesSiteidImagesImageidRotaterightCmd, err := makeOperationSitesPostSitesSiteidImagesImageidRotaterightCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidImagesImageidRotaterightCmd)

	operationPostSitesSiteidSuspendCmd, err := makeOperationSitesPostSitesSiteidSuspendCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidSuspendCmd)

	operationPostSitesSiteidUcrmBindCmd, err := makeOperationSitesPostSitesSiteidUcrmBindCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidUcrmBindCmd)

	operationPostSitesSiteidUcrmUnbindCmd, err := makeOperationSitesPostSitesSiteidUcrmUnbindCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidUcrmUnbindCmd)

	operationPostSitesSiteidUnsuspendCmd, err := makeOperationSitesPostSitesSiteidUnsuspendCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesSiteidUnsuspendCmd)

	operationPostSitesUcrmBindingsCmd, err := makeOperationSitesPostSitesUcrmBindingsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPostSitesUcrmBindingsCmd)

	operationPutSitesIDCmd, err := makeOperationSitesPutSitesIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPutSitesIDCmd)

	operationPutSitesSiteidQosCmd, err := makeOperationSitesPutSitesSiteidQosCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSitesCmd.AddCommand(operationPutSitesSiteidQosCmd)

	return operationGroupSitesCmd, nil
}
func makeOperationGroupSpeedTestCmd() (*cobra.Command, error) {
	operationGroupSpeedTestCmd := &cobra.Command{
		Use:  "speed_test",
		Long: ``,
	}

	operationDeleteSpeedtestsIDCmd, err := makeOperationSpeedTestDeleteSpeedtestsIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSpeedTestCmd.AddCommand(operationDeleteSpeedtestsIDCmd)

	operationGetSpeedtestsCmd, err := makeOperationSpeedTestGetSpeedtestsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSpeedTestCmd.AddCommand(operationGetSpeedtestsCmd)

	operationPostSpeedtestsStartCmd, err := makeOperationSpeedTestPostSpeedtestsStartCmd()
	if err != nil {
		return nil, err
	}
	operationGroupSpeedTestCmd.AddCommand(operationPostSpeedtestsStartCmd)

	return operationGroupSpeedTestCmd, nil
}
func makeOperationGroupTasksCmd() (*cobra.Command, error) {
	operationGroupTasksCmd := &cobra.Command{
		Use:  "tasks",
		Long: ``,
	}

	operationGetTasksCmd, err := makeOperationTasksGetTasksCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTasksCmd.AddCommand(operationGetTasksCmd)

	operationGetTasksBatchidCmd, err := makeOperationTasksGetTasksBatchidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTasksCmd.AddCommand(operationGetTasksBatchidCmd)

	operationGetTasksInprogressCmd, err := makeOperationTasksGetTasksInprogressCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTasksCmd.AddCommand(operationGetTasksInprogressCmd)

	operationPostTasksCmd, err := makeOperationTasksPostTasksCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTasksCmd.AddCommand(operationPostTasksCmd)

	operationPostTasksBatchidCancelCmd, err := makeOperationTasksPostTasksBatchidCancelCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTasksCmd.AddCommand(operationPostTasksBatchidCancelCmd)

	return operationGroupTasksCmd, nil
}
func makeOperationGroupTokenCmd() (*cobra.Command, error) {
	operationGroupTokenCmd := &cobra.Command{
		Use:  "token",
		Long: ``,
	}

	operationDeleteTokenTokenidCmd, err := makeOperationTokenDeleteTokenTokenidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTokenCmd.AddCommand(operationDeleteTokenTokenidCmd)

	operationGetTokenCmd, err := makeOperationTokenGetTokenCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTokenCmd.AddCommand(operationGetTokenCmd)

	operationGetTokenTokenidCmd, err := makeOperationTokenGetTokenTokenidCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTokenCmd.AddCommand(operationGetTokenTokenidCmd)

	operationPostTokenCmd, err := makeOperationTokenPostTokenCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTokenCmd.AddCommand(operationPostTokenCmd)

	return operationGroupTokenCmd, nil
}
func makeOperationGroupTrafficCmd() (*cobra.Command, error) {
	operationGroupTrafficCmd := &cobra.Command{
		Use:  "traffic",
		Long: ``,
	}

	operationGetNmsTrafficCmd, err := makeOperationTrafficGetNmsTrafficCmd()
	if err != nil {
		return nil, err
	}
	operationGroupTrafficCmd.AddCommand(operationGetNmsTrafficCmd)

	return operationGroupTrafficCmd, nil
}
func makeOperationGroupUsersCmd() (*cobra.Command, error) {
	operationGroupUsersCmd := &cobra.Command{
		Use:  "users",
		Long: ``,
	}

	operationDeleteUsersIDCmd, err := makeOperationUsersDeleteUsersIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationDeleteUsersIDCmd)

	operationGetNmsKeepaliveCmd, err := makeOperationUsersGetNmsKeepaliveCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationGetNmsKeepaliveCmd)

	operationGetUsersCmd, err := makeOperationUsersGetUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationGetUsersCmd)

	operationPostUsersCmd, err := makeOperationUsersPostUsersCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPostUsersCmd)

	operationPostUsersIDReinviteCmd, err := makeOperationUsersPostUsersIDReinviteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPostUsersIDReinviteCmd)

	operationPostUsersIDReinviteLinkCmd, err := makeOperationUsersPostUsersIDReinviteLinkCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPostUsersIDReinviteLinkCmd)

	operationPostUsersImportCmd, err := makeOperationUsersPostUsersImportCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPostUsersImportCmd)

	operationPostUsersInviteCmd, err := makeOperationUsersPostUsersInviteCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPostUsersInviteCmd)

	operationPutUsersIDCmd, err := makeOperationUsersPutUsersIDCmd()
	if err != nil {
		return nil, err
	}
	operationGroupUsersCmd.AddCommand(operationPutUsersIDCmd)

	return operationGroupUsersCmd, nil
}
func makeOperationGroupVaultCmd() (*cobra.Command, error) {
	operationGroupVaultCmd := &cobra.Command{
		Use:  "vault",
		Long: ``,
	}

	operationGetVaultCredentialsCmd, err := makeOperationVaultGetVaultCredentialsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationGetVaultCredentialsCmd)

	operationGetVaultCredentialsDevicesCmd, err := makeOperationVaultGetVaultCredentialsDevicesCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationGetVaultCredentialsDevicesCmd)

	operationGetVaultDeviceidCredentialsCmd, err := makeOperationVaultGetVaultDeviceidCredentialsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationGetVaultDeviceidCredentialsCmd)

	operationPostVaultCredentialsCmd, err := makeOperationVaultPostVaultCredentialsCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationPostVaultCredentialsCmd)

	operationPostVaultCredentialsRegenerateCmd, err := makeOperationVaultPostVaultCredentialsRegenerateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationPostVaultCredentialsRegenerateCmd)

	operationPostVaultCredentialsUnlockCmd, err := makeOperationVaultPostVaultCredentialsUnlockCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationPostVaultCredentialsUnlockCmd)

	operationPostVaultDeviceidCredentialsRegenerateCmd, err := makeOperationVaultPostVaultDeviceidCredentialsRegenerateCmd()
	if err != nil {
		return nil, err
	}
	operationGroupVaultCmd.AddCommand(operationPostVaultDeviceidCredentialsRegenerateCmd)

	return operationGroupVaultCmd, nil
}
func makeOperationGroupWebSocketCmd() (*cobra.Command, error) {
	operationGroupWebSocketCmd := &cobra.Command{
		Use:  "web_socket",
		Long: ``,
	}

	operationPostWsapiConnectionCmd, err := makeOperationWebSocketPostWsapiConnectionCmd()
	if err != nil {
		return nil, err
	}
	operationGroupWebSocketCmd.AddCommand(operationPostWsapiConnectionCmd)

	operationPostWsapiSubscriptionCmd, err := makeOperationWebSocketPostWsapiSubscriptionCmd()
	if err != nil {
		return nil, err
	}
	operationGroupWebSocketCmd.AddCommand(operationPostWsapiSubscriptionCmd)

	return operationGroupWebSocketCmd, nil
}
